{"version":3,"sources":["Store/methods.js","Store/mapsUpdater.js","Store/index.js","Controllers/Switch.js","Widgets/widgets.js","Controllers/Button.js","Widgets/MapsBlock.js","Overview/index.js","LineHeat/index.js","PassengerAnalytics/index.js","Controllers/Input.js","Authenticate/index.js","App.js","reportWebVitals.js","index.js"],"names":["nowPlacebo","defaultState","active","theme","loginState","sessionData","now","Date","timeline","passengerMode","timePeriod","timeNoGo","flowSpectating","Store","state","action","newState","JSON","parse","stringify","type","session","logout","mode","live","time","value","defaultValue","initiated","pathData","heatData","dashboardData","lineSpectating","stationSpectating","station","flow","ageMapSpectating","inward","undefined","outward","newMapState","require","refreshDashboard","store","getState","data","line","hoverType","hoverID","searchObject","ageMap","console","log","expires","setExpiration","schoolDays","persistConfig","key","storage","CookieStorage","Cookies","expiration","default","persistedMethods","persistReducer","methods","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","exposedMethods","persistStore","mapsPersistConfig","mapsMethods","mapsUpdater","mapsStore","mapsExposedMethods","searchKey","requiredKey","result","forEach","theObject","error","date","year","getFullYear","toString","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","axios","post","then","response","msg","dispatch","catch","clearStorage","MapSwitch","props","switchOptions","this","setState","allOptions","optionsController","index","perOption","acClass","activated","push","id","onClick","className","style","enumOptions","React","Component","ThemeSwitch","themeNames","Fragment","position","height","transformToCentre","left","top","transform","defaultRoundCorner","makeAvailable","thing","linesConstructor","dataArray","tintArray","tooltip","lines","tooltipElement","converted","drawn","map","lineIndex","values","y","x","partPoint","name","Object","assign","dot","strokeWidth","dataKey","stroke","width","barConstructor","label","keys","barContent","labelSet","fill","isAnimationActive","Dashboard","nameLabel","theKeys","zoom","emptyData","zoomSet","theKeysSet","e","fixDictionaryKeys","size","innerRadius","tint","frame","borderRadius","children","slice","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","uv","pv","amt","port","r","SimpleTrends","SimpleBars","propTintArray","dataToConstruct","newDictionary","makeDictionaryPairs","AreaChartTrends","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","fillOpacity","GreatLegends","inside","getFromData","makeEmpty","SimplePieCharts","duetFrame","display","flexDirection","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","outerRadius","percent","radius","cos","sin","textAnchor","dominantBaseline","toFixed","isItZero","duet","nameKey","labelLine","entry","length","data0","layout","MNButtonStyle","backgroundColor","color","Button","disabled","variant","MapFuture","lazy","PassengerMaps","MapsBlock","datePicker","argumentPicker","selectedTime","flowStats","storeState","mapsState","userArguments","holiday","weather","enabled","condition","temperature","low","high","boom","failure","subscribe","modal","argument","newArguments","target","checked","dayprop","temperatures","predictionRequest","alert","handleOpen","tripStart","tripFinish","stationin","stationout","dettime","start","finish","tripCalculate","getTripForm","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","onChange","event","handleChange","row","Select","labelId","MenuItem","Slider","valueLabelDisplay","step","marks","min","max","foo","opacity","userSelect","cursor","getStats","moment","format","triggerStats","fontSize","marginTop","justifyContent","startTrip","finishTrip","getBeginTripButton","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","margin","utils","MomentUtils","handleTime","CardActions","handleTimeUpdate","FormControl","InputLabel","TextField","InputLabelProps","shrink","stationArguments","handlePredictionUpdate","fallback","PassengerMapsBlock","handlePassengerModeChange","body","document","Index","calculateSize","scrollHeight","scrollWidth","addEventListener","removeEventListener","highestFlow","overallFlow","highestDist4","lineFlow","LineHeat","xAxisMeasurements","HeatTimeline","passengerArray","PassengerAnalytics","stationInward","stationOutward","forceUpdate","newArray","arrayCoherence","getSlice","u","p","Input","handler","CertForm","handleSlider","newValue","duration","feedbackInfo","onSubmit","CertChange","Login","username","password","storeChange","bind","preventDefault","code","loginRequest","FormSheet","hello","LoginForm","handleLogin","handleForm","root","documentElement","App","setProperty","pagesList","exact","path","to","AnimationApp","persistor","handling","redirect","done","setTimeout","history","listen","location","pathname","wary","themeSwitchKey","themeSwitcherWary","handleShortcutKey","defaultPrevented","activeClassName","TransitionGroup","CSSTransition","classNames","timeout","Overview","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eec0cf27.chunk.js","sourcesContent":["const nowPlacebo = 'May 29, 2020 22:30:00'\nconst defaultState = {\n    active: \"dashboard\",\n    theme: 'light',\n    loginState: false,\n    sessionData: '',\n    now: new Date(nowPlacebo),\n    timeline: new Date(nowPlacebo),\n    passengerMode: '总客流',\n    timePeriod: '实时',\n    timeNoGo: '数据加载中',\n    flowSpectating: -1,\n}\nconst Store = (state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'login' && action.loginState) {\n        newState.loginState = true\n        newState.sessionData = action.session\n        return newState\n    }\n    if (action.type === 'certMan') {\n        if (action.logout) {\n            return defaultState\n        }\n    }\n    if (action.type === 'switchTheme') {\n        newState.theme = 'light'\n        if (state.theme === 'light') {\n            newState.theme = 'dark'\n        }\n        return newState\n    }\n    if (action.type === 'changePassengerMode') {\n        newState.passengerMode = action.mode\n        return newState\n    }\n    if (action.type === 'timeUpdate') {\n        if (action.live === true) {\n            newState.timePeriod = '实时'\n            newState.timeline = nowPlacebo\n        }\n        else {\n            if (action.time > state.now) {\n                newState.timePeriod = '预测'\n            }\n            else if (action.time < state.now) {\n                newState.timePeriod = '历史'\n            }\n            newState.timeline = action.time\n        }\n        return newState\n    }\n    if (action.type === 'noGo') {\n        newState.timeNoGo = action.value === '成功'\n        return newState\n    }\n    if (action.type === 'clear') {\n        return defaultState\n    }\n    return state\n}\nexport default Store","import store, {refreshDashboard, searchObject} from \"./index\";\n\nconst defaultValue = {\n    initiated: 0,\n    pathData: {},\n    heatData: {},\n    dashboardData: {},\n    lineSpectating: 'No',\n    stationSpectating: {station: '没有选中站点', flow: 0},\n    ageMapSpectating: {station: '没有选中站点', inward: undefined, outward: undefined}\n}\n\nconst Store = (state = defaultValue, action) => {\n    let newMapState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'refresh') {\n        if (!newMapState.initiated) {\n            newMapState.dashboardData = require('../stationaryPlaceholder/dashboard.json')\n            newMapState.pathData = require('../stationaryPlaceholder/paths.json')\n        }\n        refreshDashboard(store.getState().timeline)\n        return newMapState\n    }\n    if (action.type === 'loadDashboard') {\n        newMapState.dashboardData = action.data\n        return newMapState\n    }\n    if (action.type === 'hoverUpdate') {\n        newMapState.lineSpectating = action.line\n        if (action.hoverType === 'station' || action.hoverType === 'path') {\n            newMapState.stationSpectating[action.hoverType] = action.hoverID\n            newMapState.stationSpectating.flow = action.flow\n        }\n        if (action.hoverType === 'age') {\n            newMapState.ageMapSpectating.station = action.hoverID\n            newMapState.ageMapSpectating.inward = searchObject(newMapState.dashboardData.ageMap, 'station', action.hoverID, 'in')\n            newMapState.ageMapSpectating.outward = searchObject(newMapState.dashboardData.ageMap, 'station', action.hoverID, 'out')\n        }\n        console.log(newMapState)\n        return newMapState\n    }\n    if (action.type === 'clear') {\n        return defaultValue\n    }\n    return state\n}\nexport default Store","import { createStore } from \"redux\";\nimport methods from './methods';\nimport mapsUpdater from './mapsUpdater';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { CookieStorage } from 'redux-persist-cookie-storage';\nimport storage from 'redux-persist/lib/storage';\nimport Cookies from 'cookies-js';\nimport axios from \"axios\";\n\nlet expires = 22 * 86400\n\nexport function setExpiration(schoolDays)\n{\n    if (schoolDays === undefined) {\n        schoolDays = 22\n    }\n    expires = schoolDays * 86400;\n}\n\n//组件数据和会话\nconst persistConfig = {\n    key: 'root',\n    storage: new CookieStorage(Cookies, {expiration:\n        {default: expires}\n    })\n}\nconst persistedMethods = persistReducer(persistConfig, methods)\nlet store = createStore(persistedMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport let exposedMethods = persistStore(store)\nexport default store\n\n//地图存储\nconst mapsPersistConfig = {\n    key: 'maps',\n    storage: storage\n}\nconst mapsMethods = persistReducer(mapsPersistConfig, mapsUpdater)\nexport let mapsStore = createStore(mapsMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport let mapsExposedMethods = persistStore(mapsStore)\n\nexport function searchObject(data, searchKey, value, requiredKey) {\n    let result\n    try {\n        data.forEach(function (theObject) {\n            if (theObject[searchKey] === value) {\n                result = theObject[requiredKey]\n            }\n        })\n    }\n    catch(error)\n    {\n        console.error(error)\n        return result\n    }\n\n    return result\n}\nexport function refreshDashboard(timeline) {\n    if (timeline === undefined) {\n        console.log('undefined date')\n        return\n    }\n    const date = new Date(timeline)\n    const data = {\n        year: date.getFullYear().toString(),\n        month: (date.getMonth() + 1).toString(),\n        day: date.getDate().toString(),\n        hour: date.getHours().toString(),\n        minute: date.getMinutes().toString()\n    }\n    console.log('Time update request fired')\n    axios.post('/api/time/json', data)\n        .then(response => {\n            console.log(response.data.result.msg)\n            mapsStore.dispatch({\n                type: 'loadDashboard',\n                data: response.data\n            })\n            store.dispatch({\n                type: 'noGo',\n                value: response.data.result.msg\n            })\n        })\n        .catch(error => {\n            console.error(error)\n        })\n}\nexport function moodyTimeDifference(givenTime) {\n    const moodyHour = givenTime.getHours() + (givenTime.getMinutes() > 30 ? 1 : 0)\n    const moodyMin = givenTime.getMinutes() > 15 && givenTime.getMinutes() <= 45 ? 30 : 0\n    return givenTime.getMonth()+1 + ':' + givenTime.getDate() + ':' + moodyHour + ':' + moodyMin\n}\nexport function clearStorage() {\n    mapsStore.dispatch({type: 'clear'})\n    store.dispatch({type: 'clear'})\n}","import React from \"react\";\nimport store from \"../Store\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        let index = 0\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n                style={this.props.style}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport class ThemeSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState()\n        }\n    }\n    themeNames = ['深色', '浅色']\n    enumOptions() {\n        let optionsController = []\n        let index = 0\n        this.themeNames.forEach(\n            function (perOption) {\n                const {theme} = store.getState()\n                const themeOptions = ['dark', 'light']\n                let acClass = \"SwitchTick\"\n                if (theme === themeOptions[index]) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => {\n                            store.dispatch({\n                                type: 'switchTheme'\n                            })\n                        }}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n    dispatchTheme(value) {\n        store.dispatch({\n            type: 'switchTheme',\n            theme: value\n        })\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <div\n                    id={'controller-theme-switch'}\n                    className={\"SwitchBase\"}\n                    style={{position: 'absolute'}}\n                >\n                    {this.enumOptions()}\n                </div>\n                <div style={{height: 'calc(11pt + 30px)'}}/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport './style.css';\nimport {\n    PolarAngleAxis, XAxis, YAxis,\n    AreaChart, Area,\n    RadialBarChart, RadialBar,\n    LineChart, Line,\n    PieChart, Pie,\n    BarChart, Bar,\n    Legend, Tooltip,\n    Cell, CartesianGrid,\n    LabelList\n} from \"recharts\";\nimport '../Controllers/Switch';\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\nexport const defaultRoundCorner = 20;\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\nexport function makeAvailable(thing) {\n    if (thing !== undefined) {return thing}\n    return (<React.Fragment/>)\n}\nfunction fixDictionaryKeys(data, theKeys, zoom) {\n    let emptyData = [{}, {}, {}, {}]\n    const zoomSet = zoom === undefined ? 1 : zoom\n    const theKeysSet = theKeys === undefined ? ['name', 'value'] : theKeys\n    try {\n        data.map(function (value, index) {\n            emptyData[index] = {'name': value[theKeysSet[0]], 'value': value[theKeysSet[1]] * zoomSet}\n            return emptyData\n        }, emptyData, theKeysSet, zoomSet)\n    }\n    catch (e) {}\n    return emptyData\n}\nfunction makeDictionaryPairs(data, theKeys) {\n    let newDictionary = {}\n    try {\n        data.map(function (value) {\n            const key = value[theKeys[0]]\n            newDictionary[key] = value[theKeys[1]]\n            return true\n        }, theKeys)\n    }\n    catch (e) {}\n    return newDictionary\n}\nfunction linesConstructor(dataArray, tintArray, state, tooltip) {\n    const lines = dataArray.lines\n    const tooltipElement = tooltip ? [<Tooltip />] : []\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{strokeWidth: 3}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={2}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend/>\n            {tooltipElement}\n            {drawn}\n        </LineChart>\n    )\n}\nfunction barConstructor(dataArray, tintArray, state, label) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    const barContent = keys.map(function (key, index) {\n        let labelSet = []\n        if (label === true) {\n            labelSet = [<LabelList dataKey={key} position=\"top\" style={{fill: 'var(--themeColor)'}}/>]\n\n        }\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n                isAnimationActive={false}\n            >\n                {labelSet}\n            </Bar>\n        )\n    }, label)\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    render() {\n        const data = fixDictionaryKeys(this.props.data, this.props.keys, this.props.zoom)\n        const size = this.props.size * 1.25\n        const innerRadius = size / 3.75\n        const spacing = 0\n        const tint = this.props.tint === undefined ? [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"] : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner}\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(0, 1)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(1, 2)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(2, 3)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(3, 4)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    greatLegend(value) {\n        return (<span>{value}</span>)\n    }\n\n    render() {\n        const tint = this.props.tint === undefined ? \"#137A7F\" : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner, align: \"center\"}\n        const size = this.props.size\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[this.props.data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {borderRadius: defaultRoundCorner}\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={this.state.data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={2} dot={{r: 3}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={2} dot={{r: 3}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: defaultRoundCorner\n        }\n        const tint = this.props.tint === undefined ? [\"#EA0\", \"#08A\"] : this.props.tint\n        let nameLabel = makeAvailable(this.props.children)\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(this.props.data, tint, port, this.props.tooltip)}\n                <label className={'widgetLabel'}>\n                    {nameLabel}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    render() {\n        const dataToConstruct = this.props.keys === undefined ? this.props.data : makeDictionaryPairs(this.props.data, this.props.keys)\n        const tint = setTintArray(this.props.tint)\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"borderRadius\": defaultRoundCorner\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([dataToConstruct], tint, this.props.port, this.props.label)}\n                <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n            </div>\n        )\n    }\n}\n\nexport class AreaChartTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                \"name\": \"Page A\",\n                \"uv\": 4000,\n                \"pv\": 2400,\n                \"amt\": 2400\n            },\n            {\n                \"name\": \"Page B\",\n                \"uv\": 3000,\n                \"pv\": 1398,\n                \"amt\": 2210\n            },\n            {\n                \"name\": \"Page C\",\n                \"uv\": 2000,\n                \"pv\": 9800,\n                \"amt\": 2290\n            },\n            {\n                \"name\": \"Page D\",\n                \"uv\": 2780,\n                \"pv\": 3908,\n                \"amt\": 2000\n            },\n            {\n                \"name\": \"Page E\",\n                \"uv\": 1890,\n                \"pv\": 4800,\n                \"amt\": 2181\n            },\n            {\n                \"name\": \"Page F\",\n                \"uv\": 2390,\n                \"pv\": 3800,\n                \"amt\": 2500\n            },\n            {\n                \"name\": \"Page G\",\n                \"uv\": 3490,\n                \"pv\": 4300,\n                \"amt\": 2100\n            }\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: defaultRoundCorner\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <AreaChart\n                    width={port.width}\n                    height={port.height}\n                    data={this.state.data}\n                    style={transformToCentre}\n                >\n                    <defs>\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                    <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                </AreaChart>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class GreatLegends extends React.Component {\n    getFromData(data, index, key) {\n        try {return data[index][key]}\n        catch (error) {}\n        return undefined\n    }\n    makeEmpty(inside) {\n        return (inside === null || inside === undefined) ? '--' : inside\n    }\n    render() {\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": defaultRoundCorner\n        }\n        if (this.props.type === 'array')\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <div className={'GLContainer'}>\n                    <div className={'GLName'}>\n                        {this.getFromData(this.props.data, this.props.index, this.props.keys[0])}\n                    </div>\n                    <div className={'GLValue'}>\n                        {this.makeEmpty(this.getFromData(this.props.data, this.props.index, this.props.keys[1]))}\n                    </div>\n                </div>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n        if (this.props.type === 'straight') {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div className={'GLContainer'}>\n                        <div className=\"GLName\">\n                            {this.props.name}\n                        </div>\n                        <div className=\"GLValue\">\n                            {this.makeEmpty(this.props.value)}\n                        </div>\n                    </div>\n                    <label className={'widgetLabel'}>\n                        {makeAvailable(this.props.children)}\n                    </label>\n                </div>\n            )\n        }\n        return (<React.Fragment/>)\n    }\n}\n\nexport class SimplePieCharts extends React.Component {\n    isItZero(data) {\n        let result = false\n        data.map(function (data) {\n            if (data.value > 0) {\n                result = true\n                return\n            }\n        })\n        return result\n    }\n    render() {\n        const frame = {\n            width: \"100%\",\n            height: \"100%\",\n            borderRadius: defaultRoundCorner,\n        }\n        const duetFrame = {\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            borderRadius: defaultRoundCorner,\n            display: 'flex',\n            flexDirection: 'row'\n        }\n        const RADIAN = Math.PI / 180;\n        const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\n            const radius = innerRadius + (outerRadius - innerRadius) * 0.6;\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n            if (percent < .01) {\n                return <React.Fragment />\n            }\n            return (\n                <text x={x} y={y} fill=\"white\" textAnchor={'middle'} dominantBaseline=\"central\">\n                    {`${(percent * 100).toFixed(0)}%`}\n                </text>\n            )\n        }\n        const data = this.props.data\n        if (this.isItZero(data) === false) {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div style={transformToCentre}>当前情况无客流</div>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n        if (this.props.duet === true) {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div style={duetFrame}>\n                        <PieChart\n                            width={this.props.size}\n                            height={this.props.size}\n                        >\n                            <Pie\n                                data={data}\n                                nameKey={'key'}\n                                dataKey={'value'}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                            >\n                                {data.map((entry, index) => <Cell fill={this.props.tint[0][index % this.props.tint[0].length]}/>)}\n                            </Pie>\n                                <Legend />\n                        </PieChart>\n                        <PieChart\n                            width={this.props.size}\n                            height={this.props.size}\n                        >\n                            <Pie\n                                data={this.props.data0}\n                                nameKey={'key'}\n                                dataKey={'value'}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                            >\n                                {this.props.data0.map((entry, index) => <Cell fill={this.props.tint[1][index % this.props.tint[1].length]}/>)}\n                            </Pie>\n                            <Legend />\n                        </PieChart>\n                    </div>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <PieChart\n                        width={this.props.size + 50}\n                        height={this.props.size + 50}\n                        style={transformToCentre}\n                    >\n                        <Pie\n                            data={this.props.data}\n                            nameKey={'key'}\n                            dataKey={'value'}\n                            labelLine={false}\n                            label={renderCustomizedLabel}\n                            isAnimationActive={false}\n                        >\n                            {this.props.data.map((entry, index) => <Cell fill={this.props.tint[index % this.props.tint.length]}/>)}\n                        </Pie>\n                        <Legend layout={'vertical'} align={'right'} verticalAlign={'middle'}/>\n                    </PieChart>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n    }\n}","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: 'var(--themeButtonBackground)',\n    color: 'var(--themeColor)',\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n            type: (this.props.type !== undefined) ? this.props.type : \"\",\n            disabled: (this.props.disabled === true),\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick} type={this.state.type} disabled={this.state.disabled}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Suspense } from \"react\";\nimport store, { mapsStore } from \"../Store\";\nimport {\n    Button as MaterialButton,\n    Card, CardActions, CardContent, Typography,\n    FormControl, FormControlLabel, FormGroup, FormLabel,\n    Fade, Modal,\n    Checkbox, Slider, Select, MenuItem, TextField, InputLabel,\n} from \"@material-ui/core\";\nimport MapSwitch from \"../Controllers/Switch\";\nimport { Button } from \"../Controllers/Button\";\nimport { defaultRoundCorner } from \"./widgets\";\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst MapFuture = React.lazy(() => import('./Map'));\nconst PassengerMaps = React.lazy(() => import('./PassengerMaps'))\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction predictionRequest(userArguments) {\n    try {\n        axios.post('/python/predict', {\n            station: userArguments.boom.station,\n            flow: userArguments.boom.flow,\n            dayprop: userArguments.holiday,\n            weather: userArguments.weather.condition,\n            temperatures: [userArguments.weather.temperature.low, userArguments.weather.temperature.high],\n        })\n            .then(response => {console.log(response)})\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            datePicker: false,\n            argumentPicker: false,\n            activated: \"无\",\n            selectedTime: new Date(store.getState().timeline),\n            flowStats: true,\n            storeState: store.getState(),\n            mapsState: mapsStore.getState(),\n            userArguments: {\n                holiday: undefined,\n                weather: {\n                    enabled: false,\n                    condition: '阴',\n                    temperature: {\n                        low: undefined,\n                        high: undefined\n                    }\n                },\n                boom: {\n                    enabled: false,\n                    station: undefined,\n                    flow: undefined,\n                    type: 0,\n                    failure: false,\n                }\n            }\n        }\n        store.subscribe(() => this.setState({storeState: store.getState()}))\n        mapsStore.subscribe(() => this.setState({mapsState: mapsStore.getState()}))\n    }\n\n    handleOpen(modal) {\n        if (modal === 'datePicker') {this.setState({datePicker: !this.state.datePicker})}\n        if (modal === 'argumentPicker') {this.setState({argumentPicker: !this.state.argumentPicker})}\n    }\n    handleTime(e) {\n        this.setState({selectedTime: e})\n    }\n    handleChange(e, argument) {\n        let newArguments = this.state.userArguments\n        if (argument === 'holiday') {\n            newArguments.holiday = e.target.checked\n        }\n        if (argument === 'boomTick') {\n            newArguments.boom.enabled = e.target.checked\n        }\n        if (argument === 'boomType') {\n            newArguments.boom.type = e.target.value\n        }\n        if (argument === 'boom') {\n            newArguments.boom.station = this.state.stationSpectating\n            newArguments.boom.flow = e\n        }\n        if (argument === 'weatherTick') {\n            newArguments.weather.enabled = e.target.checked\n        }\n        if (argument === 'weatherTemperatureLow') {\n            newArguments.weather.temperature.low = e.target.value\n        }\n        if (argument === 'weatherTemperatureHigh') {\n            newArguments.weather.temperature.high = e.target.value\n        }\n        if (argument === 'weather') {\n            newArguments.weather.condition = e.target.value\n        }\n        if (argument === 'failure') {\n            newArguments.boom.failure = e.target.checked\n        }\n        this.setState({userArguments: newArguments})\n    }\n    handlePredictionUpdate(type) {\n        predictionRequest(this.state.userArguments, type)\n        alert('预测请求已经提交'+this.state.userArguments.boom.flow)\n        this.handleOpen('argumentPicker')\n    }\n    handleTimeUpdate() {\n        store.dispatch({\n            type: 'timeUpdate',\n            time: this.state.selectedTime\n        })\n        mapsStore.dispatch({\n            type: 'refresh'\n        })\n        this.handleOpen('datePicker')\n    }\n    getTripForm() {\n        if (this.state.tripStart === undefined && this.state.tripFinish === undefined) {\n            return <React.Fragment />\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <tr>\n                        <td>进站</td>\n                        <td>{this.state.tripStart}</td>\n                    </tr>\n                    <tr>\n                        <td>出站</td>\n                        <td>{this.state.tripFinish}</td>\n                    </tr>\n                </React.Fragment>\n            )\n        }\n    }\n    startTrip(station) {\n        this.setState({tripStart: station})\n    }\n    finishTrip(station) {\n        this.setState({tripFinish: station})\n    }\n    tripCalculate() {\n        if (this.state.tripStart === this.state.tripFinish) {\n            alert('起点和终点好像在同一站，不计算时间了。')\n            return\n        }\n        const data = {\n            stationin: this.state.tripStart,\n            stationout: this.state.tripFinish,\n            month: this.state.selectedTime.getMonth() + 1,\n            hour: this.state.selectedTime.getHours(),\n            dayprop: (this.state.userArguments.holiday === true) ? 1 : 0\n        }\n        axios.post('/python/dettime', data)\n            .then(response => alert('旅程时间大约为' + response.data.dettime + '分钟'))\n            .catch(error => console.error(error))\n    }\n    getBeginTripButton(start, finish) {\n        if (start !== undefined && finish !== undefined && start !== finish) {\n            return <Button onClick={() => this.tripCalculate()}>开始预测行程</Button>\n        }\n        else {\n            return <React.Fragment />\n        }\n    }\n\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>线路</td>\n                    <td>{this.state.mapsState.lineSpectating}</td>\n                </tr>\n                <tr>\n                    <td>断面客流</td>\n                    <td>{this.state.mapsState.stationSpectating.flow}</td>\n                </tr>\n                <tr>\n                    <td>高峰时段</td>\n                    <td>9:00</td>\n                </tr>\n                {this.getTripForm()}\n            </table>\n        )\n    }\n    stationArguments() {\n        if (this.state.stationSpectating === 'No') {\n            return (\n                <FormLabel component={'legend'}>没有选择站点</FormLabel>\n            )\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <FormLabel component={'legend'}>{this.state.mapsState.stationSpectating.station}</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.userArguments.holiday}\n                                    onChange={(event) => this.handleChange(event, 'failure')}\n                                />\n                            }\n                            label={'故障'}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.userArguments.boom.enabled}\n                                        onChange={(event) => this.handleChange(event, 'boomTick')}\n                                    />\n                                }\n                                label={'突发客流'}\n                            />\n                            <FormGroup row>\n                                <Select\n                                    labelId={'客流类型'}\n                                    id={'客流类型'}\n                                    value={this.state.userArguments.boom.type}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(event) => this.handleChange(event, 'boomType')}\n                                    style={{width: '100%'}}\n                                >\n                                    <MenuItem value={0}>进站</MenuItem>\n                                    <MenuItem value={1}>出站</MenuItem>\n                                    <MenuItem value={2}>进站加</MenuItem>\n                                    <MenuItem value={3}>出站加</MenuItem>\n                                </Select>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Slider\n                                    defaultValue={3000}\n                                    valueLabelDisplay=\"auto\"\n                                    step={10}\n                                    marks\n                                    min={10}\n                                    max={110}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(foo, event) => this.handleChange(event, 'boom')}\n                                />\n                            </FormGroup>\n                        </FormGroup>\n\n                    </FormGroup>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"Layer\"} style={{borderRadius: defaultRoundCorner}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={'MapTimestamp'}>\n                    <span>预览时间线</span>\n                    <span className={this.state.storeState.timeNoGo === true ? '' : 'noGo'}>{this.state.storeState.timeNoGo === true ? '数据可用' : '该时间无数据'}</span>\n                    <br />\n                    <span className={'TimestampDate'}>\n                        {moment(this.state.storeState.timeline).format('MM-DD-YYYY HH:MM')}\n                    </span>\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch\n                        switchOptions={[\"无\", \"热力图\"]}\n                        setState={(e) => (this.setState(e))}\n                        state={this.state}\n                    />\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}数据\n                    </Button>\n                    <div style={{fontSize: '11pt', marginTop: '.5em'}}>更改预览时间</div>\n                    <div style={{display: \"flex\", flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <Button onClick={() => this.handleOpen('datePicker')}>\n                            选择\n                        </Button>\n                        <div style={{width: '.5em'}}/>\n                        <Button onClick={() => store.dispatch({type: 'timeUpdate', live: true})}>\n                            实时\n                        </Button>\n                    </div>\n                    <div style={{fontSize: '11pt', marginTop: '.5em'}}>行程时间预测</div>\n                    <div style={{display: \"flex\", flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <Button onClick={() => this.startTrip(this.state.mapsState.stationSpectating.station)}>起点</Button>\n                        <Button onClick={() => this.finishTrip(this.state.mapsState.stationSpectating.station)}>终点</Button>\n                    </div>\n                    {this.getBeginTripButton(this.state.tripStart, this.state.tripFinish)}\n                    <div style={{fontSize: '11pt', marginTop: '.5em'}}>更改预测参数</div>\n                    <Button onClick={() => this.handleOpen('argumentPicker')}>模拟数据变更</Button>\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.selectedTime}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"primary\"}\n                                        onClick={() => this.handleTimeUpdate(this.state.storeState.time)}\n                                    >\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"default\"}\n                                        onClick={() => this.handleOpen('datePicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.argumentPicker}>\n                        <Fade in={this.state.argumentPicker}>\n                            <Card style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        输入参数\n                                    </Typography>\n                                    <div className={'DualPanel'}>\n                                        <FormControl component={'fieldset'}>\n                                            <FormLabel component={'legend'}>该时间操作</FormLabel>\n                                            <FormGroup row>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.holiday}\n                                                            onChange={this.state}\n                                                        />\n                                                    }\n                                                    label={'放假'}\n                                                />\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weatherTick')}\n                                                        />\n                                                    }\n                                                    label={'变更天气'}\n                                                />\n                                                <FormGroup>\n                                                    <FormControl>\n                                                        <InputLabel id={'天气选择标签'}>\n                                                            天气类型\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"天气选择\"\n                                                            id=\"天气选择\"\n                                                            value={this.state.userArguments.weather.condition}\n                                                            disabled={!this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weather')}\n                                                        >\n                                                            <MenuItem value={'阴'}>阴</MenuItem>\n                                                            <MenuItem value={'晴'}>晴</MenuItem>\n                                                            <MenuItem value={'多云'}>多云</MenuItem>\n                                                            <MenuItem value={'小雨'}>小雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>中雨</MenuItem>\n                                                            <MenuItem value={'大雨'}>大雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>暴雨</MenuItem>\n                                                            <MenuItem value={'雷阵雨'}>雷阵雨</MenuItem>\n                                                        </Select>\n                                                    </FormControl>\n\n                                                    <TextField\n                                                        id={'最低温度输入'}\n                                                        label={'输入最低摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureLow')}\n                                                    />\n                                                    <TextField\n                                                        id={'最高温度输入'}\n                                                        label={'输入最高摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureHigh')}\n                                                    />\n                                                </FormGroup>\n                                            </FormGroup>\n                                        </FormControl>\n                                        <br />\n                                        <FormControl component={'fieldset'}>\n                                            {this.stationArguments()}\n                                        </FormControl>\n                                    </div>\n                                </CardContent>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"} onClick={() => this.handlePredictionUpdate('meow')}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('argumentPicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>地图正在加载……</div>}>\n                        <MapFuture\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                            mode={this.state.activated}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class PassengerMapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {activated: store.getState().passengerMode}\n        store.subscribe(() => {\n            this.setState({activated: store.getState().passengerMode})\n        })\n    }\n    handlePassengerModeChange(e) {\n        store.dispatch({\n            type: 'changePassengerMode',\n            mode: e.activated\n        })\n    }\n\n    render() {\n        return (\n            <div className={'Layer'} style={{borderRadius: defaultRoundCorner}}>\n                <div className=\"MapControllers\" style={{left: 5, right: 'inherit'}}>\n                    <MapSwitch\n                        switchOptions={[\"总客流\", \"出站\", \"进站\"]}\n                        setState={(e) => (this.handlePassengerModeChange(e))}\n                        state={this.state}\n                    />\n                </div>\n\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={'MLPlaceholder'}>乘客画像地图正在加载……</div>}>\n                        <PassengerMaps\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport { MapsBlock } from '../Widgets/MapsBlock';\nimport { mapsStore } from \"../Store\";\n\nconst body = document.body\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8),\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size, mapsState} = this.state\n        return (\n            <div className={\"OverviewGrid\"} key={'pages-index'}>\n                <div className={\"div1\"}>\n                    <Widgets.DashboardOne size={size} data={mapsState.highestFlow}>\n                        客流最高站点\n                    </Widgets.DashboardOne>\n                </div>\n                <div className={\"div2\"}>\n                    <Widgets.GreatLegends type={'straight'} name={'全网客流量指数'} value={mapsState.overallFlow}>\n                        重点客流量\n                    </Widgets.GreatLegends>\n                </div>\n                <div className={\"div3\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.highestDist4}\n                        zoom={0.1}\n                        tint={['#6099DB', '#DC73BC', '#7BDB6B', '#DBD455']}\n                    >\n                        客流高峰区域\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div4\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.lineFlow}\n                        keys={['linename', 'flow']}\n                        tint={['#6BDB9C', '#DBC760', '#5685DB', '#D9734C']}\n                    >\n                        客流高峰线路\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div5\"}>\n                    <MapsBlock\n                        port={{\"height\": size * 5, \"width\": size * 4}}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\nimport {mapsStore} from \"../Store\";\n\nconst body = document.body\n\nexport class LineHeat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            width: body.scrollWidth / 2.2,\n            height: body.scrollHeight / 10,\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {height, width, mapsState} = this.state\n        return(\n            <div className={\"LHGrid\"} key={'pages-line-heat'}>\n                <div className=\"div1\">\n                    <Widgets.SimpleBars\n                        port={{height: height, width: width * 2}}\n                        data={mapsState.lineFlow}\n                        keys={['linename', 'flow']}\n                        tint={['#09B8A3', '#23EB62', '#F0438F', '#EBBF23', '#A1C0F5', '#0977B8', '#B98AF5', '#F7DF34', '#F75A43', '#65A1C2']}\n                        label={true}\n                    >\n                        当前全网线路客流\n                    </Widgets.SimpleBars>\n                </div>\n                <div className=\"div2\">\n                    <Widgets.SimpleTrends\n                        port={{height: height, width: width}}\n                        tooltip\n                        data={{\n                            xAxisMeasurements: 'meow',\n                            lines: [\n                                {\n                                    name: 'wow',\n                                    values: [1, 2, 3]\n                                },\n                                {\n                                    name: 'argh',\n                                    values: [23, 12, 12]\n                                }\n                            ]\n                        }}\n                    />\n                </div>\n                <div className=\"div3\"></div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n                <div className=\"div7\"></div>\n                <div className=\"div8\"></div>\n                <div className=\"div9\"></div>\n                <div className=\"div10\"></div>\n                <div className=\"div11\"></div>\n                <div className=\"div12\"></div>\n                <div className=\"div13\"></div>\n                <div className=\"div14\"></div>\n                <div className=\"div15\"></div>\n                <div className=\"div16\"></div>\n                <div className=\"div17\"></div>\n                <div className=\"div18\"></div>\n                <div className=\"div19\"></div>\n                <div className=\"div20\"></div>\n            </div>\n        )\n    }\n}\n\nexport class HeatTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize = () => {\n        this.setState({\n            size: body.scrollHeight / 5\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return(\n            <div className={\"THGrid\"} key={'pages-timeline-heat'}>\n                <div className=\"div1\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div2\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div3\">\n                    <Widgets.AreaChartTrends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport {PassengerMapsBlock} from \"../Widgets/MapsBlock\";\nimport store, {mapsStore} from \"../Store\";\n\nconst body = document.body\nconst passengerArray=['16岁以下', '16~25', '25~40', '40~60', '60岁以上', '16岁以下', '16~25', '25~40', '40~60', '60岁以上', '16岁以下', '16~25', '25~40', '40~60', '60岁以上']\nconst tintArray=[['#09B8A3', '#23EB62', '#A1C0F5', '#0977B8', '#658EA4'], ['#F5E3D0', '#F5DE2F', '#F58CB2', '#7FDAFA', '#7A5DF9']]\n\nclass PassengerAnalytics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stationInward: mapsStore.getState().ageMapSpectating.inward,\n            stationOutward: mapsStore.getState().ageMapSpectating.outward,\n            activated: store.getState().passengerMode,\n        }\n        mapsStore.subscribe(() => {\n            this.setState({\n                stationInward: mapsStore.getState().ageMapSpectating.inward,\n                stationOutward: mapsStore.getState().ageMapSpectating.outward,\n            })\n            this.forceUpdate()\n        })\n        store.subscribe(() => {\n            this.setState({activated: store.getState().passengerMode})\n        })\n    }\n\n    calculateSize = () => {\n        this.setState({\n            height: body.scrollHeight / 6,\n            width: body.scrollWidth / 6,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 10)\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    arrayCoherence(keys, values, slice) {\n        let newArray = []\n        try {\n            values.map(function (value, index) {\n                if (slice === undefined) {\n                    let newDictionary = {\n                        key: keys[index],\n                        value: value\n                    }\n                    newArray.push(newDictionary)\n                }\n                else if (index >= slice[0] && index <= slice[1]) {\n                    let newDictionary = {\n                        key: keys[index],\n                        value: value\n                    }\n                    newArray.push(newDictionary)\n                }\n                return true\n            })\n        }\n        catch (e) {\n            newArray = [{key: '数据加载中', value: 100}]\n        }\n\n        return newArray\n    }\n    getSlice() {\n        if (this.state.activated === '进站') {\n            return [0, 4]\n        }\n        if (this.state.activated === '出站') {\n            return [5, 9]\n        }\n        if (this.state.activated === '总客流') {\n            return [10, 14]\n        }\n    }\n\n    render() {\n        const {height, width, size} = this.state\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                        <PassengerMapsBlock\n                            port={{height: height * 4, width: width * 2}}\n                        />\n                    </div>\n                    <div className=\"div2\">\n                        <Widgets.SimplePieCharts\n                            size={size * 2}\n                            duet\n                            tint={tintArray}\n                            data={this.arrayCoherence(passengerArray, this.state.stationInward, this.getSlice())}\n                            data0={this.arrayCoherence(passengerArray, this.state.stationOutward, this.getSlice())}\n                        >\n                            所选站点乘客结构\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div3\">\n                        <Widgets.SimplePieCharts\n                            size={size * 2}\n                            duet\n                            tint={tintArray}\n                            data={this.arrayCoherence(passengerArray, [88, 99, 77, 66, 55, 44, 33, 22, 11, 44, 55, 66, 77, 88, 99, 100], [10, 14])}\n                            data0={this.arrayCoherence(passengerArray, [88, 99, 77, 66, 55, 44, 33, 22, 11, 44, 55, 66, 77, 88, 99, 100], [10, 14])}\n                        >\n                            全网乘客结构\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div4\">\n                        <Widgets.SimplePieCharts\n                            size={size}\n                            data={this.arrayCoherence(['u', 'v'], [88, 99])}\n                            tint={tintArray[1]}\n                        >\n                            当前站点客流性别比例\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div5\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                            data={{u:90, p:5}}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div6\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                            data={{u:90, p:5}}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div7\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                            data={{u:90, p:5}}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div8\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                            data={{u:90, p:5}}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from \"react\";\nimport \"./style.css\"\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (this.props.type !== undefined) ? this.props.type : \"text\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={'InputFunction'}>\n                <label>\n                    {this.props.children}\n                </label>\n                <input className={'coilsInput'} type={this.state.type} onChange={(event => this.props.handler(event))}/>\n            </div>\n        )\n    }\n}\n\nexport default Input","import React from \"react\";\nimport { Input, Button } from '../Controllers';\nimport { FormGroup, FormLabel, Slider, Button as MaterialButton } from '@material-ui/core'\nimport axios from \"axios\";\nimport './style.css';\nimport store, { setExpiration, clearStorage } from \"../Store\";\nimport { ThemeSwitch } from \"../Controllers/Switch\";\n\nfunction loginRequest(username, password) {\n    try {\n        axios.post('/api/log', {\n            'username': username,\n            'password': password\n        }).then(function (response) {\n            console.log(response.data)\n            alert(response.data.msg)\n            if (response.data.code === 200) {\n                store.dispatch({\n                    type: 'login',\n                    loginState: true,\n                    session: response.data\n                })\n            }\n        })\n    }\n    catch (error) {\n        alert('网络连接出现了一些问题')\n        console.error(error);\n    }\n}\n\nclass CertForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: 1,\n        }\n    }\n    CertChange(type) {\n        let feedbackInfo\n        if (type === 'logout') {\n            feedbackInfo = '注销凭据完成'\n            const action = {\n                type: 'certMan',\n                logout: true\n            }\n            store.dispatch(action)\n        }\n        if (type === 'cache') {\n            feedbackInfo = '保存凭据' + this.state.duration +'天'\n            setExpiration(this.state.duration)\n        }\n        alert(feedbackInfo)\n    }\n    handleSlider = (event, newValue) => {\n        this.setState({duration: newValue})\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <ThemeSwitch/>\n                <div className={'Description'}>\n                    可以按 [K] 快速切换主题\n                </div>\n                <form\n                    style={{marginTop: '2em'}}\n                    onSubmit={() => this.CertChange('cache', this.state.duration)}\n                >\n                    <FormGroup>\n                        <FormLabel style={{color: 'var(--ThemeColor)'}} component={'legend'}>保存凭据时长（天）</FormLabel>\n                        <div style={{margin: '0 auto', width: 'calc(100% - 20px)'}}>\n                            <Slider\n                                defaultValue={1}\n                                valueLabelDisplay=\"auto\"\n                                step={5}\n                                marks\n                                min={1}\n                                max={31}\n                                onChange={this.handleSlider}\n                            />\n                        </div>\n                    </FormGroup>\n                    <div style={{display: \"flex\", flexDirection: 'row'}}>\n                        <Button type={'submit'}>\n                            保存凭据\n                        </Button>\n                        <div style={{width: '.5em'}}/>\n                        <Button onClick={() => this.CertChange('logout')}>\n                            注销\n                        </Button>\n                    </div>\n                    <br />\n                    <MaterialButton\n                        size={'small'}\n                        style={{color: '#F66'}}\n                        onClick={() => clearStorage()}\n                    >\n                        清除本地数据并注销\n                    </MaterialButton>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState(),\n            username: '',\n            password: ''\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n    handleLogin(event) {\n        event.preventDefault()\n        loginRequest(this.state.username, this.state.password)\n    }\n    handleForm(event, type) {\n        if (type === 'username') {\n            this.setState({username: event.target.value})\n        }\n        if (type === 'password') {\n            this.setState({password: event.target.value})\n        }\n    }\n\n    render() {\n        let FormSheet, hello\n        const LoginForm = [\n            <form onSubmit={(e) => this.handleLogin(e)}>\n                <div className={\"AuthForm\"}>\n                    <div>\n                        <Input handler={(e) => {this.handleForm(e, 'username')}}>\n                            用户名称\n                        </Input>\n                        <Input type={\"password\"} handler={(e) => {this.handleForm(e, 'password')}}>\n                            密码\n                        </Input>\n                    </div>\n                    <div className={\"Button\"}>\n                        <Button type={\"submit\"}>\n                            好\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        ]\n\n        if (this.state.store.loginState) {\n            FormSheet = [<CertForm/>]\n            hello = \"认证管理\"\n        }\n        else {\n            FormSheet = LoginForm\n            hello = \"认证\"\n        }\n\n        return (\n            <React.Fragment>\n                <div id={'Amaze'}/>\n                <div id={'ActualCard'}>\n                    <h1>\n                        {hello}\n                    </h1>\n                </div>\n                <div id={'Maze'}/>\n                    <section className={\"AuthCard\"}>\n                        {FormSheet}\n                    </section>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport Overview from \"./Overview\";\nimport { LineHeat, HeatTimeline } from \"./LineHeat\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport Login from \"./Authenticate\";\nimport './index.css';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, {exposedMethods, mapsStore} from \"./Store\";\n\nconst root = document.documentElement\n\nfunction setTheme() {\n    if (store.getState().theme === 'light') {\n        root.style.setProperty('--themeTable', '#E3E3E3')\n        root.style.setProperty('--themeBorder', 'none')\n        root.style.setProperty('--themeColor', '#443')\n        root.style.setProperty('--themeHover', '#220')\n        root.style.setProperty('--themeActive', '#220')\n        root.style.setProperty('--themeLayer', 'rgba(250, 250, 250, 0.8)')\n        root.style.setProperty('--themeFilter', 'screen')\n        root.style.setProperty('--themeDarkFilter', 'brightness(1.17)')\n        root.style.setProperty('--themePure0', 'rgba(255, 255, 255, 1)')\n        root.style.setProperty('--themePure1', 'rgba(255, 255, 255, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(80, 80, 80, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#FFF')\n        root.style.setProperty('--controlBlur', '#553')\n        root.style.setProperty('--dockBorderSize', '1px')\n        root.style.setProperty('--actualFilter', 'rgba(255, 255, 255, .8)')\n    }\n    if (store.getState().theme === 'dark') {\n        root.style.setProperty('--themeTable', '#171717')\n        root.style.setProperty('--themeBorder', '0 0 1.5px #EEE')\n        root.style.setProperty('--themeColor', '#EEE')\n        root.style.setProperty('--themeHover', '#AAB')\n        root.style.setProperty('--themeActive', '#FFF')\n        root.style.setProperty('--themeLayer', 'rgba(53, 53, 53, 0.8)')\n        root.style.setProperty('--themeFilter', 'multiply')\n        root.style.setProperty('--themeDarkFilter', 'brightness(.25)')\n        root.style.setProperty('--themePure0', 'rgba(64, 64, 64, 1)')\n        root.style.setProperty('--themePure1', 'rgba(0, 0, 0, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(255, 255, 255, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#535353')\n        root.style.setProperty('--controlBlur', '#BBC')\n        root.style.setProperty('--dockBorderSize', '2px')\n        root.style.setProperty('--actualFilter', 'rgba(0, 0, 25, .15)')\n\n    }\n}\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {storeState: store.getState()}\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){this.setState({storeState: store.getState()})}\n    componentDidMount() {\n        mapsStore.dispatch({type: 'refresh'})\n    }\n\n    render() {\n        setTheme()\n        let pagesList = []\n        if (this.state.storeState.loginState === true) {\n            pagesList.push(\n                <Switch>\n                    <Route exact path={\"./\"}>\n                        <Redirect to={\"Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"} component={AnimationApp}/>\n                </Switch>\n            )\n        }\n        else {\n            pagesList.push(\n                <Switch>\n                    <Route path={\"*\"}>\n                        <Login />\n                    </Route>\n                </Switch>\n            )\n        }\n        return (\n            <PersistGate store={store} persistor={exposedMethods}>\n                <Router>\n                    {pagesList}\n                </Router>\n            </PersistGate>\n        )\n    }\n}\n\nclass AnimationApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            handling: 0,\n            redirect: undefined\n        }\n    }\n    wary(e) {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        this.setState({redirect: e})\n        this.setState({redirect: undefined})\n    }\n    themeSwitcherWary() {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        store.dispatch({type: 'switchTheme'})\n    }\n\n    componentDidMount() {\n        let done = () => {\n            this.setState({handling: 0})\n        }\n        store.subscribe(() => {\n            setTimeout(done, 500, done)\n        })\n        this.props.history.listen(location => {\n            mapsStore.dispatch({type: 'refresh'})\n            if (this.props.location.pathname !== location.pathname) {\n                setTimeout(done, 500, done)\n            }\n        })\n    }\n    render() {\n        const redirect = {\n            state: this.state.redirect,\n            handling: this.state.handling,\n            set: (e) => this.wary(e),\n            done: () => this.done()\n        }\n        const themeSwitchKey = () => this.themeSwitcherWary()\n\n        function handleShortcutKey(key) {\n            const destination = ['Overview', 'LineHeat', 'HeatTimeline', 'PassengerAnalytics', 'Authenticate']\n            redirect.set(<Redirect to={destination[key - 1]}/>)\n        }\n        // keyboard shortcuts\n        window.addEventListener(\"keyup\", function (e) {\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (e.key !== undefined) {\n                if (e.key === '1') {handleShortcutKey(1)}\n                if (e.key === '2') {handleShortcutKey(2)}\n                if (e.key === '3') {handleShortcutKey(3)}\n                if (e.key === '4') {handleShortcutKey(4)}\n                if (e.key === 'L' || e.key === 'l') {handleShortcutKey(5)}\n                if (e.key === 'K' || e.key === 'k') {themeSwitchKey()}\n                return;\n            }\n            else if (e.code !== undefined) {\n                if (e.code === 'Digit1') {handleShortcutKey(1)}\n                if (e.code === 'Digit2') {handleShortcutKey(2)}\n                if (e.code === 'Digit3') {handleShortcutKey(3)}\n                if (e.code === 'Digit4') {handleShortcutKey(4)}\n                if (e.code === 'KeyL') {handleShortcutKey(5)}\n                if (e.code === 'KeyK') {themeSwitchKey()}\n                return;\n            }\n        })\n\n        return (\n            <React.Fragment>\n                {this.state.redirect}\n                <div className=\"Dock\">\n                    <NavLink key={\"Overview\"} to={\"Overview\"} activeClassName={\"active\"} exact>\n                        <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                    </NavLink>\n                    <NavLink key={\"LineHeat\"} to={\"LineHeat\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>线路分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"HeatTimeline\"} to={\"HeatTimeline\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>时段分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"PassengerAnalytics\"} to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>用户画像<span>3</span></button>\n                    </NavLink>\n                    <NavLink key={\"Authenticate\"} to={\"Authenticate\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>认证与设置<span>L</span></button>\n                    </NavLink>\n                </div>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={this.props.location}\n                        classNames={\"fade\"}\n                        timeout={250}\n                    >\n                        <Switch>\n                            <Route path={`*/Overview`} component={Overview}/>\n                            <Route path={`*/LineHeat`} component={LineHeat}/>\n                            <Route path={`*/HeatTimeline`} component={HeatTimeline}/>\n                            <Route path={`*/PassengerAnalytics`} component={PassengerAnalytics}/>\n                            <Route path={`*/Authenticate`} component={Login}/>\n                            <Route path={`*`}>\n                                <Redirect to={\"Overview\"}/>\n                            </Route>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}