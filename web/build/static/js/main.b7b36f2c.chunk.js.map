{"version":3,"sources":["Store/methods.js","Store/mapsUpdater.js","Store/index.js","Controllers/Switch.js","Widgets/widgets.js","Controllers/Button.js","Widgets/MapsBlock.js","Overview/index.js","LineHeat/index.js","PassengerAnalytics/index.js","Controllers/Input.js","Authenticate/index.js","App.js","reportWebVitals.js","index.js"],"names":["defaultState","active","theme","loginState","sessionData","timeUpToDate","time","Date","lineSpectating","stationSpectating","flowSpectating","peakSpectating","Store","state","action","type","newState","JSON","parse","stringify","session","logout","line","hoverType","hoverID","defaultValue","stationData","pathData","newMapState","require","expires","setExpiration","schoolDays","undefined","persistConfig","key","storage","CookieStorage","Cookies","expiration","default","persistedMethods","persistReducer","methods","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","exposedMethods","persistStore","mapsPersistConfig","mapsMethods","mapsUpdater","mapsStore","mapsExposedMethods","searchObject","data","searchKey","value","requiredKey","result","forEach","theObject","MapSwitch","props","switchOptions","this","setState","allOptions","optionsController","perOption","acClass","activated","push","id","onClick","className","enumOptions","React","Component","transformToCentre","position","left","top","transform","defaultRoundCorner","linesConstructor","dataArray","tintArray","tooltip","lines","tooltipElement","converted","drawn","map","lineIndex","values","y","x","partPoint","name","Object","assign","dot","r","dataKey","stroke","strokeWidth","width","height","style","barConstructor","keys","barContent","index","fill","Dashboard","rounded","children","nameLabel","size","spacing","tint","frame","borderRadius","Fragment","slice","innerRadius","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","uv","pv","amt","port","SimpleTrends","xAxisMeasurement","SimpleBars","propData","sampleData","mockData","console","warn","propTintArray","AreaChartTrends","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","fillOpacity","MNButtonStyle","backgroundColor","Button","variant","MapFuture","lazy","MapsBlock","datePicker","argumentPicker","selectedTime","flowStats","storeState","getState","mapState","userArguments","holiday","boom","enabled","station","flow","storeChange","bind","subscribe","modal","e","argument","newArguments","target","checked","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","onChange","label","handleChange","row","Slider","valueLabelDisplay","step","marks","min","max","disabled","dispatch","opacity","userSelect","cursor","getStats","handleOpen","triggerStats","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","margin","utils","MomentUtils","handleTime","CardActions","color","FormControl","stationArguments","fallback","mode","body","document","Index","calculateSize","Math","scrollHeight","scrollWidth","log","addEventListener","removeEventListener","retrieveData","LineHeat","documentElement","clientHeight","HeatTimeline","PassengerAnalytics","Input","event","handler","CertForm","feedbackInfo","option","alert","preventDefault","onSubmit","CertChange","RadioGroup","Radio","Login","username","password","axios","post","then","response","msg","code","error","loginRequest","FormSheet","hello","LoginForm","handleLogin","handleForm","root","App","setProperty","pagesList","exact","path","to","AnimationApp","persistor","handleShortcutKey","location","replace","defaultPrevented","activeClassName","TransitionGroup","CSSTransition","classNames","timeout","Overview","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b7b36f2c.chunk.js","sourcesContent":["const defaultState = {\n    active: \"dashboard\",\n    theme: 'light',\n    loginState: false,\n    sessionData: '',\n    timeUpToDate: true,\n    time: new Date(),\n    lineSpectating: 'No',\n    stationSpectating: 'No',\n    flowSpectating: -1,\n    peakSpectating: -1\n}\nconst Store = (state = defaultState, action) => {\n    if (action.type === 'login' && action.loginState) {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.loginState = true\n        newState.sessionData = action.session\n        return newState\n    }\n    if (action.type === 'certMan') {\n        if (action.logout) {\n            return defaultState\n        }\n    }\n    if (action.type === 'hoverUpdate') {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.lineSpectating = action.line\n        if (action.hoverType === 'station') {\n            newState.stationSpectating = action.hoverID\n        }\n        return newState\n    }\n    if (action.type === 'switchTheme') {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.theme = action.theme\n        return newState\n    }\n\n    return state\n}\nexport default Store","const defaultValue = {\n    stationData: {},\n    pathData: {}\n}\nconst Store = (state = defaultValue, action) => {\n    if (action.type === 'refresh') {\n        let newMapState = JSON.parse(JSON.stringify(state))\n        newMapState.stationData = require('../stationaryPlaceholder/stations.json')\n        newMapState.pathData = require('../stationaryPlaceholder/paths.json')\n        return newMapState\n    }\n    return state\n}\nexport default Store","import { createStore } from \"redux\";\nimport methods from './methods';\nimport mapsUpdater from './mapsUpdater';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { CookieStorage } from 'redux-persist-cookie-storage';\nimport storage from 'redux-persist/lib/storage';\nimport Cookies from 'cookies-js';\n\nlet expires = 22 * 86400\n\nexport function setExpiration(schoolDays)\n{\n    if (schoolDays === undefined) {\n        schoolDays = 22\n    }\n    expires = schoolDays * 86400;\n}\n\n//组件数据和会话\nconst persistConfig = {\n    key: 'root',\n    storage: new CookieStorage(Cookies, {expiration:\n        {default: expires}\n    })\n}\nconst persistedMethods = persistReducer(persistConfig, methods)\nlet store = createStore(persistedMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport let exposedMethods = persistStore(store)\nexport default store\n\n//地图存储\nconst mapsPersistConfig = {\n    key: 'maps',\n    storage: storage\n}\nconst mapsMethods = persistReducer(mapsPersistConfig, mapsUpdater)\nexport let mapsStore = createStore(mapsMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport let mapsExposedMethods = persistStore(mapsStore)\n\nexport function searchObject(data, searchKey, value, requiredKey) {\n    let result\n    data.forEach(function (theObject) {\n        if (theObject[searchKey] === value) {\n            result = theObject[requiredKey]\n        }\n    })\n    return result\n}","import React from \"react\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport './style.css';\nimport {\n    AreaChart, Area,\n    RadialBarChart,\n    RadialBar,\n    PolarAngleAxis,\n    Legend, Tooltip,\n    Cell,\n    LineChart,\n    CartesianGrid,\n    XAxis,\n    YAxis, Line, BarChart, Bar\n} from \"recharts\";\nimport '../Controllers/Switch';\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\nconst defaultRoundCorner = 20;\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\n\nfunction constructData(propData, sampleData) {\n    if (propData !== undefined) {\n        if (propData == null) {\n            console.warn(\"Null data received\")\n        }\n        return propData\n    } else return sampleData\n}\n\nfunction linesConstructor(dataArray, tintArray, state, tooltip) {\n    const lines = dataArray.lines\n    const tooltipElement = tooltip ? [<Tooltip/>] : []\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{r: 3}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={2}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend/>\n            {tooltipElement}\n            {drawn}\n        </LineChart>\n    )\n}\n\nfunction barConstructor(dataArray, tintArray, state) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    const barContent = keys.map(function (key, index) {\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n            />\n        )\n    })\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [{name: '摸', value: 40}, {name: '到', value: 90}, {name: '飞', value: 60}, {name: '起', value: 70}];\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const size = this.props.size * 2\n        const spacing = size / 8\n        const tint = [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded}\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(0, 1)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(1, 2)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(2, 3)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(3, 4)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = {name: '鸽子力', value: 80};\n        this.state = {\n            rounded: defaultRoundCorner,\n            data: (this.props.data !== undefined) ? this.props.data : mockData\n        }\n    }\n\n    greatLegend(value) {\n        return (\n            <span>{value}</span>\n        )\n    }\n\n    render() {\n        const tint = \"#137A7F\"\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded, align: \"center\"}\n        const size = this.props.size\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[this.state.data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ]\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={this.state.data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={2} dot={{r: 3}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={2} dot={{r: 3}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = {\n            xAxisMeasurement: \"XExample\",\n            lines: [\n                {\n                    name: 'One',\n                    values: [\n                        4000,\n                        5000,\n                        3500,\n                        5000\n                    ]\n                },\n                {\n                    name: \"Two\",\n                    values: [\n                        7500,\n                        5560,\n                        2280,\n                        5600\n                    ]\n                },\n            ]\n        }\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data,\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#EA0\", \"#08A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(this.state.data, tint, port, this.props.tooltip)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = constructData(this.props.data, {\"uv\": 900, \"pv\": 609})\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const tint = setTintArray(this.props.tint)\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": this.state.rounded\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([this.state.data], tint, port)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class AreaChartTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                \"name\": \"Page A\",\n                \"uv\": 4000,\n                \"pv\": 2400,\n                \"amt\": 2400\n            },\n            {\n                \"name\": \"Page B\",\n                \"uv\": 3000,\n                \"pv\": 1398,\n                \"amt\": 2210\n            },\n            {\n                \"name\": \"Page C\",\n                \"uv\": 2000,\n                \"pv\": 9800,\n                \"amt\": 2290\n            },\n            {\n                \"name\": \"Page D\",\n                \"uv\": 2780,\n                \"pv\": 3908,\n                \"amt\": 2000\n            },\n            {\n                \"name\": \"Page E\",\n                \"uv\": 1890,\n                \"pv\": 4800,\n                \"amt\": 2181\n            },\n            {\n                \"name\": \"Page F\",\n                \"uv\": 2390,\n                \"pv\": 3800,\n                \"amt\": 2500\n            },\n            {\n                \"name\": \"Page G\",\n                \"uv\": 3490,\n                \"pv\": 4300,\n                \"amt\": 2100\n            }\n        ]\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: this.state.rounded\n        }\n        return (\n            <div\n                className={'Layer'}\n                style={frame}\n            >\n                <AreaChart\n                    width={port.width}\n                    height={port.height}\n                    data={this.state.data}\n                    style={transformToCentre}\n                >\n                    <defs>\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                    <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                </AreaChart>\n            </div>\n        )\n    }\n\n}","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: '#FFF'\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n            type: (this.props.type !== undefined) ? this.props.type : \"\"\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick} type={this.state.type}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Suspense } from \"react\";\nimport store, { mapsStore, searchObject } from \"../Store\";\nimport {\n    Button as MaterialButton,\n    Card, CardActions,\n    CardContent,\n    Checkbox,\n    Fade, FormControl,\n    FormControlLabel,\n    FormGroup,\n    FormLabel,\n    Modal,\n    Slider, Typography\n} from \"@material-ui/core\";\nimport MapSwitch from \"../Controllers/Switch\";\nimport {Button} from \"../Controllers/Button\";\nimport {KeyboardDateTimePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\nconst MapFuture = React.lazy(() => import('./Map'));\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            datePicker: false,\n            argumentPicker: false,\n            activated: \"无\",\n            selectedTime: new Date(),\n            flowStats: true,\n            storeState: store.getState(),\n            mapState: mapsStore.getState(),\n            userArguments: {holiday: undefined, boom: {enabled: false, station: undefined, flow: undefined}}\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState({storeState: store.getState()})\n    }\n    handleOpen(modal) {\n        if (modal === 'datePicker') {this.setState({datePicker: !this.state.datePicker})}\n        if (modal === 'argumentPicker') {this.setState({argumentPicker: !this.state.argumentPicker})}\n    }\n    handleTime(e) {\n        this.setState({time: e})\n    }\n    handleChange(e, argument) {\n\n        const defaultBoomFlow = 3000\n\n        let newArguments = this.state.userArguments\n        if (argument === 'holiday') {\n            newArguments.holiday = e.target.checked\n        }\n        if (argument === 'boom') {\n            newArguments.boom.enabled = e.target.checked\n            if (e.target.checked) {\n                newArguments.boom.station = this.state.stationSpectating\n                newArguments.boom.flow = defaultBoomFlow\n            }\n        }\n        this.setState({userArguments: newArguments})\n    }\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>线路</td>\n                    <td>{this.state.storeState.lineSpectating}</td>\n                </tr>\n                <tr>\n                    <td>断面客流</td>\n                    <td>{searchObject(this.state.mapState.stationData,'station', this.state.storeState.stationSpectating, 'id')}</td>\n                </tr>\n                <tr>\n                    <td>高峰时段</td>\n                    <td>9:00</td>\n                </tr>\n            </table>\n        )\n    }\n    stationArguments() {\n        if (this.state.stationSpectating === 'No') {\n            return (\n                <FormLabel component={'legend'}>没有选择站点</FormLabel>\n            )\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <FormLabel component={'legend'}>{this.state.storeState.stationSpectating}</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.userArguments.holiday}\n                                    onChange={this.state}\n                                />\n                            }\n                            label={'故障'}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.userArguments.boom.enabled}\n                                        onChange={(e) => this.handleChange(e, 'boom')}\n                                    />\n                                }\n                                label={'突发客流'}\n                            />\n                            <FormGroup row>\n                                <Slider\n                                    defaultValue={3000}\n                                    valueLabelDisplay=\"auto\"\n                                    step={10}\n                                    marks\n                                    min={10}\n                                    max={110}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                />\n                            </FormGroup>\n                        </FormGroup>\n\n                    </FormGroup>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        mapsStore.dispatch({type: 'refresh'})\n        return (\n            <div className={\"Layer\"} style={{borderRadius: this.state.rounded}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch switchOptions={[\"无\", \"热力图\"]} state={this.state}\n                               setState={(e) => (this.setState(e))}\n                    />\n                    <Button onClick={() => this.handleOpen('datePicker')}>\n                        选择日期\n                    </Button>\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}数据\n                    </Button>\n                    {this.state.flowStats ? <Button onClick={() => this.handleOpen('argumentPicker')}>模拟数据变更</Button> : ''}\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.time}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('datePicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.argumentPicker}>\n                        <Fade in={this.state.argumentPicker}>\n                            <Card style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        输入参数\n                                    </Typography>\n                                    <div className={'DualPanel'}>\n                                        <FormControl component={'fieldset'}>\n                                            <FormLabel component={'legend'}>该时间操作</FormLabel>\n                                            <FormGroup row>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.holiday}\n                                                            onChange={this.state}\n                                                        />\n                                                    }\n                                                    label={'是假期'}\n                                                />\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.holiday}\n                                                            onChange={this.state}\n                                                        />\n                                                    }\n                                                    label={'天气'}\n                                                />\n                                            </FormGroup>\n                                        </FormControl>\n                                        <br />\n                                        <FormControl component={'fieldset'}>\n                                            {this.stationArguments()}\n                                        </FormControl>\n                                    </div>\n                                </CardContent>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('argumentPicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>Maps loading...</div>}>\n                        <div style={{transform: 'translate(+7%, +5%)'}}>\n                            <MapFuture\n                                height={this.props.port.height}\n                                width={this.props.port.width}\n                                mode={this.state.activated}\n                            />\n                        </div>\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport { MapsBlock } from '../Widgets/MapsBlock';\n\nconst body = document.body\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n    retrieveData(name) {\n        if (name === 'overall') {\n            return (\n                {\n                    name: '综合压力',\n                    value: 60\n                }\n            )\n        }\n        if (name === 'overloadedStation') {\n            return (\n                {\n                    name: 'Sta99',\n                    value: 99\n                }\n            )\n        }\n        if (name === 'distPressure') {\n            return ([\n                {name: 'dist1', value: 85},\n                {name: 'dist3', value: 83},\n                {name: 'dist5', value: 77},\n                {name: 'dist6', value: 66}\n            ])\n        }\n    }\n\n    render() {\n        const {size} = this.state\n        return (\n                <div className={\"OverviewGrid\"}>\n                    <div className={\"div1\"}>\n                        <MapsBlock\n                            port={{\"height\": size * 4, \"width\": size * 4}}\n                        />\n                    </div>\n                    <div className={\"div2\"}>\n                        <Widgets.DashboardOne size={size} data={this.retrieveData('overall')}/>\n                    </div>\n                    <div className={\"div3\"}>\n                        <Widgets.DashboardOne size={size} data={this.retrieveData('overloadedStation')}/>\n                    </div>\n                    <div className={\"div4\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div5\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div6\"}>\n                        <Widgets.Dashboard size={size} data={this.retrieveData('distPressure')}>\n                            客流高峰区域\n                        </Widgets.Dashboard>\n                    </div>\n                    <div className={\"div7\"}>\n                        <Widgets.Dashboard size={size}/>\n                    </div>\n                    <div className={\"div8\"}>\n                        <Widgets.Trends\n                            port={{\"height\": size, \"width\": size * 2}}\n                        >\n                            Trends\n                        </Widgets.Trends>\n                    </div>\n                    <div className={\"div9\"}>\n                        <Widgets.SimpleTrends\n                            port={{\"height\": size, \"width\": size * 3}}\n                            tooltip={true}\n                        >\n                            SimpleTrends\n                        </Widgets.SimpleTrends>\n                    </div>\n                    <div className={\"div10\"}>\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\n\nconst body = document.body\n\nexport class LineHeat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize() {\n        this.setState({\n            size: Math.min(document.documentElement.clientHeight / 8, body.scrollWidth / 8)\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        return(\n            <div className={\"LHGrid\"}>\n                <div className=\"div1\"></div>\n                <div className=\"div2\"></div>\n                <div className=\"div3\"></div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n                <div className=\"div7\"></div>\n                <div className=\"div8\"></div>\n                <div className=\"div9\"></div>\n                <div className=\"div10\"></div>\n                <div className=\"div11\"></div>\n                <div className=\"div12\"></div>\n                <div className=\"div13\"></div>\n                <div className=\"div14\"></div>\n                <div className=\"div15\"></div>\n                <div className=\"div16\"></div>\n                <div className=\"div17\"></div>\n                <div className=\"div18\"></div>\n                <div className=\"div19\"></div>\n                <div className=\"div20\"></div>\n            </div>\n        )\n    }\n}\n\nexport class HeatTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize = () => {\n        this.setState({\n            size: body.scrollHeight / 5\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return(\n            <div className={\"THGrid\"}>\n                <div className=\"div1\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div2\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div3\">\n                    <Widgets.AreaChartTrends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\n// import * as Widgets from '../Widgets/widgets';\n\nclass PassengerAnalytics extends React.Component {\n    render() {\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                    </div>\n                    <div className=\"div2\"></div>\n                    <div className=\"div3\"></div>\n                    <div className=\"div4\"></div>\n                    <div className=\"div5\"></div>\n                    <div className=\"div6\"></div>\n                    <div className=\"div7\"></div>\n                    <div className=\"div8\"></div>\n                    <div className=\"div9\"></div>\n                    <div className=\"div10\"></div>\n                    <div className=\"div11\"></div>\n                    <div className=\"div12\"></div>\n                    <div className=\"div13\"></div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from \"react\";\nimport \"./style.css\"\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (this.props.type !== undefined) ? this.props.type : \"text\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={'InputFunction'}>\n                <label>\n                    {this.props.children}\n                </label>\n                <input type={this.state.type} onChange={(event => this.props.handler(event))}/>\n            </div>\n        )\n    }\n}\n\nexport default Input","import React from \"react\";\nimport {Input, Button} from '../Controllers';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport axios from \"axios\";\nimport './style.css';\nimport store, { setExpiration } from \"../Store\";\n\nfunction loginRequest(username, password) {\n    try {\n        axios.post('http://47.110.95.97:8080/log', {\n            'username': username,\n            'password': password\n        }).then(function (response) {\n            alert(response.data.msg)\n            if (response.data.code === 200) {\n                store.dispatch({\n                    type: 'login',\n                    loginState: true,\n                    session: response.data.data\n                })\n            }\n        })\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\n\nfunction switchTheme() {\n    if (store.getState().theme === 'light') {\n        store.dispatch({\n            type: 'switchTheme',\n            theme: 'dark'\n        })\n    }\n    else if (store.getState().theme === 'dark') {\n        store.dispatch({\n            type: 'switchTheme',\n            theme: 'light'\n        })\n    }\n}\n\nclass CertForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'option': ''\n        }\n    }\n    CertChange(event) {\n        let feedbackInfo\n        if (this.state.option === 'logout') {\n            feedbackInfo = '注销凭据完成'\n            const action = {\n                type: 'certMan',\n                logout: (this.state.option === 'logout')\n            }\n            store.dispatch(action)\n        }\n        if (this.state.option === 'cache') {\n            feedbackInfo = '保存凭据'+22+'天'\n            setExpiration()\n        }\n        alert(feedbackInfo)\n        event.preventDefault()\n\n    }\n\n    render() {\n        const handleRadioChange = (event) => {\n            this.setState({'option': event.target.value})\n        };\n        return(\n            <React.Fragment>\n                <Button onClick={() => switchTheme()}>\n                    切换主题\n                </Button>\n                <br /><br />\n                <form onSubmit={(event) => this.CertChange(event)}>\n                    <RadioGroup name={'manageOption'} value={this.state.option} onChange={handleRadioChange}>\n                        <FormControlLabel value={'logout'} control={<Radio/>} label={\"登出\"}/>\n                        <FormControlLabel value={'cache'} control={<Radio/>} label={\"保存凭据\"}/>\n                    </RadioGroup>\n                    <Button type={'submit'}>\n                        确定\n                    </Button>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState(),\n            username: '',\n            password: ''\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n    handleLogin(event) {\n        event.preventDefault()\n        loginRequest(this.state.username, this.state.password)\n    }\n    handleForm(event, type) {\n        if (type === 'username') {\n            this.setState({username: event.target.value})\n        }\n        if (type === 'password') {\n            this.setState({password: event.target.value})\n        }\n    }\n\n    render() {\n        let FormSheet, hello\n        const LoginForm = [\n            <form onSubmit={(e) => this.handleLogin(e)}>\n                <div className={\"AuthForm\"}>\n                    <div>\n                        <Input handler={(e) => {this.handleForm(e, 'username')}}>\n                            用户名称\n                        </Input>\n                        <Input type={\"password\"} handler={(e) => {this.handleForm(e, 'password')}}>\n                            密码\n                        </Input>\n                    </div>\n                    <div className={\"Button\"}>\n                        <Button type={\"submit\"}>\n                            好\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        ]\n\n        if (this.state.store.loginState) {\n            FormSheet = [<CertForm/>]\n            hello = \"认证管理\"\n        }\n        else {\n            FormSheet = LoginForm\n            hello = \"认证\"\n        }\n\n        return (\n            <React.Fragment>\n                <div id={'Amaze'}/>\n                <div id={'ActualCard'}>\n                    <h1>\n                        {hello}\n                    </h1>\n                </div>\n                <div id={'Maze'}/>\n                    <section className={\"AuthCard\"}>\n                        {FormSheet}\n                    </section>\n            </React.Fragment>\n\n\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\n\nimport Overview from \"./Overview\";\nimport { LineHeat, HeatTimeline } from \"./LineHeat\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport Login from \"./Authenticate\";\nimport './index.css';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, { exposedMethods } from \"./Store\";\n\nconst root = document.documentElement\n\n\nfunction setTheme() {\n    if (store.getState().theme === 'light') {\n        root.style.setProperty('--themeTable', '#E3E3E3')\n        root.style.setProperty('--themeBorder', 'none')\n        root.style.setProperty('--themeColor', '#443')\n        root.style.setProperty('--themeHover', '#220')\n        root.style.setProperty('--themeActive', '#220')\n        root.style.setProperty('--themeLayer', 'rgba(250, 250, 250, 0.8)')\n        root.style.setProperty('--themeFilter', 'screen')\n        root.style.setProperty('--themeDarkFilter', 'brightness(1.17)')\n        root.style.setProperty('--themePure0', 'rgba(255, 255, 255, 1)')\n        root.style.setProperty('--themePure1', 'rgba(255, 255, 255, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(80, 80, 80, 0.1)')\n        root.style.setProperty('--controlBlur', '#553')\n        root.style.setProperty('--dockBorderSize', '1px')\n        root.style.setProperty('--actualFilter', 'rgba(255, 255, 255, .8)')\n    }\n    if (store.getState().theme === 'dark') {\n        root.style.setProperty('--themeTable', '#171717')\n        root.style.setProperty('--themeBorder', '0 0 1.5px #EEE')\n        root.style.setProperty('--themeColor', '#EEE')\n        root.style.setProperty('--themeHover', '#AAB')\n        root.style.setProperty('--themeActive', '#FFF')\n        root.style.setProperty('--themeLayer', 'rgba(53, 53, 53, 0.8)')\n        root.style.setProperty('--themeFilter', 'multiply')\n        root.style.setProperty('--themeDarkFilter', 'brightness(.65)')\n        root.style.setProperty('--themePure0', 'rgba(64, 64, 64, 1)')\n        root.style.setProperty('--themePure1', 'rgba(0, 0, 0, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(255, 255, 255, 0.1)')\n        root.style.setProperty('--controlBlur', '#BBC')\n        root.style.setProperty('--dockBorderSize', '2px')\n        root.style.setProperty('--actualFilter', 'rgba(0, 0, 25, .15)')\n\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = store.getState()\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n\n    render() {\n        setTheme()\n        let pagesList = []\n        if (this.state.loginState === true) {\n            pagesList.push(\n                <Switch>\n                    <Route exact path={\"./\"}>\n                        <Redirect to={\"Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"} component={AnimationApp}/>\n                </Switch>)\n        }\n        else {\n            pagesList.push(\n                <Switch>\n                    <Route path={\"*\"}>\n                        <Login />\n                    </Route>\n                </Switch>\n            )\n        }\n        return (\n            <PersistGate store={store} persistor={exposedMethods}>\n                <Router>\n                    {pagesList}\n                </Router>\n            </PersistGate>\n        )\n    }\n}\n\nclass AnimationApp extends React.Component {\n    render() {\n        // keyboard shortcuts\n        window.addEventListener(\"keydown\", function (e) {\n            if (e.defaultPrevented) {\n                return;\n            }\n            function handleShortcutKey(key) {\n                const destination = ['Overview', 'LineHeat', 'HeatTimeline', 'PassengerAnalytics', 'Authenticate']\n                window.location.replace('./' + destination[key - 1])\n            }\n            if (e.key !== undefined) {\n                if (e.key === '1') {handleShortcutKey(1)}\n                if (e.key === '2') {handleShortcutKey(2)}\n                if (e.key === '3') {handleShortcutKey(3)}\n                if (e.key === '4') {handleShortcutKey(4)}\n                if (e.key === 'L' || e.key === 'l') {handleShortcutKey(5)}\n            }\n            else if (e.code !== undefined) {\n                if (e.code === 'Digit1') {handleShortcutKey(1)}\n                if (e.code === 'Digit2') {handleShortcutKey(2)}\n                if (e.code === 'Digit3') {handleShortcutKey(3)}\n                if (e.code === 'Digit4') {handleShortcutKey(4)}\n                if (e.code === 'KeyL') {handleShortcutKey(5)}\n            }\n        })\n\n        return (\n            <React.Fragment>\n                <div className=\"Dock\">\n                    <NavLink to={\"Overview\"} activeClassName={\"active\"} exact>\n                        <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                    </NavLink>\n                    <NavLink to={\"LineHeat\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>线路分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink to={\"HeatTimeline\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>时段分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>客流分析<span>3</span></button>\n                    </NavLink>\n                    <NavLink to={\"Authenticate\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>认证与设置<span>L</span></button>\n                    </NavLink>\n                </div>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={this.props.location}\n                        classNames={\"fade\"}\n                        timeout={250}\n                    >\n                        <Switch>\n                            <Route path={`*/Overview`} component={Overview}/>\n                            <Route path={`*/LineHeat`} component={LineHeat}/>\n                            <Route path={`*/HeatTimeline`} component={HeatTimeline}/>\n                            <Route path={`*/PassengerAnalytics`} component={PassengerAnalytics}/>\n                            <Route path={`*/Authenticate`} component={Login}/>\n                            <Route path={`*`}>\n                                <Redirect to={\"Overview\"}/>\n                            </Route>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}