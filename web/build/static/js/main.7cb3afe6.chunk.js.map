{"version":3,"sources":["Store/methods.js","Store/mapsUpdater.js","Store/index.js","Controllers/Switch.js","Widgets/widgets.js","Controllers/Button.js","Widgets/MapsBlock.js","Overview/index.js","LineHeat/index.js","PassengerAnalytics/index.js","Controllers/Input.js","Authenticate/index.js","App.js","reportWebVitals.js","index.js"],"names":["defaultState","active","theme","loginState","sessionData","timeUpToDate","now","Date","timeline","timePeriod","lineSpectating","stationSpectating","station","flow","flowSpectating","peakSpectating","dashboardData","Store","state","action","newState","JSON","parse","stringify","type","session","logout","line","hoverType","hoverID","time","defaultValue","stationData","pathData","heatData","newMapState","require","refreshDashboard","store","getState","undefined","data","expires","setExpiration","schoolDays","persistConfig","key","storage","CookieStorage","Cookies","expiration","default","persistedMethods","persistReducer","methods","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","exposedMethods","persistStore","mapsPersistConfig","mapsMethods","mapsUpdater","mapsStore","mapsExposedMethods","date","year","getFullYear","toString","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","console","log","axios","post","then","response","result","msg","dispatch","catch","error","alert","MapSwitch","props","switchOptions","this","setState","allOptions","optionsController","index","forEach","perOption","acClass","activated","push","id","onClick","className","enumOptions","React","Component","ThemeSwitch","themeNames","value","transformToCentre","position","left","top","transform","defaultRoundCorner","linesConstructor","dataArray","tintArray","tooltip","lines","tooltipElement","converted","drawn","map","lineIndex","values","y","x","partPoint","name","Object","assign","dot","r","dataKey","stroke","strokeWidth","width","height","style","barConstructor","keys","barContent","fill","Dashboard","rounded","children","nameLabel","size","spacing","tint","frame","borderRadius","Fragment","slice","innerRadius","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","uv","pv","amt","port","SimpleBars","propData","sampleData","mockData","warn","propTintArray","AreaChartTrends","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","fillOpacity","MNButtonStyle","backgroundColor","color","Button","disabled","variant","MapFuture","lazy","MapsBlock","datePicker","argumentPicker","selectedTime","flowStats","storeState","mapState","userArguments","holiday","weather","enabled","condition","temperature","low","high","boom","failure","storeChange","bind","subscribe","modal","e","argument","newArguments","target","checked","dayprop","temperatures","predictionRequest","handleOpen","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","onChange","event","handleChange","label","row","Select","labelId","MenuItem","Slider","valueLabelDisplay","step","marks","min","max","foo","opacity","userSelect","cursor","getStats","triggerStats","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","margin","utils","MomentUtils","handleTime","CardActions","handleTimeUpdate","FormControl","InputLabel","TextField","marginTop","InputLabelProps","shrink","stationArguments","handlePredictionUpdate","fallback","mode","body","document","Index","calculateSize","Math","scrollHeight","scrollWidth","mapsState","addEventListener","removeEventListener","highestFlow","LineHeat","documentElement","clientHeight","HeatTimeline","PassengerAnalytics","Input","handler","CertForm","handleSlider","newValue","duration","feedbackInfo","onSubmit","CertChange","Login","username","password","preventDefault","code","loginRequest","FormSheet","hello","LoginForm","handleLogin","handleForm","root","App","setProperty","pagesList","exact","path","to","AnimationApp","persistor","handleShortcutKey","location","replace","defaultPrevented","activeClassName","TransitionGroup","CSSTransition","classNames","timeout","Overview","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7cb3afe6.chunk.js","sourcesContent":["const defaultState = {\n    active: \"dashboard\",\n    theme: 'light',\n    loginState: false,\n    sessionData: '',\n    timeUpToDate: true,\n    now: new Date('June 1, 2020 22:30:00'),\n    timeline: new Date('June 1, 2020 22:30:00'),\n    timePeriod: '实时',\n    lineSpectating: 'No',\n    stationSpectating: {station: '没有选中站点', flow: 0},\n    flowSpectating: -1,\n    peakSpectating: -1,\n    dashboardData: {}\n}\nconst Store = (state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'login' && action.loginState) {\n        newState.loginState = true\n        newState.sessionData = action.session\n        return newState\n    }\n    if (action.type === 'certMan') {\n        if (action.logout) {\n            return defaultState\n        }\n    }\n    if (action.type === 'hoverUpdate') {\n        newState.lineSpectating = action.line\n        if (action.hoverType === 'station') {\n            newState.stationSpectating.station = action.hoverID\n            newState.stationSpectating.flow = action.flow\n        }\n        return newState\n    }\n    if (action.type === 'switchTheme') {\n        newState.theme = 'light'\n        if (state.theme === 'light') {\n            newState.theme = 'dark'\n        }\n        return newState\n    }\n    if (action.type === 'timeUpdate') {\n        if (action.time > state.now) {\n            newState.timePeriod = '预测'\n        }\n        else if (action.time < state.now) {\n            newState.timePeriod = '历史'\n        }\n        else if (action.now) {\n            newState.timePeriod = '实时'\n        }\n        newState.timeline = action.time\n        return newState\n    }\n    return state\n}\nexport default Store","import store, {refreshDashboard} from \"./index\";\n\nconst defaultValue = {\n    stationData: {},\n    pathData: {},\n    heatData: {},\n    dashboardData: {}\n}\n\nconst Store = (state = defaultValue, action) => {\n    let newMapState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'refresh') {\n        newMapState.stationData = require('../stationaryPlaceholder/stations.json')\n        newMapState.pathData = require('../stationaryPlaceholder/paths.json')\n        refreshDashboard(store.getState().timeline)\n        return newMapState\n    }\n    if (action.type === 'push') {\n        if (action.stationData !== undefined) {newMapState.stationData = action.stationData}\n        if (action.pathData !== undefined) {newMapState.pathData = action.pathData}\n        if (action.heatData !== undefined) {newMapState.heatData = action.heatData}\n        return newMapState\n    }\n    if (action.type === 'loadDashboard') {\n        newMapState.dashboardData = action.data\n        return newMapState\n    }\n    return state\n}\nexport default Store","import { createStore } from \"redux\";\nimport methods from './methods';\nimport mapsUpdater from './mapsUpdater';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { CookieStorage } from 'redux-persist-cookie-storage';\nimport storage from 'redux-persist/lib/storage';\nimport Cookies from 'cookies-js';\nimport axios from \"axios\";\n\nlet expires = 22 * 86400\n\nexport function setExpiration(schoolDays)\n{\n    if (schoolDays === undefined) {\n        schoolDays = 22\n    }\n    expires = schoolDays * 86400;\n}\n\n//组件数据和会话\nconst persistConfig = {\n    key: 'root',\n    storage: new CookieStorage(Cookies, {expiration:\n        {default: expires}\n    })\n}\nconst persistedMethods = persistReducer(persistConfig, methods)\nlet store = createStore(persistedMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport let exposedMethods = persistStore(store)\nexport default store\n\n//地图存储\nconst mapsPersistConfig = {\n    key: 'maps',\n    storage: storage\n}\nconst mapsMethods = persistReducer(mapsPersistConfig, mapsUpdater)\nexport let mapsStore = createStore(mapsMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport let mapsExposedMethods = persistStore(mapsStore)\n\nexport function searchObject(data, searchKey, value, requiredKey) {\n    let result\n    try {\n        data.forEach(function (theObject) {\n            if (theObject[searchKey] === value) {\n                result = theObject[requiredKey]\n            }\n        })\n    }\n    catch(error)\n    {\n        return result\n    }\n\n    return result\n}\nexport function refreshDashboard(timeline) {\n    if (timeline === undefined) {\n        console.log('undefined date')\n        return\n    }\n    const date = new Date(timeline)\n    const data = {\n        year: date.getFullYear().toString(),\n        month: (date.getMonth() + 1).toString(),\n        day: date.getDate().toString(),\n        hour: date.getHours().toString(),\n        minute: date.getMinutes().toString()\n    }\n    console.log('Time update request fired')\n    axios.post('/api/time/json', data)\n        .then(response => {\n            console.log(response.data.result.msg)\n            mapsStore.dispatch({\n                type: 'loadDashboard',\n                data: response.data\n            })\n        })\n        .catch(error => {\n            alert(error)\n        })\n}\nexport function moodyTimeDifference(givenTime) {\n    const moodyHour = givenTime.getHours() + (givenTime.getMinutes() > 30 ? 1 : 0)\n    const moodyMin = givenTime.getMinutes() > 15 && givenTime.getMinutes() <= 45 ? 30 : 0\n    return givenTime.getMonth()+1 + ':' + givenTime.getDate() + ':' + moodyHour + ':' + moodyMin\n}","import React from \"react\";\nimport store from \"../Store\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        let index = 0\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport class ThemeSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState()\n        }\n    }\n    themeNames = ['深色', '浅色']\n    enumOptions() {\n        let optionsController = []\n        let index = 0\n        this.themeNames.forEach(\n            function (perOption) {\n                const {theme} = store.getState()\n                const themeOptions = ['dark', 'light']\n                let acClass = \"SwitchTick\"\n                if (theme === themeOptions[index]) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => {\n                            store.dispatch({\n                                type: 'switchTheme'\n                            })\n                        }}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n    dispatchTheme(value) {\n        store.dispatch({\n            type: 'switchTheme',\n            theme: value\n        })\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions()}\n            </div>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport './style.css';\nimport {\n    AreaChart, Area,\n    RadialBarChart,\n    RadialBar,\n    PolarAngleAxis,\n    Legend, Tooltip,\n    Cell,\n    LineChart,\n    CartesianGrid,\n    XAxis,\n    YAxis, Line, BarChart, Bar\n} from \"recharts\";\nimport '../Controllers/Switch';\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\nconst defaultRoundCorner = 20;\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\n\nfunction constructData(propData, sampleData) {\n    if (propData !== undefined) {\n        if (propData == null) {\n            console.warn(\"Null data received\")\n        }\n        return propData\n    } else return sampleData\n}\n\nfunction linesConstructor(dataArray, tintArray, state, tooltip) {\n    const lines = dataArray.lines\n    const tooltipElement = tooltip ? [<Tooltip/>] : []\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{r: 3}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={2}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend/>\n            {tooltipElement}\n            {drawn}\n        </LineChart>\n    )\n}\n\nfunction barConstructor(dataArray, tintArray, state) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    const barContent = keys.map(function (key, index) {\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n            />\n        )\n    })\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [{name: '摸', value: 40}, {name: '到', value: 90}, {name: '飞', value: 60}, {name: '起', value: 70}];\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const size = this.props.size * 2\n        const spacing = size / 8\n        const tint = [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded}\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(0, 1)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(1, 2)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(2, 3)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(3, 4)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = {name: '鸽子力', value: 80};\n        this.state = {\n            rounded: defaultRoundCorner,\n            data: (this.props.data !== undefined) ? this.props.data : mockData\n        }\n    }\n\n    greatLegend(value) {\n        return (\n            <span>{value}</span>\n        )\n    }\n\n    render() {\n        const tint = \"#137A7F\"\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded, align: \"center\"}\n        const size = this.props.size\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[this.state.data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ]\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={this.state.data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={2} dot={{r: 3}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={2} dot={{r: 3}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = {\n            xAxisMeasurement: \"XExample\",\n            lines: [\n                {\n                    name: 'One',\n                    values: [\n                        4000,\n                        5000,\n                        3500,\n                        5000\n                    ]\n                },\n                {\n                    name: \"Two\",\n                    values: [\n                        7500,\n                        5560,\n                        2280,\n                        5600\n                    ]\n                },\n            ]\n        }\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data,\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#EA0\", \"#08A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(this.state.data, tint, port, this.props.tooltip)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = constructData(this.props.data, {\"uv\": 900, \"pv\": 609})\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const tint = setTintArray(this.props.tint)\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": this.state.rounded\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([this.state.data], tint, port)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class AreaChartTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                \"name\": \"Page A\",\n                \"uv\": 4000,\n                \"pv\": 2400,\n                \"amt\": 2400\n            },\n            {\n                \"name\": \"Page B\",\n                \"uv\": 3000,\n                \"pv\": 1398,\n                \"amt\": 2210\n            },\n            {\n                \"name\": \"Page C\",\n                \"uv\": 2000,\n                \"pv\": 9800,\n                \"amt\": 2290\n            },\n            {\n                \"name\": \"Page D\",\n                \"uv\": 2780,\n                \"pv\": 3908,\n                \"amt\": 2000\n            },\n            {\n                \"name\": \"Page E\",\n                \"uv\": 1890,\n                \"pv\": 4800,\n                \"amt\": 2181\n            },\n            {\n                \"name\": \"Page F\",\n                \"uv\": 2390,\n                \"pv\": 3800,\n                \"amt\": 2500\n            },\n            {\n                \"name\": \"Page G\",\n                \"uv\": 3490,\n                \"pv\": 4300,\n                \"amt\": 2100\n            }\n        ]\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: this.state.rounded\n        }\n        return (\n            <div\n                className={'Layer'}\n                style={frame}\n            >\n                <AreaChart\n                    width={port.width}\n                    height={port.height}\n                    data={this.state.data}\n                    style={transformToCentre}\n                >\n                    <defs>\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                    <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                </AreaChart>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: 'var(--themeButtonBackground)',\n    color: 'var(--themeColor)',\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n            type: (this.props.type !== undefined) ? this.props.type : \"\",\n            disabled: (this.props.disabled === true),\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick} type={this.state.type} disabled={this.state.disabled}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Suspense } from \"react\";\nimport store, { mapsStore } from \"../Store\";\nimport {\n    Button as MaterialButton,\n    Card, CardActions, CardContent, Typography,\n    FormControl, FormControlLabel, FormGroup, FormLabel,\n    Fade, Modal,\n    Checkbox, Slider, Select, MenuItem, TextField, InputLabel,\n} from \"@material-ui/core\";\nimport MapSwitch from \"../Controllers/Switch\";\nimport { Button } from \"../Controllers/Button\";\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport axios from \"axios\";\n\nconst MapFuture = React.lazy(() => import('./Map'));\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction predictionRequest(userArguments) {\n    try {\n        axios.post('/python/predict', {\n            station: userArguments.boom.station,\n            flow: userArguments.boom.flow,\n            dayprop: userArguments.holiday,\n            weather: userArguments.weather.condition,\n            temperatures: [userArguments.weather.temperature.low, userArguments.weather.temperature.high],\n        })\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            datePicker: false,\n            argumentPicker: false,\n            activated: \"无\",\n            selectedTime: new Date(store.getState().timeline),\n            flowStats: true,\n            storeState: store.getState(),\n            mapState: mapsStore.getState(),\n            userArguments: {\n                holiday: undefined,\n                weather: {\n                    enabled: false,\n                    condition: '阴',\n                    temperature: {\n                        low: undefined,\n                        high: undefined\n                    }\n                },\n                boom: {\n                    enabled: false,\n                    station: undefined,\n                    flow: undefined,\n                    type: 0,\n                    failure: false,\n                }\n            }\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState({storeState: store.getState()})\n    }\n    handleOpen(modal) {\n        if (modal === 'datePicker') {this.setState({datePicker: !this.state.datePicker})}\n        if (modal === 'argumentPicker') {this.setState({argumentPicker: !this.state.argumentPicker})}\n    }\n    handleTime(e) {\n        this.setState({selectedTime: e})\n    }\n    handleChange(e, argument) {\n        let newArguments = this.state.userArguments\n        if (argument === 'holiday') {\n            newArguments.holiday = e.target.checked\n        }\n        if (argument === 'boomTick') {\n            newArguments.boom.enabled = e.target.checked\n        }\n        if (argument === 'boomType') {\n            newArguments.boom.type = e.target.value\n        }\n        if (argument === 'boom') {\n            newArguments.boom.station = this.state.stationSpectating\n            newArguments.boom.flow = e\n        }\n        if (argument === 'weatherTick') {\n            newArguments.weather.enabled = e.target.checked\n        }\n        if (argument === 'weatherTemperatureLow') {\n            newArguments.weather.temperature.low = e.target.value\n        }\n        if (argument === 'weatherTemperatureHigh') {\n            newArguments.weather.temperature.high = e.target.value\n        }\n        if (argument === 'weather') {\n            newArguments.weather.condition = e.target.value\n        }\n        if (argument === 'failure') {\n            newArguments.boom.failure = e.target.checked\n        }\n        this.setState({userArguments: newArguments})\n    }\n    handlePredictionUpdate(type) {\n        predictionRequest(this.state.userArguments, type)\n        alert('预测请求已经提交'+this.state.userArguments.boom.flow)\n        this.handleOpen('argumentPicker')\n    }\n    handleTimeUpdate() {\n        store.dispatch({\n            type: 'timeUpdate',\n            time: this.state.selectedTime\n        })\n        mapsStore.dispatch({\n            type: 'refresh'\n        })\n        this.handleOpen('datePicker')\n    }\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>线路</td>\n                    <td>{this.state.storeState.lineSpectating}</td>\n                </tr>\n                <tr>\n                    <td>断面客流</td>\n                    <td>{this.state.storeState.stationSpectating.flow}</td>\n                </tr>\n                <tr>\n                    <td>高峰时段</td>\n                    <td>9:00</td>\n                </tr>\n            </table>\n        )\n    }\n    stationArguments() {\n        if (this.state.stationSpectating === 'No') {\n            return (\n                <FormLabel component={'legend'}>没有选择站点</FormLabel>\n            )\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <FormLabel component={'legend'}>{this.state.storeState.stationSpectating.station}</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.userArguments.holiday}\n                                    onChange={(event) => this.handleChange(event, 'failure')}\n                                />\n                            }\n                            label={'故障'}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.userArguments.boom.enabled}\n                                        onChange={(event) => this.handleChange(event, 'boomTick')}\n                                    />\n                                }\n                                label={'突发客流'}\n                            />\n                            <FormGroup row>\n                                <Select\n                                    labelId={'客流类型'}\n                                    id={'客流类型'}\n                                    value={this.state.userArguments.boom.type}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(event) => this.handleChange(event, 'boomType')}\n                                    style={{width: '100%'}}\n                                >\n                                    <MenuItem value={0}>进站</MenuItem>\n                                    <MenuItem value={1}>出站</MenuItem>\n                                    <MenuItem value={2}>进站加</MenuItem>\n                                    <MenuItem value={3}>出站加</MenuItem>\n                                </Select>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Slider\n                                    defaultValue={3000}\n                                    valueLabelDisplay=\"auto\"\n                                    step={10}\n                                    marks\n                                    min={10}\n                                    max={110}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(foo, event) => this.handleChange(event, 'boom')}\n                                />\n                            </FormGroup>\n                        </FormGroup>\n\n                    </FormGroup>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"Layer\"} style={{borderRadius: this.state.rounded}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch\n                        switchOptions={[\"无\", \"热力图\"]}\n                        setState={(e) => (this.setState(e))}\n                        state={this.state}\n                    />\n                    <Button onClick={() => this.handleOpen('datePicker')}>\n                        选择日期\n                    </Button>\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}数据\n                    </Button>\n                    {this.state.flowStats ? <Button onClick={() => this.handleOpen('argumentPicker')}>模拟数据变更</Button> : ''}\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.selectedTime}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"primary\"}\n                                        onClick={() => this.handleTimeUpdate(this.state.storeState.time)}\n                                    >\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"default\"}\n                                        onClick={() => this.handleOpen('datePicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.argumentPicker}>\n                        <Fade in={this.state.argumentPicker}>\n                            <Card style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        输入参数\n                                    </Typography>\n                                    <div className={'DualPanel'}>\n                                        <FormControl component={'fieldset'}>\n                                            <FormLabel component={'legend'}>该时间操作</FormLabel>\n                                            <FormGroup row>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.holiday}\n                                                            onChange={this.state}\n                                                        />\n                                                    }\n                                                    label={'放假'}\n                                                />\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weatherTick')}\n                                                        />\n                                                    }\n                                                    label={'变更天气'}\n                                                />\n                                                <FormGroup>\n                                                    <FormControl>\n                                                        <InputLabel id={'天气选择标签'}>\n                                                            天气类型\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"天气选择\"\n                                                            id=\"天气选择\"\n                                                            value={this.state.userArguments.weather.condition}\n                                                            disabled={!this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weather')}\n                                                        >\n                                                            <MenuItem value={'阴'}>阴</MenuItem>\n                                                            <MenuItem value={'晴'}>晴</MenuItem>\n                                                            <MenuItem value={'多云'}>多云</MenuItem>\n                                                            <MenuItem value={'小雨'}>小雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>中雨</MenuItem>\n                                                            <MenuItem value={'大雨'}>大雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>暴雨</MenuItem>\n                                                            <MenuItem value={'雷阵雨'}>雷阵雨</MenuItem>\n                                                        </Select>\n                                                    </FormControl>\n\n                                                    <TextField\n                                                        id={'最低温度输入'}\n                                                        label={'输入最低摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureLow')}\n                                                    />\n                                                    <TextField\n                                                        id={'最高温度输入'}\n                                                        label={'输入最高摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureHigh')}\n                                                    />\n                                                </FormGroup>\n                                            </FormGroup>\n                                        </FormControl>\n                                        <br />\n                                        <FormControl component={'fieldset'}>\n                                            {this.stationArguments()}\n                                        </FormControl>\n                                    </div>\n                                </CardContent>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"} onClick={() => this.handlePredictionUpdate('meow')}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('argumentPicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>Maps loading...</div>}>\n                        <MapFuture\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                            mode={this.state.activated}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport { MapsBlock } from '../Widgets/MapsBlock';\nimport { mapsStore, refreshDashboard } from \"../Store\";\n\nconst body = document.body\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n            size: undefined\n        }\n        this.storeChange = this.storeChange.bind(this)\n        mapsStore.subscribe(this.storeChange)\n    }\n\n    storeChange() {\n        this.setState({mapsState: mapsStore.getState().dashboardData})\n    }\n\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n    setData(name) {\n        if (name === 'overall') {\n            const data = this.state.mapsState.highestFlow\n            if (data !== undefined) {return data}\n            return ({name: '数据暂缺', value: 0})\n        }\n        if (name === 'overloadedStation') {\n            const data = this.state.mapsState.highestFlow\n            if (data !== undefined) {return data}\n            return ({name: '数据暂缺', value: 0})\n        }\n        if (name === 'distPressure') {\n            return ([\n                {name: 'dist1', value: 85},\n                {name: 'dist3', value: 83},\n                {name: 'dist5', value: 77},\n                {name: 'dist6', value: 66}\n            ])\n        }\n    }\n\n    render() {\n        const {size} = this.state\n        return (\n                <div className={\"OverviewGrid\"}>\n                    <div className={\"div1\"}>\n                        <Widgets.DashboardOne size={size} data={undefined}/>\n                    </div>\n                    <div className={\"div2\"}>\n                        <Widgets.DashboardOne size={size} data={undefined}/>\n                    </div>\n                    <div className={\"div3\"}>\n                        <Widgets.Dashboard size={size} data={undefined}>\n                            客流高峰区域\n                        </Widgets.Dashboard>\n                    </div>\n                    <div className={\"div4\"}>\n                        <Widgets.Dashboard size={size} data={undefined}>\n                            客流高峰区域\n                        </Widgets.Dashboard>\n                    </div>\n                    <div className={\"div5\"}>\n                        <MapsBlock\n                            port={{\"height\": size * 4, \"width\": size * 4}}\n                        />\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\n\nconst body = document.body\n\nexport class LineHeat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize() {\n        this.setState({\n            size: Math.min(document.documentElement.clientHeight / 8, body.scrollWidth / 8)\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        return(\n            <div className={\"LHGrid\"}>\n                <div className=\"div1\"></div>\n                <div className=\"div2\"></div>\n                <div className=\"div3\"></div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n                <div className=\"div7\"></div>\n                <div className=\"div8\"></div>\n                <div className=\"div9\"></div>\n                <div className=\"div10\"></div>\n                <div className=\"div11\"></div>\n                <div className=\"div12\"></div>\n                <div className=\"div13\"></div>\n                <div className=\"div14\"></div>\n                <div className=\"div15\"></div>\n                <div className=\"div16\"></div>\n                <div className=\"div17\"></div>\n                <div className=\"div18\"></div>\n                <div className=\"div19\"></div>\n                <div className=\"div20\"></div>\n            </div>\n        )\n    }\n}\n\nexport class HeatTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize = () => {\n        this.setState({\n            size: body.scrollHeight / 5\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return(\n            <div className={\"THGrid\"}>\n                <div className=\"div1\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div2\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div3\">\n                    <Widgets.AreaChartTrends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\n\nconst body = document.body\n\nclass PassengerAnalytics extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n    render() {\n        const {size} = this.state\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                            <Widgets.SimpleBars\n                                port={{\"height\": size, \"width\": size * 2}}\n                                tint={[\"#2196f3\", \"#8bc34a\"]}\n                            >\n                                Simple Bars\n                            </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div2\"></div>\n                    <div className=\"div3\"></div>\n                    <div className=\"div4\"></div>\n                    <div className=\"div5\"></div>\n                    <div className=\"div6\"></div>\n                    <div className=\"div7\"></div>\n                    <div className=\"div8\"></div>\n                    <div className=\"div9\"></div>\n                    <div className=\"div10\"></div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from \"react\";\nimport \"./style.css\"\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (this.props.type !== undefined) ? this.props.type : \"text\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={'InputFunction'}>\n                <label>\n                    {this.props.children}\n                </label>\n                <input className={'coilsInput'} type={this.state.type} onChange={(event => this.props.handler(event))}/>\n            </div>\n        )\n    }\n}\n\nexport default Input","import React from \"react\";\nimport { Input, Button } from '../Controllers';\nimport { FormGroup, Slider, FormLabel } from '@material-ui/core'\nimport axios from \"axios\";\nimport './style.css';\nimport store, { setExpiration } from \"../Store\";\nimport { ThemeSwitch } from \"../Controllers/Switch\";\n\nfunction loginRequest(username, password) {\n    try {\n        axios.post('/api/log', {\n            'username': username,\n            'password': password\n        }).then(function (response) {\n            console.log(response.data)\n            alert(response.data.msg)\n            if (response.data.code === 200) {\n                store.dispatch({\n                    type: 'login',\n                    loginState: true,\n                    session: response.data\n                })\n            }\n        })\n    }\n    catch (error) {\n        alert('网络连接出现了一些问题')\n        console.error(error);\n    }\n}\n\nclass CertForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: 1,\n        }\n    }\n    CertChange(type) {\n        let feedbackInfo\n        if (type === 'logout') {\n            feedbackInfo = '注销凭据完成'\n            const action = {\n                type: 'certMan',\n                logout: true\n            }\n            store.dispatch(action)\n        }\n        if (type === 'cache') {\n            feedbackInfo = '保存凭据' + this.state.duration +'天'\n            setExpiration(this.state.duration)\n        }\n        alert(feedbackInfo)\n    }\n    handleSlider = (event, newValue) => {\n        this.setState({duration: newValue})\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <ThemeSwitch/>\n                <form\n                    style={{marginTop: '2em'}}\n                    onSubmit={() => this.CertChange('cache', this.state.duration)}\n                >\n                    <FormGroup>\n                        <FormLabel style={{color: 'var(--ThemeColor)'}} component={'legend'}>保存凭据时长（天）</FormLabel>\n                        <div style={{margin: '0 auto', width: 'calc(100% - 20px)'}}>\n                            <Slider\n                                defaultValue={1}\n                                valueLabelDisplay=\"auto\"\n                                step={5}\n                                marks\n                                min={1}\n                                max={31}\n                                onChange={this.handleSlider}\n                            />\n                        </div>\n                    </FormGroup>\n                    <Button type={'submit'}>\n                        保存凭据\n                    </Button>\n                    <br />\n                    <div style={{marginTop: '20px'}}>\n                        <Button onClick={() => this.CertChange('logout')}>\n                            注销凭据\n                        </Button>\n                    </div>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState(),\n            username: '',\n            password: ''\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n    handleLogin(event) {\n        event.preventDefault()\n        loginRequest(this.state.username, this.state.password)\n    }\n    handleForm(event, type) {\n        if (type === 'username') {\n            this.setState({username: event.target.value})\n        }\n        if (type === 'password') {\n            this.setState({password: event.target.value})\n        }\n    }\n\n    render() {\n        let FormSheet, hello\n        const LoginForm = [\n            <form onSubmit={(e) => this.handleLogin(e)}>\n                <div className={\"AuthForm\"}>\n                    <div>\n                        <Input handler={(e) => {this.handleForm(e, 'username')}}>\n                            用户名称\n                        </Input>\n                        <Input type={\"password\"} handler={(e) => {this.handleForm(e, 'password')}}>\n                            密码\n                        </Input>\n                    </div>\n                    <div className={\"Button\"}>\n                        <Button type={\"submit\"}>\n                            好\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        ]\n\n        if (this.state.store.loginState) {\n            FormSheet = [<CertForm/>]\n            hello = \"认证管理\"\n        }\n        else {\n            FormSheet = LoginForm\n            hello = \"认证\"\n        }\n\n        return (\n            <React.Fragment>\n                <div id={'Amaze'}/>\n                <div id={'ActualCard'}>\n                    <h1>\n                        {hello}\n                    </h1>\n                </div>\n                <div id={'Maze'}/>\n                    <section className={\"AuthCard\"}>\n                        {FormSheet}\n                    </section>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\n\nimport Overview from \"./Overview\";\nimport { LineHeat, HeatTimeline } from \"./LineHeat\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport Login from \"./Authenticate\";\nimport './index.css';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, { exposedMethods } from \"./Store\";\n\nconst root = document.documentElement\n\nfunction setTheme() {\n    if (store.getState().theme === 'light') {\n        root.style.setProperty('--themeTable', '#E3E3E3')\n        root.style.setProperty('--themeBorder', 'none')\n        root.style.setProperty('--themeColor', '#443')\n        root.style.setProperty('--themeHover', '#220')\n        root.style.setProperty('--themeActive', '#220')\n        root.style.setProperty('--themeLayer', 'rgba(250, 250, 250, 0.8)')\n        root.style.setProperty('--themeFilter', 'screen')\n        root.style.setProperty('--themeDarkFilter', 'brightness(1.17)')\n        root.style.setProperty('--themePure0', 'rgba(255, 255, 255, 1)')\n        root.style.setProperty('--themePure1', 'rgba(255, 255, 255, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(80, 80, 80, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#FFF')\n        root.style.setProperty('--controlBlur', '#553')\n        root.style.setProperty('--dockBorderSize', '1px')\n        root.style.setProperty('--actualFilter', 'rgba(255, 255, 255, .8)')\n    }\n    if (store.getState().theme === 'dark') {\n        root.style.setProperty('--themeTable', '#171717')\n        root.style.setProperty('--themeBorder', '0 0 1.5px #EEE')\n        root.style.setProperty('--themeColor', '#EEE')\n        root.style.setProperty('--themeHover', '#AAB')\n        root.style.setProperty('--themeActive', '#FFF')\n        root.style.setProperty('--themeLayer', 'rgba(53, 53, 53, 0.8)')\n        root.style.setProperty('--themeFilter', 'multiply')\n        root.style.setProperty('--themeDarkFilter', 'brightness(.65)')\n        root.style.setProperty('--themePure0', 'rgba(64, 64, 64, 1)')\n        root.style.setProperty('--themePure1', 'rgba(0, 0, 0, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(255, 255, 255, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#535353')\n        root.style.setProperty('--controlBlur', '#BBC')\n        root.style.setProperty('--dockBorderSize', '2px')\n        root.style.setProperty('--actualFilter', 'rgba(0, 0, 25, .15)')\n\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = store.getState()\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n\n    render() {\n        setTheme()\n        let pagesList = []\n        if (this.state.loginState === true) {\n            pagesList.push(\n                <Switch>\n                    <Route exact path={\"./\"}>\n                        <Redirect to={\"Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"} component={AnimationApp}/>\n                </Switch>\n            )\n        }\n        else {\n            pagesList.push(\n                <Switch>\n                    <Route path={\"*\"}>\n                        <Login />\n                    </Route>\n                </Switch>\n            )\n        }\n        return (\n            <PersistGate store={store} persistor={exposedMethods}>\n                <Router>\n                    {pagesList}\n                </Router>\n            </PersistGate>\n        )\n    }\n}\n\nclass AnimationApp extends React.Component {\n    render() {\n        // keyboard shortcuts\n        window.addEventListener(\"keydown\", function (e) {\n            if (e.defaultPrevented) {\n                return;\n            }\n            function handleShortcutKey(key) {\n                const destination = ['Overview', 'LineHeat', 'HeatTimeline', 'PassengerAnalytics', 'Authenticate']\n                window.location.replace('./' + destination[key - 1])\n            }\n            if (e.key !== undefined) {\n                if (e.key === '1') {handleShortcutKey(1)}\n                if (e.key === '2') {handleShortcutKey(2)}\n                if (e.key === '3') {handleShortcutKey(3)}\n                if (e.key === '4') {handleShortcutKey(4)}\n                if (e.key === 'L' || e.key === 'l') {handleShortcutKey(5)}\n            }\n            else if (e.code !== undefined) {\n                if (e.code === 'Digit1') {handleShortcutKey(1)}\n                if (e.code === 'Digit2') {handleShortcutKey(2)}\n                if (e.code === 'Digit3') {handleShortcutKey(3)}\n                if (e.code === 'Digit4') {handleShortcutKey(4)}\n                if (e.code === 'KeyL') {handleShortcutKey(5)}\n            }\n        })\n\n        return (\n            <React.Fragment>\n                <div className=\"Dock\">\n                    <NavLink key={\"Overview\"} to={\"Overview\"} activeClassName={\"active\"} exact>\n                        <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                    </NavLink>\n                    <NavLink key={\"LineHeat\"} to={\"LineHeat\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>线路分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"HeatTimeline\"} to={\"HeatTimeline\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>时段分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"PassengerAnalytics\"} to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>客流分析<span>3</span></button>\n                    </NavLink>\n                    <NavLink key={\"Authenticate\"} to={\"Authenticate\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>认证与设置<span>L</span></button>\n                    </NavLink>\n                </div>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={this.props.location}\n                        classNames={\"fade\"}\n                        timeout={250}\n                    >\n                        <Switch>\n                            <Route path={`*/Overview`} component={Overview}/>\n                            <Route path={`*/LineHeat`} component={LineHeat}/>\n                            <Route path={`*/HeatTimeline`} component={HeatTimeline}/>\n                            <Route path={`*/PassengerAnalytics`} component={PassengerAnalytics}/>\n                            <Route path={`*/Authenticate`} component={Login}/>\n                            <Route path={`*`}>\n                                <Redirect to={\"Overview\"}/>\n                            </Route>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}