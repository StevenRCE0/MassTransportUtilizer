{"version":3,"sources":["Store/methods.js","Store/mapsUpdater.js","Store/index.js","Controllers/Switch.js","Widgets/widgets.js","Controllers/Button.js","Widgets/MapsBlock.js","Overview/index.js","LineHeat/index.js","PassengerAnalytics/index.js","Controllers/Input.js","Authenticate/index.js","App.js","reportWebVitals.js","index.js"],"names":["defaultState","active","theme","loginState","sessionData","timeUpToDate","now","Date","timeline","timePeriod","timeNoGo","lineSpectating","stationSpectating","station","flow","flowSpectating","peakSpectating","dashboardData","Store","state","action","newState","JSON","parse","stringify","type","session","logout","line","hoverType","hoverID","live","mapsStore","dispatch","time","value","defaultValue","initiated","stationData","pathData","heatData","newMapState","require","refreshDashboard","store","getState","undefined","data","expires","setExpiration","schoolDays","persistConfig","key","storage","CookieStorage","Cookies","expiration","default","persistedMethods","persistReducer","methods","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","exposedMethods","persistStore","mapsPersistConfig","mapsMethods","mapsUpdater","mapsExposedMethods","date","year","getFullYear","toString","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","console","log","axios","post","then","response","result","msg","catch","error","clearStorage","MapSwitch","props","switchOptions","this","setState","allOptions","optionsController","index","forEach","perOption","acClass","activated","push","id","onClick","className","enumOptions","React","Component","ThemeSwitch","themeNames","Fragment","style","position","height","transformToCentre","left","top","transform","defaultRoundCorner","makeAvailable","thing","fixDictionaryKeys","theKeys","zoom","emptyData","zoomSet","theKeysSet","map","e","linesConstructor","dataArray","tintArray","tooltip","lines","tooltipElement","converted","drawn","lineIndex","values","y","x","partPoint","name","Object","assign","dot","r","dataKey","stroke","strokeWidth","width","barConstructor","label","keys","barContent","labelSet","fill","Dashboard","nameLabel","size","innerRadius","tint","frame","borderRadius","children","slice","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","uv","pv","amt","port","SimpleBars","render","propTintArray","dataToConstruct","newDictionary","makeDictionaryPairs","AreaChartTrends","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","fillOpacity","GreatLegends","inside","getFromData","makeEmpty","MNButtonStyle","backgroundColor","color","Button","disabled","variant","MapFuture","lazy","MapsBlock","rounded","datePicker","argumentPicker","selectedTime","flowStats","storeState","mapState","userArguments","holiday","weather","enabled","condition","temperature","low","high","boom","failure","storeChange","bind","subscribe","modal","argument","newArguments","target","checked","dayprop","temperatures","predictionRequest","alert","handleOpen","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","onChange","event","handleChange","row","Select","labelId","MenuItem","Slider","valueLabelDisplay","step","marks","min","max","foo","opacity","userSelect","cursor","getStats","moment","format","display","flexDirection","justifyContent","triggerStats","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","margin","utils","MomentUtils","handleTime","CardActions","handleTimeUpdate","FormControl","InputLabel","TextField","marginTop","InputLabelProps","shrink","stationArguments","handlePredictionUpdate","fallback","mode","body","document","Index","calculateSize","Math","scrollHeight","scrollWidth","mapsState","addEventListener","removeEventListener","highestFlow","overallFlow","highestDist4","lineFlow","LineHeat","Suspense","HeatTimeline","PassengerAnalytics","u","p","Input","handler","CertForm","handleSlider","newValue","duration","feedbackInfo","onSubmit","CertChange","Login","username","password","preventDefault","code","loginRequest","FormSheet","hello","LoginForm","handleLogin","handleForm","root","documentElement","App","setProperty","pagesList","exact","path","to","AnimationApp","persistor","handling","redirect","done","setTimeout","history","listen","location","pathname","wary","themeSwitchKey","themeSwitcherWary","handleShortcutKey","defaultPrevented","activeClassName","TransitionGroup","CSSTransition","classNames","timeout","Overview","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"mTAEMA,EAAe,CACjBC,OAAQ,YACRC,MAAO,QACPC,YAAY,EACZC,YAAa,GACbC,cAAc,EACdC,IAAK,IAAIC,KAAK,yBACdC,SAAU,IAAID,KAAK,yBACnBE,WAAY,eACZC,SAAU,iCACVC,eAAgB,KAChBC,kBAAmB,CAACC,QAAS,uCAAUC,KAAM,GAC7CC,gBAAiB,EACjBC,gBAAiB,EACjBC,cAAe,IAsDJC,EApDD,WAAmC,IAAlCC,EAAiC,uDAAzBnB,EAAcoB,EAAW,uCACxCC,EAAWC,KAAKC,MAAMD,KAAKE,UAAUL,IACzC,MAAoB,UAAhBC,EAAOK,MAAoBL,EAAOjB,YAClCkB,EAASlB,YAAa,EACtBkB,EAASjB,YAAcgB,EAAOM,QACvBL,GAES,YAAhBD,EAAOK,MACHL,EAAOO,OACA3B,EAGK,gBAAhBoB,EAAOK,MACPJ,EAASV,eAAiBS,EAAOQ,KACR,YAArBR,EAAOS,YACPR,EAAST,kBAAkBC,QAAUO,EAAOU,QAC5CT,EAAST,kBAAkBE,KAAOM,EAAON,MAEtCO,GAES,gBAAhBD,EAAOK,MACPJ,EAASnB,MAAQ,QACG,UAAhBiB,EAAMjB,QACNmB,EAASnB,MAAQ,QAEdmB,GAES,eAAhBD,EAAOK,MACa,IAAhBL,EAAOW,MACPV,EAASZ,WAAa,eACtBY,EAASb,SAAWW,EAAMb,IAC1B0B,EAAUC,SAAS,CAACR,KAAM,YACnBJ,IAEPD,EAAOc,KAAOf,EAAMb,IACpBe,EAASZ,WAAa,eAEjBW,EAAOc,KAAOf,EAAMb,MACzBe,EAASZ,WAAa,gBAE1BY,EAASb,SAAWY,EAAOc,KACpBb,GAES,SAAhBD,EAAOK,MACPJ,EAASX,SAA4B,iBAAjBU,EAAOe,MACpBd,GAES,UAAhBD,EAAOK,KACAzB,EAEJmB,GClELiB,EAAe,CACjBC,UAAW,EACXC,YAAa,GACbC,SAAU,GACVC,SAAU,GACVvB,cAAe,IA6BJC,EA1BD,WAAmC,IAAlCC,EAAiC,uDAAzBiB,EAAchB,EAAW,uCACxCqB,EAAcnB,KAAKC,MAAMD,KAAKE,UAAUL,IAC5C,MAAoB,YAAhBC,EAAOK,MACFgB,EAAYJ,YACbI,EAAYxB,cAAgByB,EAAQ,KACpCD,EAAYH,YAAcI,EAAQ,KAClCD,EAAYF,SAAWG,EAAQ,MAEnCC,EAAiBC,EAAMC,WAAWrC,UAC3BiC,GAES,SAAhBrB,EAAOK,WACoBqB,IAAvB1B,EAAOkB,cAA4BG,EAAYH,YAAclB,EAAOkB,kBAChDQ,IAApB1B,EAAOmB,WAAyBE,EAAYF,SAAWnB,EAAOmB,eAC1CO,IAApB1B,EAAOoB,WAAyBC,EAAYD,SAAWpB,EAAOoB,UAC3DC,GAES,kBAAhBrB,EAAOK,MACPgB,EAAYxB,cAAgBG,EAAO2B,KAC5BN,GAES,UAAhBrB,EAAOK,KACAW,EAEJjB,G,sECzBP6B,EAAU,QAEP,SAASC,EAAcC,QAEPJ,IAAfI,IACAA,EAAa,IAEjBF,EAAuB,MAAbE,EAId,IAAMC,EAAgB,CAClBC,IAAK,OACLC,QAAS,IAAIC,gBAAcC,IAAS,CAACC,WACjC,CAACC,QAAST,MAGZU,EAAmBC,YAAeR,EAAeS,GACnDhB,EAAQiB,YAAYH,EAAkBI,OAAOC,8BAAgCD,OAAOC,gCAE7EC,EAAiBC,YAAarB,GAC1BA,QAGTsB,EAAoB,CACtBd,IAAK,OACLC,QAASA,KAEPc,EAAcR,YAAeO,EAAmBE,GAC3CpC,EAAY6B,YAAYM,EAAaL,OAAOC,8BAAgCD,OAAOC,gCACnFM,EAAqBJ,YAAajC,GAmBtC,SAASW,EAAiBnC,GAC7B,QAAiBsC,IAAbtC,EAAJ,CAIA,IAAM8D,EAAO,IAAI/D,KAAKC,GAChBuC,EAAO,CACTwB,KAAMD,EAAKE,cAAcC,WACzBC,OAAQJ,EAAKK,WAAa,GAAGF,WAC7BG,IAAKN,EAAKO,UAAUJ,WACpBK,KAAMR,EAAKS,WAAWN,WACtBO,OAAQV,EAAKW,aAAaR,YAE9BS,QAAQC,IAAI,6BACZC,IAAMC,KAAK,iBAAkBtC,GACxBuC,MAAK,SAAAC,GACFL,QAAQC,IAAII,EAASxC,KAAKyC,OAAOC,KACjCzD,EAAUC,SAAS,CACfR,KAAM,gBACNsB,KAAMwC,EAASxC,OAEnBH,EAAMX,SAAS,CACXR,KAAM,OACNU,MAAOoD,EAASxC,KAAKyC,OAAOC,SAGnCC,OAAM,SAAAC,GACHT,QAAQS,MAAMA,WAzBlBT,QAAQC,IAAI,kBAiCb,SAASS,IACZ5D,EAAUC,SAAS,CAACR,KAAM,UAC1BmB,EAAMX,SAAS,CAACR,KAAM,Y,6lxCC3FpBoE,G,yDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACD3E,MAAQ,CACT,WAAc,EAAK2E,MAAMC,eAHd,E,gEAOfC,KAAKC,SAAS,CAAC,UAAaD,KAAK7E,MAAM+E,WAAW,O,kCAE1CJ,EAAOG,GACf,IAAIE,EAAoB,GACpBC,EAAQ,EAsBZ,OArBAJ,KAAK7E,MAAM+E,WAAWG,SAClB,SAAUC,GACN,IAAIC,EAAU,aACVT,EAAMU,YAAcF,IACpBC,GAAW,cAEfJ,EAAkBM,KACd,wBACIC,GAAIJ,EAEJK,QAAS,kBACLV,EAAS,CAAC,UAAaK,KAE3BM,UAAWL,EANf,SAQKD,GANIF,IASbA,OAGDD,I,+BAIP,OACI,qBACIS,UAAW,aADf,SAGKZ,KAAKa,YAAYb,KAAKF,MAAM3E,MAAO6E,KAAKF,MAAMG,gB,GA1CvCa,IAAMC,YAgDjBC,EAAb,kDACI,WAAYlB,GAAQ,IAAD,8BACf,cAAMA,IAKVmB,WAAa,CAAC,eAAM,gBAJhB,EAAK9F,MAAQ,CACTyB,MAAOA,IAAMC,YAHF,EADvB,0DASQ,IAAIsD,EAAoB,GACpBC,EAAQ,EA0BZ,OAzBAJ,KAAKiB,WAAWZ,SACZ,SAAUC,GAAY,IAGdC,EAAU,aAFE3D,IAAMC,WAAf3C,QACc,CAAC,OAAQ,SAEHkG,KACvBG,GAAW,cAEfJ,EAAkBM,KACd,wBACIC,GAAIJ,EAEJK,QAAS,WACL/D,IAAMX,SAAS,CACXR,KAAM,iBAGdmF,UAAWL,EARf,SAUKD,GARIF,IAWbA,OAGDD,IApCf,oCAsCkBhE,GACVS,IAAMX,SAAS,CACXR,KAAM,cACNvB,MAAOiC,MAzCnB,+BA8CQ,OACI,eAAC,IAAM+E,SAAP,WACI,qBACIR,GAAI,0BACJE,UAAW,aACXO,MAAO,CAACC,SAAU,YAHtB,SAKKpB,KAAKa,gBAEV,qBAAKM,MAAO,CAACE,OAAQ,8BAvDrC,GAAiCP,IAAMC,WA6DxBlB,ICjGTyB,EAAoB,CACtBF,SAAU,WACVG,KAAM,MACNC,IAAK,MACLC,UAAW,yBAETC,EAAqB,GAO3B,SAASC,EAAcC,GACnB,YAAc9E,IAAV8E,EAA6BA,EACzB,cAAC,IAAMV,SAAP,IAEZ,SAASW,EAAkB9E,EAAM+E,EAASC,GACtC,IAAIC,EAAY,CAAC,GAAI,GAAI,GAAI,IACvBC,OAAmBnF,IAATiF,EAAqB,EAAIA,EACnCG,OAAyBpF,IAAZgF,EAAwB,CAAC,OAAQ,SAAWA,EAC/D,IACI/E,EAAKoF,KAAI,SAAUhG,EAAOiE,GAEtB,OADA4B,EAAU5B,GAAS,CAAC,KAAQjE,EAAM+F,EAAW,IAAK,MAAS/F,EAAM+F,EAAW,IAAMD,GAC3ED,IACRA,EAAWE,EAAYD,GAE9B,MAAOG,IACP,OAAOJ,EAcX,SAASK,EAAiBC,EAAWC,EAAWpH,EAAOqH,GACnD,IAAMC,EAAQH,EAAUG,MAClBC,EAAiBF,EAAU,CAAC,cAAC,IAAD,KAAc,GAC5CG,EAAY,GACZC,EAAQ,GAsBZ,OArBAH,EAAMN,KAAI,SAAUvG,EAAMiH,GAkBtB,OAjBAjH,EAAKkH,OAAOX,KAAI,SAAUY,EAAGC,GACzB,IAAMC,EAAY,GAIlB,OAHAA,EAAS,MAAYD,EACrBC,EAAUrH,EAAKsH,MAAQH,EACvBJ,EAAUK,GAAKG,OAAOC,OAAOH,EAAWN,EAAUK,IAC3CC,KAEXL,EAAMnC,KACF,cAAC,IAAD,CACIhF,KAAM,WACN4H,IAAK,CAACC,EAAG,GACT5C,GAAImC,EACJU,QAAS3H,EAAKsH,KACdM,OAAQjB,EAAUM,GAClBY,YAAa,KAGdd,KAIP,eAAC,IAAD,CACI5F,KAAM4F,EACNe,MAAOvI,EAAMuI,MACbrC,OAAQlG,EAAMkG,OACdF,MAAOG,EAJX,UAMI,cAAC,IAAD,IACCoB,EACAE,KAIb,SAASe,EAAerB,EAAWC,EAAWpH,EAAOyI,GACjD,IAAIC,EAAO,GACXvB,EAAUH,KAAI,SAAUa,GAEpB,OADAa,EAAKpD,KAAK0C,OAAOU,KAAKb,IACfA,KAGX,IAAMc,GADND,EAAOA,EAAK,IACY1B,KAAI,SAAU/E,EAAKgD,GACvC,IAAI2D,EAAW,GAKf,OAJc,IAAVH,IACAG,EAAW,CAAC,cAAC,IAAD,CAAWR,QAASnG,EAAKgE,SAAS,MAAMD,MAAO,CAAC6C,KAAM,yBAIlE,cAAC,IAAD,CACIT,QAASnG,EACT4G,KAAMzB,EAAUnC,GAFpB,SAIK2D,MAGVH,GAEH,OACI,eAAC,IAAD,CACI7G,KAAMuF,EACNoB,MAAOvI,EAAMuI,MACbrC,OAAQlG,EAAMkG,OACdF,MAAOG,EAJX,UAMKwC,EACD,cAAC,IAAD,OAKL,IAAMG,EAAb,uKAEQ,IAMIC,EANEnH,EAAO8E,EAAkB7B,KAAKF,MAAM/C,KAAMiD,KAAKF,MAAM+D,KAAM7D,KAAKF,MAAMiC,MACtEoC,EAAyB,KAAlBnE,KAAKF,MAAMqE,KAClBC,EAAcD,EAAO,KAErBE,OAA2BvH,IAApBkD,KAAKF,MAAMuE,KAAqB,CAAC,UAAW,UAAW,UAAW,WAAarE,KAAKF,MAAMuE,KACjGC,EAAQ,CAACjD,OAAQ,OAAQqC,MAAO,OAAQa,aAAc7C,GAY5D,OATIwC,OADwBpH,IAAxBkD,KAAKF,MAAM0E,SACC,CACR,uBAAO5D,UAAW,cAAlB,SACKZ,KAAKF,MAAM0E,YAKR,cAAC,IAAMtD,SAAP,IAGZ,sBAAKN,UAAW,QAASO,MAAOmD,EAAhC,UACI,eAAC,IAAD,CACInD,MAAO,CAACC,SAAU,WAAYG,KAjB1B,EAiByCC,IAjBzC,GAkBJkC,MAAOS,EACP9C,OAAQ8C,EACRpH,KAAMA,EAAK0H,MAAM,EAAG,GACpBL,YAAaA,EALjB,UAOI,cAAC,IAAD,CACI3I,KAAM,SACNiJ,OAAQ,CAAC,EAAG,KACZC,YAAa,EACbC,MAAM,IAEV,cAAC,IAAD,CACIC,SAAU,EACVF,YAAa,EACbpB,QAAS,QACTuB,aAAc,OACdC,WAAY,CAACf,KAAM,iCALvB,SAOI,cAAC,IAAD,CAAMA,KAAMK,EAAK,OAErB,cAAC,IAAD,CAAQW,cAAe,SAAUC,MAAO,SAAUC,SAAU,EACpDC,aAAc,CAAC1D,UAAW,wBAEtC,eAAC,IAAD,CACIN,MAAO,CAACC,SAAU,WAAYgE,MA1C1B,EA0C0C5D,IA1C1C,GA2CJkC,MAAOS,EACP9C,OAAQ8C,EACRpH,KAAMA,EAAK0H,MAAM,EAAG,GACpBL,YAAaA,EALjB,UAOI,cAAC,IAAD,CACI3I,KAAM,SACNiJ,OAAQ,CAAC,EAAG,KACZC,YAAa,EACbC,MAAM,IAEV,cAAC,IAAD,CACIC,SAAU,EACVF,YAAa,EACbpB,QAAS,QACTuB,aAAc,OACdC,WAAY,CAACf,KAAM,iCALvB,SAOI,cAAC,IAAD,CAAMA,KAAMK,EAAK,OAErB,cAAC,IAAD,CAAQW,cAAe,SAAUC,MAAO,SAAUC,SAAU,EACpDC,aAAc,CAAC1D,UAAW,wBAEtC,eAAC,IAAD,CACIN,MAAO,CAACC,SAAU,WAAYG,KAnE1B,EAmEyC8D,OAnEzC,GAoEJ3B,MAAOS,EACP9C,OAAQ8C,EACRpH,KAAMA,EAAK0H,MAAM,EAAG,GACpBL,YAAaA,EALjB,UAOI,cAAC,IAAD,CACI3I,KAAM,SACNiJ,OAAQ,CAAC,EAAG,KACZC,YAAa,EACbC,MAAM,IAEV,cAAC,IAAD,CACIC,SAAU,EACVF,YAAa,EACbpB,QAAS,QACTuB,aAAc,OACdC,WAAY,CAACf,KAAM,iCALvB,SAOI,cAAC,IAAD,CAAMA,KAAMK,EAAK,OAErB,cAAC,IAAD,CAAQW,cAAe,SAAUC,MAAO,SAAUC,SAAU,EACpDC,aAAc,CAAC1D,UAAW,wBAEtC,eAAC,IAAD,CACIN,MAAO,CAACC,SAAU,WAAYgE,MA5F1B,EA4F0CC,OA5F1C,GA6FJ3B,MAAOS,EACP9C,OAAQ8C,EACRpH,KAAMA,EAAK0H,MAAM,EAAG,GACpBL,YAAaA,EALjB,UAOI,cAAC,IAAD,CACI3I,KAAM,SACNiJ,OAAQ,CAAC,EAAG,KACZC,YAAa,EACbC,MAAM,IAEV,cAAC,IAAD,CACIC,SAAU,EACVF,YAAa,EACbpB,QAAS,QACTuB,aAAc,OACdC,WAAY,CAACf,KAAM,iCALvB,SAOI,cAAC,IAAD,CAAMA,KAAMK,EAAK,OAErB,cAAC,IAAD,CAAQW,cAAe,SAAUC,MAAO,SAAUC,SAAU,EACpDC,aAAc,CAAC1D,UAAW,wBAErCyC,SAzHjB,GAA+BpD,IAAMC,WA+HxBuE,EAAb,0KACgBnJ,GACR,OAAQ,+BAAOA,MAFvB,+BAMQ,IAGI+H,EAHEG,OAA2BvH,IAApBkD,KAAKF,MAAMuE,KAAqB,UAAYrE,KAAKF,MAAMuE,KAC9DC,EAAQ,CAACjD,OAAQ,OAAQqC,MAAO,OAAQa,aAAc7C,EAAoBuD,MAAO,UACjFd,EAAOnE,KAAKF,MAAMqE,KAYxB,OATID,OADwBpH,IAAxBkD,KAAKF,MAAM0E,SACC,CACR,uBAAO5D,UAAW,cAAlB,SACKZ,KAAKF,MAAM0E,YAKR,cAAC,IAAMtD,SAAP,IAGZ,sBAAKN,UAAW,QAASO,MAAOmD,EAAhC,UACI,eAAC,IAAD,CACIvH,KAAM,CAACiD,KAAKF,MAAM/C,MAClB2G,MAAOS,EACP9C,OAAQ8C,EACRC,YAAaD,EAAO,EACpBhD,MAAO,CACHC,SAAU,WACVI,IAAK,MACLD,KAAM,MACNE,UAAW,yBATnB,UAYI,cAAC,IAAD,CACIhG,KAAM,SACNiJ,OAAQ,CAAC,EAAG,KACZC,YAAa,EACbC,MAAM,IAEV,cAAC,IAAD,CACID,YAAa,EACbpB,QAAS,QACTuB,aAAc,OACdC,WAAY,CAACf,KAAM,iCAJvB,SAMI,cAAC,IAAD,CAAMA,KAAMK,MAEhB,cAAC,IAAD,CACIW,cAAe,SACfC,MAAO,SACPC,SAAU,EACVC,aAAc,CAAC1D,UAAW,mBAC1B8D,UAAWvF,KAAKwF,iBAGvBtB,SAxDjB,GAAkCpD,IAAMC,WA8D3B0E,EAAb,kDACI,WAAY3F,GAAQ,IAAD,6BACf,cAAMA,IAwBD3E,MAAQ,CACT+H,KAAM,EAAKpD,MAAM0E,SACjBzH,UAA0BD,IAApB,EAAKgD,MAAM/C,KAzBJ,CACb,CACImG,KAAM,SAAUwC,GAAI,IAAMC,GAAI,KAAMC,IAAK,MAE7C,CACI1C,KAAM,SAAUwC,GAAI,IAAMC,GAAI,KAAMC,IAAK,MAE7C,CACI1C,KAAM,SAAUwC,GAAI,IAAMC,GAAI,KAAMC,IAAK,MAE7C,CACI1C,KAAM,SAAUwC,GAAI,KAAMC,GAAI,KAAMC,IAAK,KAE7C,CACI1C,KAAM,SAAUwC,GAAI,KAAMC,GAAI,KAAMC,IAAK,MAE7C,CACI1C,KAAM,SAAUwC,GAAI,KAAMC,GAAI,KAAMC,IAAK,MAE7C,CACI1C,KAAM,SAAUwC,GAAI,KAAMC,GAAI,KAAMC,IAAK,OAKI,EAAK9F,MAAM/C,MA3BjD,EADvB,qDAkCQ,IAGImH,EAHE2B,EAAO7F,KAAKF,MAAM+F,KAClBvB,EAAQ,CAACC,aAAc7C,GACvB2C,EAAO,CAAC,OAAQ,QAatB,OAVIH,OADoBpH,IAApBkD,KAAK7E,MAAM+H,KACC,CACR,uBAAOtC,UAAW,cAAlB,SACKZ,KAAKF,MAAM0E,YAKR,cAAC,IAAMtD,SAAP,IAIZ,sBAAKN,UAAW,QAASO,MAAOmD,EAAhC,UACI,eAAC,IAAD,CACIvH,KAAMiD,KAAK7E,MAAM4B,KACjB2G,MAAOmC,EAAKnC,MACZrC,OAAQwE,EAAKxE,OACbF,MAAOG,EAJX,UAMI,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAMiC,QAAS,KAAMC,OAAQa,EAAK,GAAIZ,YAAa,EAAGJ,IAAK,CAACC,EAAG,KAC/D,cAAC,IAAD,CAAMC,QAAS,KAAMC,OAAQa,EAAK,GAAIZ,YAAa,EAAGJ,IAAK,CAACC,EAAG,QAElEY,SAhEjB,GAA4BpD,IAAMC,WA6FrB+E,GAvBqBhF,IAAMC,UAuBxC,kLAEQf,KAAK+F,WAFb,+BAMQ,IA7YcC,EAgZV9B,EAHE+B,OAAsCnJ,IAApBkD,KAAKF,MAAM+D,KAAqB7D,KAAKF,MAAM/C,KAvX3E,SAA6BA,EAAM+E,GAC/B,IAAIoE,EAAgB,GACpB,IACInJ,EAAKoF,KAAI,SAAUhG,GACf,IAAMiB,EAAMjB,EAAM2F,EAAQ,IAE1B,OADAoE,EAAc9I,GAAOjB,EAAM2F,EAAQ,KAC5B,IACRA,GAEP,MAAOM,IACP,OAAO8D,EA6WuEC,CAAoBnG,KAAKF,MAAM/C,KAAMiD,KAAKF,MAAM+D,MACpHgC,EAAO7F,KAAKF,MAAM+F,KAClBxB,OA9YYvH,KADJkJ,EA+YYhG,KAAKF,MAAMuE,MA7Y9B2B,EACG,CAAC,UAAW,UAAW,UAAW,WA+YxC9B,OADwBpH,IAAxBkD,KAAKF,MAAM0E,SACC,CACR,uBAAO5D,UAAW,cAAlB,SACKZ,KAAKF,MAAM0E,YAKR,cAAC,IAAMtD,SAAP,IAEhB,IAAMoD,EAAQ,CACV,MAAS,OACT,OAAU,OACV,gBAAiB5C,GAErB,OACI,sBAAKd,UAAW,QAASO,MAAOmD,EAAhC,UACKX,EAAe,CAACsC,GAAkB5B,EAAMwB,EAAM7F,KAAKF,MAAM8D,OACzDM,SA5BjB,GAAgCpD,IAAMC,YAkCzBqF,EAAb,kDACI,WAAYtG,GAAQ,IAAD,6BACf,cAAMA,IA6CD3E,MAAQ,CACT+H,KAAM,EAAKpD,MAAM0E,SACjBzH,UAA0BD,IAApB,EAAKgD,MAAM/C,KA9CJ,CACb,CACI,KAAQ,SACR,GAAM,IACN,GAAM,KACN,IAAO,MAEX,CACI,KAAQ,SACR,GAAM,IACN,GAAM,KACN,IAAO,MAEX,CACI,KAAQ,SACR,GAAM,IACN,GAAM,KACN,IAAO,MAEX,CACI,KAAQ,SACR,GAAM,KACN,GAAM,KACN,IAAO,KAEX,CACI,KAAQ,SACR,GAAM,KACN,GAAM,KACN,IAAO,MAEX,CACI,KAAQ,SACR,GAAM,KACN,GAAM,KACN,IAAO,MAEX,CACI,KAAQ,SACR,GAAM,KACN,GAAM,KACN,IAAO,OAKsC,EAAK+C,MAAM/C,MAhDjD,EADvB,qDAuDQ,IAAM8I,EAAO7F,KAAKF,MAAM+F,KAClBvB,EAAQ,CACVC,aAAc7C,GAElB,OACI,sBAAKd,UAAW,QAASO,MAAOmD,EAAhC,UACI,eAAC,IAAD,CACIZ,MAAOmC,EAAKnC,MACZrC,OAAQwE,EAAKxE,OACbtE,KAAMiD,KAAK7E,MAAM4B,KACjBoE,MAAOG,EAJX,UAMI,iCACI,iCAAgBZ,GAAG,UAAU2F,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAArD,UACI,sBAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,KACnD,sBAAMF,OAAO,MAAMC,UAAU,UAAUC,YAAa,OAExD,iCAAgBjG,GAAG,UAAU2F,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAArD,UACI,sBAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,KACnD,sBAAMF,OAAO,MAAMC,UAAU,UAAUC,YAAa,UAG5D,cAAC,IAAD,CAAOpD,QAAQ,SACf,cAAC,IAAD,IACA,cAAC,IAAD,CAAeqD,gBAAgB,QAC/B,cAAC,IAAD,IACA,cAAC,IAAD,CAAMnL,KAAK,WAAW8H,QAAQ,KAAKC,OAAO,UAAUqD,YAAa,EAAG7C,KAAK,kBACzE,cAAC,IAAD,CAAMvI,KAAK,WAAW8H,QAAQ,KAAKC,OAAO,UAAUqD,YAAa,EAAG7C,KAAK,qBAE7E,uBAAOpD,UAAW,cAAlB,SACKe,EAAc3B,KAAKF,MAAM0E,mBArF9C,GAAqC1D,IAAMC,WA4F9B+F,EAAb,0KACgB/J,EAAMqD,EAAOhD,GACrB,IAAK,OAAOL,EAAKqD,GAAOhD,GACxB,MAAOuC,OAHf,gCAMcoH,GACN,OAAmB,OAAXA,QAA8BjK,IAAXiK,EAAwB,KAAOA,IAPlE,+BAUQ,IAAMzC,EAAQ,CACV,MAAS,OACT,OAAU,OACV,gBAAiB5C,GAErB,MAAwB,UAApB1B,KAAKF,MAAMrE,KAEX,sBAAKmF,UAAW,QAASO,MAAOmD,EAAhC,UACI,sBAAK1D,UAAW,cAAhB,UACI,qBAAKA,UAAW,SAAhB,SACKZ,KAAKgH,YAAYhH,KAAKF,MAAM/C,KAAMiD,KAAKF,MAAMM,MAAOJ,KAAKF,MAAM+D,KAAK,MAEzE,qBAAKjD,UAAW,UAAhB,SACKZ,KAAKiH,UAAUjH,KAAKgH,YAAYhH,KAAKF,MAAM/C,KAAMiD,KAAKF,MAAMM,MAAOJ,KAAKF,MAAM+D,KAAK,UAG5F,uBAAOjD,UAAW,cAAlB,SACKe,EAAc3B,KAAKF,MAAM0E,eAId,aAApBxE,KAAKF,MAAMrE,KAEP,sBAAKmF,UAAW,QAASO,MAAOmD,EAAhC,UACI,sBAAK1D,UAAW,cAAhB,UACI,qBAAKA,UAAU,SAAf,SACKZ,KAAKF,MAAMoD,OAEhB,qBAAKtC,UAAU,UAAf,SACKZ,KAAKiH,UAAUjH,KAAKF,MAAM3D,YAGnC,uBAAOyE,UAAW,cAAlB,SACKe,EAAc3B,KAAKF,MAAM0E,eAKlC,cAAC,IAAMtD,SAAP,QAhDhB,GAAkCJ,IAAMC,W,yJC1hBlCmG,EAAgB,CAClB3C,aAAc,QACd4C,gBAAiB,+BACjBC,MAAO,qBAGEC,EAAb,kDACI,WAAYvH,GAAQ,IAAD,8BACf,cAAMA,IACD3E,MAAQ,CACTwF,QAAS,EAAKb,MAAMa,QACpBlF,UAA2BqB,IAApB,EAAKgD,MAAMrE,KAAsB,EAAKqE,MAAMrE,KAAO,GAC1D6L,UAAmC,IAAxB,EAAKxH,MAAMwH,UALX,EADvB,qDAWQ,OACI,cAAC,IAAD,CAAUC,QAAS,YAAapG,MAAO+F,EAAevG,QAASX,KAAK7E,MAAMwF,QAASlF,KAAMuE,KAAK7E,MAAMM,KAAM6L,SAAUtH,KAAK7E,MAAMmM,SAA/H,SACKtH,KAAKF,MAAM0E,eAb5B,GAA4B1D,IAAMC,WAmCnBsG,GAhBiBvG,IAAMC,UAgBvBsG,G,sEC5BTG,GAAY1G,IAAM2G,MAAK,kBAAM,uDAC7BnG,GAAoB,CACtBF,SAAU,WACVG,KAAM,MACNC,IAAK,MACLC,UAAW,yBAmBR,IAAMiG,GAAb,kDACI,WAAY5H,GAAQ,IAAD,8BACf,cAAMA,IACD3E,MAAQ,CACTwM,QAAS,GACTC,YAAY,EACZC,gBAAgB,EAChBrH,UAAW,SACXsH,aAAc,IAAIvN,KAAKqC,IAAMC,WAAWrC,UACxCuN,WAAW,EACXC,WAAYpL,IAAMC,WAClBoL,SAAUjM,IAAUa,WACpBqL,cAAe,CACXC,aAASrL,EACTsL,QAAS,CACLC,SAAS,EACTC,UAAW,SACXC,YAAa,CACTC,SAAK1L,EACL2L,UAAM3L,IAGd4L,KAAM,CACFL,SAAS,EACTxN,aAASiC,EACThC,UAAMgC,EACNrB,KAAM,EACNkN,SAAS,KAIrB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnBjM,IAAMkM,UAAU,EAAKF,aA/BN,EADvB,0DAoCQ5I,KAAKC,SAAS,CAAC+H,WAAYpL,IAAMC,eApCzC,iCAsCekM,GACO,eAAVA,GAAyB/I,KAAKC,SAAS,CAAC2H,YAAa5H,KAAK7E,MAAMyM,aACtD,mBAAVmB,GAA6B/I,KAAKC,SAAS,CAAC4H,gBAAiB7H,KAAK7E,MAAM0M,mBAxCpF,iCA0CezF,GACPpC,KAAKC,SAAS,CAAC6H,aAAc1F,MA3CrC,mCA6CiBA,EAAG4G,GACZ,IAAIC,EAAejJ,KAAK7E,MAAM+M,cACb,YAAbc,IACAC,EAAad,QAAU/F,EAAE8G,OAAOC,SAEnB,aAAbH,IACAC,EAAaP,KAAKL,QAAUjG,EAAE8G,OAAOC,SAExB,aAAbH,IACAC,EAAaP,KAAKjN,KAAO2G,EAAE8G,OAAO/M,OAErB,SAAb6M,IACAC,EAAaP,KAAK7N,QAAUmF,KAAK7E,MAAMP,kBACvCqO,EAAaP,KAAK5N,KAAOsH,GAEZ,gBAAb4G,IACAC,EAAab,QAAQC,QAAUjG,EAAE8G,OAAOC,SAE3B,0BAAbH,IACAC,EAAab,QAAQG,YAAYC,IAAMpG,EAAE8G,OAAO/M,OAEnC,2BAAb6M,IACAC,EAAab,QAAQG,YAAYE,KAAOrG,EAAE8G,OAAO/M,OAEpC,YAAb6M,IACAC,EAAab,QAAQE,UAAYlG,EAAE8G,OAAO/M,OAE7B,YAAb6M,IACAC,EAAaP,KAAKC,QAAUvG,EAAE8G,OAAOC,SAEzCnJ,KAAKC,SAAS,CAACiI,cAAee,MA3EtC,6CA6E2BxN,IA7F3B,SAA2ByM,GACvB,IACI9I,KAAMC,KAAK,kBAAmB,CAC1BxE,QAASqN,EAAcQ,KAAK7N,QAC5BC,KAAMoN,EAAcQ,KAAK5N,KACzBsO,QAASlB,EAAcC,QACvBC,QAASF,EAAcE,QAAQE,UAC/Be,aAAc,CAACnB,EAAcE,QAAQG,YAAYC,IAAKN,EAAcE,QAAQG,YAAYE,QAEvFnJ,MAAK,SAAAC,GAAaL,QAAQC,IAAII,MAEvC,MAAOI,GACHT,QAAQS,MAAMA,IAkFd2J,CAAkBtJ,KAAK7E,MAAM+M,eAC7BqB,MAAM,mDAAWvJ,KAAK7E,MAAM+M,cAAcQ,KAAK5N,MAC/CkF,KAAKwJ,WAAW,oBAhFxB,yCAmFQ5M,IAAMX,SAAS,CACXR,KAAM,aACNS,KAAM8D,KAAK7E,MAAM2M,eAErB9L,IAAUC,SAAS,CACfR,KAAM,YAEVuE,KAAKwJ,WAAW,gBA1FxB,qCA6FQxJ,KAAKC,SAAS,CAAC8H,WAAY/H,KAAK7E,MAAM4M,cA7F9C,iCAgGQ,OACI,wBAAOnH,UAAW,WAAlB,UACI,+BACI,8CACA,6BAAKZ,KAAK7E,MAAM6M,WAAWrN,oBAE/B,+BACI,0DACA,6BAAKqF,KAAK7E,MAAM6M,WAAWpN,kBAAkBE,UAEjD,+BACI,0DACA,8CA5GpB,yCAiHwB,IAAD,OACf,MAAqC,OAAjCkF,KAAK7E,MAAMP,kBAEP,cAAC6O,EAAA,EAAD,CAAWC,UAAW,SAAtB,kDAKA,eAAC,IAAMxI,SAAP,WACI,cAACuI,EAAA,EAAD,CAAWC,UAAW,SAAtB,SAAiC1J,KAAK7E,MAAM6M,WAAWpN,kBAAkBC,UACzE,eAAC8O,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,QACI,cAACC,EAAA,EAAD,CACIX,QAASnJ,KAAK7E,MAAM+M,cAAcC,QAClC4B,SAAU,SAACC,GAAD,OAAW,EAAKC,aAAaD,EAAO,cAGtDpG,MAAO,iBAEX,eAAC+F,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,QACI,cAACC,EAAA,EAAD,CACIX,QAASnJ,KAAK7E,MAAM+M,cAAcQ,KAAKL,QACvC0B,SAAU,SAACC,GAAD,OAAW,EAAKC,aAAaD,EAAO,eAGtDpG,MAAO,6BAEX,cAAC+F,EAAA,EAAD,CAAWO,KAAG,EAAd,SACI,eAACC,EAAA,EAAD,CACIC,QAAS,2BACT1J,GAAI,2BACJvE,MAAO6D,KAAK7E,MAAM+M,cAAcQ,KAAKjN,KACrC6L,UAAWtH,KAAK7E,MAAM+M,cAAcQ,KAAKL,QACzC0B,SAAU,SAACC,GAAD,OAAW,EAAKC,aAAaD,EAAO,aAC9C7I,MAAO,CAACuC,MAAO,QANnB,UAQI,cAAC2G,EAAA,EAAD,CAAUlO,MAAO,EAAjB,0BACA,cAACkO,EAAA,EAAD,CAAUlO,MAAO,EAAjB,0BACA,cAACkO,EAAA,EAAD,CAAUlO,MAAO,EAAjB,gCACA,cAACkO,EAAA,EAAD,CAAUlO,MAAO,EAAjB,qCAGR,cAACwN,EAAA,EAAD,CAAWO,KAAG,EAAd,SACI,cAACI,EAAA,EAAD,CACIlO,aAAc,IACdmO,kBAAkB,OAClBC,KAAM,GACNC,OAAK,EACLC,IAAK,GACLC,IAAK,IACLrD,UAAWtH,KAAK7E,MAAM+M,cAAcQ,KAAKL,QACzC0B,SAAU,SAACa,EAAKZ,GAAN,OAAgB,EAAKC,aAAaD,EAAO,wBAvKvF,+BAkLc,IAAD,OACL,OACI,sBAAKpJ,UAAW,QAASO,MAAO,CAACoD,aAAcvE,KAAK7E,MAAMwM,SAA1D,UACI,qBACI/G,UAAW,WACXO,MAAO,CACH0J,QAAU7K,KAAK7E,MAAM4M,UAAa,EAAI,EACtC+C,WAAa9K,KAAK7E,MAAM4M,UAAa,OAAS,OAC9CgD,OAAS/K,KAAK7E,MAAM4M,UAAa,OAAS,WALlD,SAQK/H,KAAKgL,aAEV,sBAAKpK,UAAW,eAAhB,UACI,kEACA,sBAAMA,WAA8C,IAAnCZ,KAAK7E,MAAM6M,WAAWtN,SAAoB,GAAK,OAAhE,UAA4G,IAAnCsF,KAAK7E,MAAM6M,WAAWtN,SAAoB,2BAAS,yCAC5H,uBACA,sBAAMkG,UAAW,gBAAjB,SACKqK,KAAOjL,KAAK7E,MAAM6M,WAAWxN,UAAU0Q,OAAO,yBAGvD,sBAAKtK,UAAW,iBAAhB,UACI,cAAC,EAAD,CACIb,cAAe,CAAC,SAAK,sBACrBE,SAAU,SAACmC,GAAD,OAAQ,EAAKnC,SAASmC,IAChCjH,MAAO6E,KAAK7E,QAEhB,sBAAKgG,MAAO,CAACgK,QAAS,OAAQC,cAAe,MAAOC,eAAgB,iBAApE,UACI,cAAC,EAAD,CAAQ1K,QAAS,kBAAM,EAAK6I,WAAW,eAAvC,0BAGA,qBAAKrI,MAAO,CAACuC,MAAO,UACpB,cAAC,EAAD,CAAQ/C,QAAS,kBAAM/D,IAAMX,SAAS,CAACR,KAAM,aAAcM,MAAM,KAAjE,6BAKJ,eAAC,EAAD,CAAQ4E,QAAS,kBAAM,EAAK2K,gBAA5B,UACMtL,KAAK7E,MAAM4M,UAAa,eAAO,eADrC,kBAGC/H,KAAK7E,MAAM4M,UAAY,cAAC,EAAD,CAAQpH,QAAS,kBAAM,EAAK6I,WAAW,mBAAvC,kDAA4E,GACpG,cAAC+B,EAAA,EAAD,CAAOC,KAAMxL,KAAK7E,MAAMyM,WAAxB,SACI,cAAC6D,EAAA,EAAD,CAAMC,GAAI1L,KAAK7E,MAAMyM,WAArB,SACI,eAAC+D,EAAA,EAAD,CAAM/K,UAAW,QAASO,MAAOG,GAAjC,UACI,cAACsK,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACvE,QAAS,KAAMmC,UAAW,KAAnD,wCAIJ,qBAAKvI,MAAO,CAAC4K,OAAQ,UAArB,SACI,cAAC,KAAD,CAAyBC,MAAOC,KAAhC,SACI,cAAC,KAAD,CACI9P,MAAO6D,KAAK7E,MAAM2M,aAClBiC,SAAU,SAAC3H,GAAD,OAAO,EAAK8J,WAAW9J,UAI7C,eAAC+J,EAAA,EAAD,WACI,cAAC,IAAD,CACIhI,KAAM,QACNiD,MAAO,UACPzG,QAAS,kBAAM,EAAKyL,iBAAiB,EAAKjR,MAAM6M,WAAW9L,OAH/D,0BAOA,cAAC,IAAD,CACIiI,KAAM,QACNiD,MAAO,UACPzG,QAAS,kBAAM,EAAK6I,WAAW,eAHnC,oCAUhB,cAAC+B,EAAA,EAAD,CAAOC,KAAMxL,KAAK7E,MAAM0M,eAAxB,SACI,cAAC4D,EAAA,EAAD,CAAMC,GAAI1L,KAAK7E,MAAM0M,eAArB,SACI,eAAC8D,EAAA,EAAD,CAAMxK,MAAOG,GAAb,UACI,eAACsK,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACvE,QAAS,KAAMmC,UAAW,KAAnD,sCAGA,sBAAK9I,UAAW,YAAhB,UACI,eAACyL,EAAA,EAAD,CAAa3C,UAAW,WAAxB,UACI,cAACD,EAAA,EAAD,CAAWC,UAAW,SAAtB,4CACA,cAACC,EAAA,EAAD,CAAWO,KAAG,EAAd,SACI,cAACN,EAAA,EAAD,CACIC,QACI,cAACC,EAAA,EAAD,CACIX,QAASnJ,KAAK7E,MAAM+M,cAAcC,QAClC4B,SAAU/J,KAAK7E,QAGvByI,MAAO,mBAGf,eAAC+F,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,QACI,cAACC,EAAA,EAAD,CACIX,QAASnJ,KAAK7E,MAAM+M,cAAcE,QAAQC,QAC1C0B,SAAU,SAACC,GAAD,OAAW,EAAKC,aAAaD,EAAO,kBAGtDpG,MAAO,6BAEX,eAAC+F,EAAA,EAAD,WACI,eAAC0C,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAY5L,GAAI,uCAAhB,sCAGA,eAACyJ,EAAA,EAAD,CACIC,QAAQ,2BACR1J,GAAG,2BACHvE,MAAO6D,KAAK7E,MAAM+M,cAAcE,QAAQE,UACxChB,UAAWtH,KAAK7E,MAAM+M,cAAcE,QAAQC,QAC5C0B,SAAU,SAACC,GAAD,OAAW,EAAKC,aAAaD,EAAO,YALlD,UAOI,cAACK,EAAA,EAAD,CAAUlO,MAAO,SAAjB,oBACA,cAACkO,EAAA,EAAD,CAAUlO,MAAO,SAAjB,oBACA,cAACkO,EAAA,EAAD,CAAUlO,MAAO,eAAjB,0BACA,cAACkO,EAAA,EAAD,CAAUlO,MAAO,eAAjB,0BACA,cAACkO,EAAA,EAAD,CAAUlO,MAAO,eAAjB,0BACA,cAACkO,EAAA,EAAD,CAAUlO,MAAO,eAAjB,0BACA,cAACkO,EAAA,EAAD,CAAUlO,MAAO,eAAjB,0BACA,cAACkO,EAAA,EAAD,CAAUlO,MAAO,qBAAjB,sCAIR,cAACoQ,EAAA,EAAD,CACI7L,GAAI,uCACJkD,MAAO,mDACPnI,KAAM,SACN0F,MAAO,CAACqL,UAAW,IACnBC,gBAAiB,CAACC,QAAQ,GAC1BpF,UAAWtH,KAAK7E,MAAM+M,cAAcE,QAAQC,QAC5C0B,SAAU,SAACC,GAAD,OAAW,EAAKC,aAAaD,EAAO,4BAElD,cAACuC,EAAA,EAAD,CACI7L,GAAI,uCACJkD,MAAO,mDACPnI,KAAM,SACN0F,MAAO,CAACqL,UAAW,IACnBC,gBAAiB,CAACC,QAAQ,GAC1BpF,UAAWtH,KAAK7E,MAAM+M,cAAcE,QAAQC,QAC5C0B,SAAU,SAACC,GAAD,OAAW,EAAKC,aAAaD,EAAO,sCAK9D,uBACA,cAACqC,EAAA,EAAD,CAAa3C,UAAW,WAAxB,SACK1J,KAAK2M,2BAIlB,eAACR,EAAA,EAAD,WACI,cAAC,IAAD,CAAgBhI,KAAM,QAASiD,MAAO,UAAWzG,QAAS,kBAAM,EAAKiM,uBAAuB,SAA5F,0BAGA,cAAC,IAAD,CAAgBzI,KAAM,QAASiD,MAAO,UAAWzG,QAAS,kBAAM,EAAK6I,WAAW,mBAAhF,uCAQpB,qBAAK5I,UAAW,OAAQO,MAAOG,GAA/B,SACI,cAAC,WAAD,CAAUuL,SAAU,qBAAKjM,UAAW,gBAAhB,8DAApB,SACI,cAAC4G,GAAD,CACInG,OAAQrB,KAAKF,MAAM+F,KAAKxE,OACxBqC,MAAO1D,KAAKF,MAAM+F,KAAKnC,MACvBoJ,KAAM9M,KAAK7E,MAAMqF,uBA/V7C,GAA+BM,IAAMC,WClC/BgM,GAAOC,SAASD,KAuEPE,G,kDApEX,WAAYnN,GAAQ,IAAD,8BACf,cAAMA,IASVoN,cAAgB,WACZ,EAAKjN,SAAS,CACVkE,KAAMgJ,KAAKzC,IAAIqC,GAAKK,aAAe,EAAGL,GAAKM,YAAc,MAV7D,EAAKlS,MAAQ,CACTmS,UAAWtR,IAAUa,WAAW5B,cAChCkJ,KAAMgJ,KAAKzC,IAAIqC,GAAKK,aAAe,EAAGL,GAAKM,YAAc,IAE7DrR,IAAU8M,WAAU,WAChB,EAAK7I,SAAS,CAACqN,UAAWtR,IAAUa,WAAW5B,mBAPpC,E,gEAgBf6C,OAAOyP,iBAAiB,SAAUvN,KAAKkN,eACvClN,KAAKkN,kB,6CAILpP,OAAO0P,oBAAoB,SAAUxN,KAAKkN,iB,+BAGpC,IAAD,EACqBlN,KAAK7E,MAAxBgJ,EADF,EACEA,KAAMmJ,EADR,EACQA,UACb,OACI,sBAAK1M,UAAW,eAAhB,UACI,qBAAKA,UAAW,OAAhB,SACI,cAAC,EAAD,CAAsBuD,KAAMA,EAAMpH,KAAMuQ,EAAUG,YAAlD,oDAIJ,qBAAK7M,UAAW,OAAhB,SACI,cAAC,EAAD,CAAsBnF,KAAM,WAAYyH,KAAM,6CAAW/G,MAAOmR,EAAUI,YAA1E,8CAIJ,qBAAK9M,UAAW,OAAhB,SACI,cAAC,EAAD,CACIuD,KAAMA,EACNpH,KAAMuQ,EAAUK,aAChB5L,KAAM,GACNsC,KAAM,CAAC,UAAW,UAAW,UAAW,WAJ5C,oDASJ,qBAAKzD,UAAW,OAAhB,SACI,cAAC,EAAD,CACIuD,KAAMA,EACNpH,KAAMuQ,EAAUM,SAChB/J,KAAM,CAAC,WAAY,QACnBQ,KAAM,CAAC,UAAW,UAAW,UAAW,WAJ5C,oDASJ,qBAAKzD,UAAW,OAAhB,SACI,cAAC,GAAD,CACIiF,KAAM,CAAC,OAAiB,EAAP1B,EAAU,MAAgB,EAAPA,SAjCX,mB,GA5B7BrD,IAAMC,WCHpBgM,I,OAAOC,SAASD,MAETc,GAAb,kDACI,WAAY/N,GAAQ,IAAD,8BACf,cAAMA,IAQVoN,cAAgB,WACZ,EAAKjN,SAAS,CACVyD,MAAOqJ,GAAKM,YAAc,EAC1BhM,OAAQ0L,GAAKK,aAAe,MAVhC,EAAKjS,MAAQ,CACTmS,UAAWtR,IAAUa,WAAW5B,eAEpCe,IAAU8M,WAAU,WAChB,EAAK7I,SAAS,CAACqN,UAAWtR,IAAUa,WAAW5B,mBANpC,EADvB,gEAiBQ6C,OAAOyP,iBAAiB,SAAUvN,KAAKkN,eACvClN,KAAKkN,kBAlBb,6CAsBQpP,OAAO0P,oBAAoB,SAAUxN,KAAKkN,iBAtBlD,+BAyBc,IAAD,EAC8BlN,KAAK7E,MAAjCkG,EADF,EACEA,OAAQqC,EADV,EACUA,MAAO4J,EADjB,EACiBA,UACtB,OACI,sBAAK1M,UAAW,SAAhB,UACI,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAMkN,SAAP,CAAgBjB,SAAU,qBAAKjM,UAAW,UAA1C,SACI,cAAC,EAAD,CACIiF,KAAM,CAACxE,OAAQA,EAAQqC,MAAe,EAARA,GAC9B3G,KAAMuQ,EAAUM,SAChB/J,KAAM,CAAC,WAAY,QACnBQ,KAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC1GT,OAAO,QAInB,qBAAKhD,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,YA9BY,uBA5B3C,GAA8BE,IAAMC,WAgEvBgN,GAAb,kDACI,WAAYjO,GAAQ,IAAD,8BACf,cAAMA,IAGVoN,cAAgB,WACZ,EAAKjN,SAAS,CACVkE,KAAM4I,GAAKK,aAAe,KAJ9B,EAAKjS,MAAQ,GAFE,EADvB,gEAWQ6E,KAAKkN,gBACLpP,OAAOyP,iBAAiB,SAAUvN,KAAKkN,iBAZ/C,6CAeQpP,OAAO0P,oBAAoB,SAAUxN,KAAKkN,iBAflD,+BAkBc,IACC/I,EAAQnE,KAAK7E,MAAbgJ,KACP,OACI,sBAAKvD,UAAW,SAAhB,UACI,qBAAKA,UAAU,OAAf,SACI,cAAC,EAAD,CACIiF,KAAM,CAAC,OAAiB,EAAP1B,EAAU,MAAS4I,GAAKM,YAAc,QAG/D,qBAAKzM,UAAU,OAAf,SACI,cAAC,EAAD,CACIiF,KAAM,CAAC,OAAiB,EAAP1B,EAAU,MAAS4I,GAAKM,YAAc,QAG/D,qBAAKzM,UAAU,OAAf,SACI,cAAC,EAAD,CACIiF,KAAM,CAAC,OAAiB,EAAP1B,EAAU,MAAS4I,GAAKM,YAAc,QAG/D,qBAAKzM,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,WAlBY,2BArB3C,GAAkCE,IAAMC,WCnElCgM,I,OAAOC,SAASD,MAmDPiB,G,kDA/CX,WAAYlO,GAAQ,IAAD,8BACf,cAAMA,IAIVoN,cAAgB,WACZ,EAAKjN,SAAS,CACVkE,KAAMgJ,KAAKzC,IAAIqC,GAAKK,aAAe,EAAGL,GAAKM,YAAc,KAE7DnO,QAAQC,IAAI,EAAKhE,MAAMgJ,OAPvB,EAAKhJ,MAAQ,GAFE,E,gEAYf6E,KAAKkN,gBACLpP,OAAOyP,iBAAiB,SAAUvN,KAAKkN,iB,6CAGvCpP,OAAO0P,oBAAoB,SAAUxN,KAAKkN,iB,+BAEpC,IACC/I,EAAQnE,KAAK7E,MAAbgJ,KACP,OACI,cAAC,IAAMjD,SAAP,UACI,sBAAKN,UAAW,SAAhB,UACI,qBAAKA,UAAU,OAAf,SACQ,cAAC,EAAD,CACIiF,KAAM,CAAC,OAAU1B,EAAM,MAAgB,EAAPA,GAChCE,KAAM,CAAC,UAAW,WAClBtH,KAAM,CAACkR,EAAE,GAAIC,EAAE,GAHnB,2BAQR,qBAAKtN,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,mB,GA1CFE,IAAMC,WCiBxBoN,G,kDAnBX,WAAYrO,GAAQ,IAAD,8BACf,cAAMA,IACD3E,MAAQ,CACTM,UAA2BqB,IAApB,EAAKgD,MAAMrE,KAAsB,EAAKqE,MAAMrE,KAAO,QAH/C,E,qDAOT,IAAD,OACL,OACI,sBAAKmF,UAAW,gBAAhB,UACI,gCACKZ,KAAKF,MAAM0E,WAEhB,uBAAO5D,UAAW,aAAcnF,KAAMuE,KAAK7E,MAAMM,KAAMsO,SAAW,SAAAC,GAAK,OAAI,EAAKlK,MAAMsO,QAAQpE,a,GAd1FlJ,IAAMC,W,WC4BpBsN,G,kDACF,WAAYvO,GAAQ,IAAD,8BACf,cAAMA,IAqBVwO,aAAe,SAACtE,EAAOuE,GACnB,EAAKtO,SAAS,CAACuO,SAAUD,KArBzB,EAAKpT,MAAQ,CACTqT,SAAU,GAHC,E,uDAMR/S,GACP,IAAIgT,EACJ,GAAa,WAAThT,EAAmB,CACnBgT,EAAe,uCAKf7R,IAAMX,SAJS,CACXR,KAAM,UACNE,QAAQ,IAIH,UAATF,IACAgT,EAAe,2BAASzO,KAAK7E,MAAMqT,SAAU,SAC7CvR,YAAc+C,KAAK7E,MAAMqT,WAE7BjF,MAAMkF,K,+BAMA,IAAD,OACL,OACI,eAAC,IAAMvN,SAAP,WACI,cAAC,EAAD,IACA,qBAAKN,UAAW,cAAhB,yEAGA,uBACIO,MAAO,CAACqL,UAAW,OACnBkC,SAAU,kBAAM,EAAKC,WAAW,QAAS,EAAKxT,MAAMqT,WAFxD,UAII,eAAC7E,EAAA,EAAD,WACI,cAACF,EAAA,EAAD,CAAWtI,MAAO,CAACiG,MAAO,qBAAsBsC,UAAW,SAA3D,oEACA,qBAAKvI,MAAO,CAAC4K,OAAQ,SAAUrI,MAAO,qBAAtC,SACI,cAAC4G,EAAA,EAAD,CACIlO,aAAc,EACdmO,kBAAkB,OAClBC,KAAM,EACNC,OAAK,EACLC,IAAK,EACLC,IAAK,GACLZ,SAAU/J,KAAKsO,oBAI3B,sBAAKnN,MAAO,CAACgK,QAAS,OAAQC,cAAe,OAA7C,UACI,cAAC,EAAD,CAAQ3P,KAAM,SAAd,sCAGA,qBAAK0F,MAAO,CAACuC,MAAO,UACpB,cAAC,EAAD,CAAQ/C,QAAS,kBAAM,EAAKgO,WAAW,WAAvC,6BAIJ,uBACA,cAAC,IAAD,CACIxK,KAAM,QACNhD,MAAO,CAACiG,MAAO,QACfzG,QAAS,kBAAMf,eAHnB,8E,GA9DGkB,IAAMC,WAuJd6N,G,kDA3EX,WAAY9O,GAAQ,IAAD,8BACf,cAAMA,IACD3E,MAAQ,CACTyB,MAAOA,IAAMC,WACbgS,SAAU,GACVC,SAAU,IAEd,EAAKlG,YAAc,EAAKA,YAAYC,KAAjB,gBACnBjM,IAAMkM,UAAU,EAAKF,aARN,E,0DAYf5I,KAAKC,SAASrD,IAAMC,c,kCAEZmN,GACRA,EAAM+E,iBAlHd,SAAsBF,EAAUC,GAC5B,IACI1P,KAAMC,KAAK,WAAY,CACnB,SAAYwP,EACZ,SAAYC,IACbxP,MAAK,SAAUC,GACdL,QAAQC,IAAII,EAASxC,MACrBwM,MAAMhK,EAASxC,KAAK0C,KACO,MAAvBF,EAASxC,KAAKiS,MACdpS,IAAMX,SAAS,CACXR,KAAM,QACNtB,YAAY,EACZuB,QAAS6D,EAASxC,UAKlC,MAAO4C,GACH4J,MAAM,sEACNrK,QAAQS,MAAMA,IAgGdsP,CAAajP,KAAK7E,MAAM0T,SAAU7O,KAAK7E,MAAM2T,Y,iCAEtC9E,EAAOvO,GACD,aAATA,GACAuE,KAAKC,SAAS,CAAC4O,SAAU7E,EAAMd,OAAO/M,QAE7B,aAATV,GACAuE,KAAKC,SAAS,CAAC6O,SAAU9E,EAAMd,OAAO/M,U,+BAIpC,IACF+S,EAAWC,EADV,OAECC,EAAY,CACd,sBAAMV,SAAU,SAACtM,GAAD,OAAO,EAAKiN,YAAYjN,IAAxC,SACI,sBAAKxB,UAAW,WAAhB,UACI,gCACI,cAAC,GAAD,CAAOwN,QAAS,SAAChM,GAAO,EAAKkN,WAAWlN,EAAG,aAA3C,sCAGA,cAAC,GAAD,CAAO3G,KAAM,WAAY2S,QAAS,SAAChM,GAAO,EAAKkN,WAAWlN,EAAG,aAA7D,6BAIJ,qBAAKxB,UAAW,SAAhB,SACI,cAAC,EAAD,CAAQnF,KAAM,SAAd,4BAiBhB,OATIuE,KAAK7E,MAAMyB,MAAMzC,YACjB+U,EAAY,CAAC,cAAC,GAAD,KACbC,EAAQ,6BAGRD,EAAYE,EACZD,EAAQ,gBAIR,eAAC,IAAMjO,SAAP,WACI,qBAAKR,GAAI,UACT,qBAAKA,GAAI,aAAT,SACI,6BACKyO,MAGT,qBAAKzO,GAAI,SACL,yBAASE,UAAW,WAApB,SACKsO,W,GArELpO,IAAMC,W,mBCxFpBwO,GAAOvC,SAASwC,gB,IAuChBC,G,kDACF,WAAY3P,GAAQ,IAAD,8BACf,cAAMA,IACD3E,MAAQ,CAAC6M,WAAYpL,IAAMC,YAChC,EAAK+L,YAAc,EAAKA,YAAYC,KAAjB,gBACnBjM,IAAMkM,UAAU,EAAKF,aAJN,E,0DAOL5I,KAAKC,SAAS,CAAC+H,WAAYpL,IAAMC,e,0CAE3Cb,IAAUC,SAAS,CAACR,KAAM,c,+BA9CC,UAA3BmB,IAAMC,WAAW3C,QACjBqV,GAAKpO,MAAMuO,YAAY,eAAgB,WACvCH,GAAKpO,MAAMuO,YAAY,gBAAiB,QACxCH,GAAKpO,MAAMuO,YAAY,eAAgB,QACvCH,GAAKpO,MAAMuO,YAAY,eAAgB,QACvCH,GAAKpO,MAAMuO,YAAY,gBAAiB,QACxCH,GAAKpO,MAAMuO,YAAY,eAAgB,4BACvCH,GAAKpO,MAAMuO,YAAY,gBAAiB,UACxCH,GAAKpO,MAAMuO,YAAY,oBAAqB,oBAC5CH,GAAKpO,MAAMuO,YAAY,eAAgB,0BACvCH,GAAKpO,MAAMuO,YAAY,eAAgB,0BACvCH,GAAKpO,MAAMuO,YAAY,2BAA4B,yBACnDH,GAAKpO,MAAMuO,YAAY,0BAA2B,QAClDH,GAAKpO,MAAMuO,YAAY,gBAAiB,QACxCH,GAAKpO,MAAMuO,YAAY,mBAAoB,OAC3CH,GAAKpO,MAAMuO,YAAY,iBAAkB,4BAEd,SAA3B9S,IAAMC,WAAW3C,QACjBqV,GAAKpO,MAAMuO,YAAY,eAAgB,WACvCH,GAAKpO,MAAMuO,YAAY,gBAAiB,kBACxCH,GAAKpO,MAAMuO,YAAY,eAAgB,QACvCH,GAAKpO,MAAMuO,YAAY,eAAgB,QACvCH,GAAKpO,MAAMuO,YAAY,gBAAiB,QACxCH,GAAKpO,MAAMuO,YAAY,eAAgB,yBACvCH,GAAKpO,MAAMuO,YAAY,gBAAiB,YACxCH,GAAKpO,MAAMuO,YAAY,oBAAqB,mBAC5CH,GAAKpO,MAAMuO,YAAY,eAAgB,uBACvCH,GAAKpO,MAAMuO,YAAY,eAAgB,oBACvCH,GAAKpO,MAAMuO,YAAY,2BAA4B,4BACnDH,GAAKpO,MAAMuO,YAAY,0BAA2B,WAClDH,GAAKpO,MAAMuO,YAAY,gBAAiB,QACxCH,GAAKpO,MAAMuO,YAAY,mBAAoB,OAC3CH,GAAKpO,MAAMuO,YAAY,iBAAkB,wBAmBzC,IAAIC,EAAY,GAoBhB,OAnByC,IAArC3P,KAAK7E,MAAM6M,WAAW7N,WACtBwV,EAAUlP,KACN,eAAC,IAAD,WACI,cAAC,IAAD,CAAOmP,OAAK,EAACC,KAAM,KAAnB,SACI,cAAC,IAAD,CAAUC,GAAI,eAElB,cAAC,IAAD,CAAOD,KAAM,IAAKnG,UAAWqG,SAKrCJ,EAAUlP,KACN,cAAC,IAAD,UACI,cAAC,IAAD,CAAOoP,KAAM,IAAb,SACI,cAAC,GAAD,SAMZ,cAAC,KAAD,CAAajT,MAAOA,IAAOoT,UAAWhS,IAAtC,SACI,cAAC,IAAD,UACK2R,U,GAtCH7O,IAAMC,WA6ClBgP,G,kDACF,WAAYjQ,GAAQ,IAAD,8BACf,cAAMA,IACD3E,MAAQ,CACT8U,SAAU,EACVC,cAAUpT,GAJC,E,iDAOdsF,GAC2B,IAAxBpC,KAAK7E,MAAM8U,WAGfjQ,KAAKC,SAAS,CAACgQ,SAAU,IACzBjQ,KAAKC,SAAS,CAACiQ,SAAU9N,IACzBpC,KAAKC,SAAS,CAACiQ,cAAUpT,O,0CAGG,IAAxBkD,KAAK7E,MAAM8U,WAGfjQ,KAAKC,SAAS,CAACgQ,SAAU,IACzBrT,IAAMX,SAAS,CAACR,KAAM,mB,0CAGL,IAAD,OACZ0U,EAAO,WACP,EAAKlQ,SAAS,CAACgQ,SAAU,KAE7BrT,IAAMkM,WAAU,WACZsH,WAAWD,EAAM,IAAKA,MAE1BnQ,KAAKF,MAAMuQ,QAAQC,QAAO,SAAAC,GACtBvU,IAAUC,SAAS,CAACR,KAAM,YACtB,EAAKqE,MAAMyQ,SAASC,WAAaD,EAASC,UAC1CJ,WAAWD,EAAM,IAAKA,Q,+BAIxB,IAAD,OACCD,GACKlQ,KAAK7E,MAAM+U,SACRlQ,KAAK7E,MAAM8U,SAChB,SAAC7N,GAAD,OAAO,EAAKqO,KAAKrO,KAGpBsO,EAAiB,kBAAM,EAAKC,qBAElC,SAASC,EAAkBxT,GAEvB8S,EAAa,cAAC,IAAD,CAAUJ,GADH,CAAC,WAAY,WAAY,eAAgB,qBAAsB,gBAC5C1S,EAAM,MA2BjD,OAxBAU,OAAOyP,iBAAiB,SAAS,SAAUnL,GACvC,IAAIA,EAAEyO,iBAGN,YAAc/T,IAAVsF,EAAEhF,KACY,MAAVgF,EAAEhF,KAAcwT,EAAkB,GACxB,MAAVxO,EAAEhF,KAAcwT,EAAkB,GACxB,MAAVxO,EAAEhF,KAAcwT,EAAkB,GACxB,MAAVxO,EAAEhF,KAAcwT,EAAkB,GACxB,MAAVxO,EAAEhF,KAAyB,MAAVgF,EAAEhF,KAAcwT,EAAkB,QACzC,MAAVxO,EAAEhF,KAAyB,MAAVgF,EAAEhF,KAAcsT,WAGrB5T,IAAXsF,EAAE4M,MACQ,WAAX5M,EAAE4M,MAAoB4B,EAAkB,GAC7B,WAAXxO,EAAE4M,MAAoB4B,EAAkB,GAC7B,WAAXxO,EAAE4M,MAAoB4B,EAAkB,GAC7B,WAAXxO,EAAE4M,MAAoB4B,EAAkB,GAC7B,SAAXxO,EAAE4M,MAAkB4B,EAAkB,QAC3B,SAAXxO,EAAE4M,MAAkB0B,WANvB,KAYL,eAAC,IAAMxP,SAAP,WACKlB,KAAK7E,MAAM+U,SACZ,sBAAKtP,UAAU,OAAf,UACI,cAAC,IAAD,CAA0BkP,GAAI,WAAYgB,gBAAiB,SAAUlB,OAAK,EAA1E,SACI,yBAAQhP,UAAW,iBAAnB,yBAAuC,yCAD7B,YAGd,cAAC,IAAD,CAA0BkP,GAAI,WAAYgB,gBAAiB,SAA3D,SACI,yBAAQlQ,UAAW,iBAAnB,qCAAyC,yCAD/B,YAGd,cAAC,IAAD,CAA8BkP,GAAI,eAAgBgB,gBAAiB,SAAnE,SACI,yBAAQlQ,UAAW,iBAAnB,qCAAyC,yCAD/B,gBAGd,cAAC,IAAD,CAAoCkP,GAAI,qBAAsBgB,gBAAiB,SAA/E,SACI,yBAAQlQ,UAAW,iBAAnB,qCAAyC,yCAD/B,sBAGd,cAAC,IAAD,CAA8BkP,GAAI,eAAgBgB,gBAAiB,SAAnE,SACI,yBAAQlQ,UAAW,iBAAnB,2CAA0C,yCADhC,mBAIlB,cAACmQ,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAEIC,WAAY,OACZC,QAAS,IAHb,SAKI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOrB,KAAI,aAAgBnG,UAAWyH,KACtC,cAAC,IAAD,CAAOtB,KAAI,aAAgBnG,UAAWmE,KACtC,cAAC,IAAD,CAAOgC,KAAI,iBAAoBnG,UAAWqE,KAC1C,cAAC,IAAD,CAAO8B,KAAI,uBAA0BnG,UAAWsE,KAChD,cAAC,IAAD,CAAO6B,KAAI,iBAAoBnG,UAAWkF,KAC1C,cAAC,IAAD,CAAOiB,KAAI,IAAX,SACI,cAAC,IAAD,CAAUC,GAAI,mBAXjB9P,KAAKF,MAAMyQ,mB,GAlGbzP,IAAMC,WAuHlB0O,MCjNA2B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhS,MAAK,YAAkD,IAA/CiS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAAS7L,OACL,cAAC,IAAM8L,WAAP,UACI,cAAC,GAAD,MAEJ7E,SAAS8E,eAAe,SAM5BV,O","file":"static/js/main.4d14c9cb.chunk.js","sourcesContent":["import {mapsStore} from \"./index\";\n\nconst defaultState = {\n    active: \"dashboard\",\n    theme: 'light',\n    loginState: false,\n    sessionData: '',\n    timeUpToDate: true,\n    now: new Date('May 29, 2020 22:30:00'),\n    timeline: new Date('May 29, 2020 22:30:00'),\n    timePeriod: '实时',\n    timeNoGo: '数据加载中',\n    lineSpectating: 'No',\n    stationSpectating: {station: '没有选中站点', flow: 0},\n    flowSpectating: -1,\n    peakSpectating: -1,\n    dashboardData: {}\n}\nconst Store = (state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'login' && action.loginState) {\n        newState.loginState = true\n        newState.sessionData = action.session\n        return newState\n    }\n    if (action.type === 'certMan') {\n        if (action.logout) {\n            return defaultState\n        }\n    }\n    if (action.type === 'hoverUpdate') {\n        newState.lineSpectating = action.line\n        if (action.hoverType === 'station') {\n            newState.stationSpectating.station = action.hoverID\n            newState.stationSpectating.flow = action.flow\n        }\n        return newState\n    }\n    if (action.type === 'switchTheme') {\n        newState.theme = 'light'\n        if (state.theme === 'light') {\n            newState.theme = 'dark'\n        }\n        return newState\n    }\n    if (action.type === 'timeUpdate') {\n        if (action.live === true) {\n            newState.timePeriod = '实时'\n            newState.timeline = state.now\n            mapsStore.dispatch({type: 'refresh'})\n            return newState\n        }\n        if (action.time > state.now) {\n            newState.timePeriod = '预测'\n        }\n        else if (action.time < state.now) {\n            newState.timePeriod = '历史'\n        }\n        newState.timeline = action.time\n        return newState\n    }\n    if (action.type === 'noGo') {\n        newState.timeNoGo = action.value === '成功'\n        return newState\n    }\n    if (action.type === 'clear') {\n        return defaultState\n    }\n    return state\n}\nexport default Store","import store, {refreshDashboard} from \"./index\";\n\nconst defaultValue = {\n    initiated: 0,\n    stationData: {},\n    pathData: {},\n    heatData: {},\n    dashboardData: {}\n}\n\nconst Store = (state = defaultValue, action) => {\n    let newMapState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'refresh') {\n        if (!newMapState.initiated) {\n            newMapState.dashboardData = require('../stationaryPlaceholder/dashboard.json')\n            newMapState.stationData = require('../stationaryPlaceholder/stations.json')\n            newMapState.pathData = require('../stationaryPlaceholder/paths.json')\n        }\n        refreshDashboard(store.getState().timeline)\n        return newMapState\n    }\n    if (action.type === 'push') {\n        if (action.stationData !== undefined) {newMapState.stationData = action.stationData}\n        if (action.pathData !== undefined) {newMapState.pathData = action.pathData}\n        if (action.heatData !== undefined) {newMapState.heatData = action.heatData}\n        return newMapState\n    }\n    if (action.type === 'loadDashboard') {\n        newMapState.dashboardData = action.data\n        return newMapState\n    }\n    if (action.type === 'clear') {\n        return defaultValue\n    }\n    return state\n}\nexport default Store","import { createStore } from \"redux\";\nimport methods from './methods';\nimport mapsUpdater from './mapsUpdater';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { CookieStorage } from 'redux-persist-cookie-storage';\nimport storage from 'redux-persist/lib/storage';\nimport Cookies from 'cookies-js';\nimport axios from \"axios\";\n\nlet expires = 22 * 86400\n\nexport function setExpiration(schoolDays)\n{\n    if (schoolDays === undefined) {\n        schoolDays = 22\n    }\n    expires = schoolDays * 86400;\n}\n\n//组件数据和会话\nconst persistConfig = {\n    key: 'root',\n    storage: new CookieStorage(Cookies, {expiration:\n        {default: expires}\n    })\n}\nconst persistedMethods = persistReducer(persistConfig, methods)\nlet store = createStore(persistedMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport let exposedMethods = persistStore(store)\nexport default store\n\n//地图存储\nconst mapsPersistConfig = {\n    key: 'maps',\n    storage: storage\n}\nconst mapsMethods = persistReducer(mapsPersistConfig, mapsUpdater)\nexport let mapsStore = createStore(mapsMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport let mapsExposedMethods = persistStore(mapsStore)\n\nexport function searchObject(data, searchKey, value, requiredKey) {\n    let result\n    try {\n        data.forEach(function (theObject) {\n            if (theObject[searchKey] === value) {\n                result = theObject[requiredKey]\n            }\n        })\n    }\n    catch(error)\n    {\n        console.error(error)\n        return result\n    }\n\n    return result\n}\nexport function refreshDashboard(timeline) {\n    if (timeline === undefined) {\n        console.log('undefined date')\n        return\n    }\n    const date = new Date(timeline)\n    const data = {\n        year: date.getFullYear().toString(),\n        month: (date.getMonth() + 1).toString(),\n        day: date.getDate().toString(),\n        hour: date.getHours().toString(),\n        minute: date.getMinutes().toString()\n    }\n    console.log('Time update request fired')\n    axios.post('/api/time/json', data)\n        .then(response => {\n            console.log(response.data.result.msg)\n            mapsStore.dispatch({\n                type: 'loadDashboard',\n                data: response.data\n            })\n            store.dispatch({\n                type: 'noGo',\n                value: response.data.result.msg\n            })\n        })\n        .catch(error => {\n            console.error(error)\n        })\n}\nexport function moodyTimeDifference(givenTime) {\n    const moodyHour = givenTime.getHours() + (givenTime.getMinutes() > 30 ? 1 : 0)\n    const moodyMin = givenTime.getMinutes() > 15 && givenTime.getMinutes() <= 45 ? 30 : 0\n    return givenTime.getMonth()+1 + ':' + givenTime.getDate() + ':' + moodyHour + ':' + moodyMin\n}\nexport function clearStorage() {\n    mapsStore.dispatch({type: 'clear'})\n    store.dispatch({type: 'clear'})\n}","import React from \"react\";\nimport store from \"../Store\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        let index = 0\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport class ThemeSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState()\n        }\n    }\n    themeNames = ['深色', '浅色']\n    enumOptions() {\n        let optionsController = []\n        let index = 0\n        this.themeNames.forEach(\n            function (perOption) {\n                const {theme} = store.getState()\n                const themeOptions = ['dark', 'light']\n                let acClass = \"SwitchTick\"\n                if (theme === themeOptions[index]) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => {\n                            store.dispatch({\n                                type: 'switchTheme'\n                            })\n                        }}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n    dispatchTheme(value) {\n        store.dispatch({\n            type: 'switchTheme',\n            theme: value\n        })\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <div\n                    id={'controller-theme-switch'}\n                    className={\"SwitchBase\"}\n                    style={{position: 'absolute'}}\n                >\n                    {this.enumOptions()}\n                </div>\n                <div style={{height: 'calc(11pt + 30px)'}}/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport './style.css';\nimport {\n    AreaChart, Area,\n    RadialBarChart,\n    RadialBar,\n    PolarAngleAxis,\n    Legend, Tooltip,\n    Cell,\n    LineChart,\n    CartesianGrid,\n    XAxis,\n    YAxis, Line, BarChart, Bar, LabelList\n} from \"recharts\";\nimport '../Controllers/Switch';\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\nconst defaultRoundCorner = 20;\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\nfunction makeAvailable(thing) {\n    if (thing !== undefined) {return thing}\n    return (<React.Fragment/>)\n}\nfunction fixDictionaryKeys(data, theKeys, zoom) {\n    let emptyData = [{}, {}, {}, {}]\n    const zoomSet = zoom === undefined ? 1 : zoom\n    const theKeysSet = theKeys === undefined ? ['name', 'value'] : theKeys\n    try {\n        data.map(function (value, index) {\n            emptyData[index] = {'name': value[theKeysSet[0]], 'value': value[theKeysSet[1]] * zoomSet}\n            return emptyData\n        }, emptyData, theKeysSet, zoomSet)\n    }\n    catch (e) {}\n    return emptyData\n}\nfunction makeDictionaryPairs(data, theKeys) {\n    let newDictionary = {}\n    try {\n        data.map(function (value) {\n            const key = value[theKeys[0]]\n            newDictionary[key] = value[theKeys[1]]\n            return true\n        }, theKeys)\n    }\n    catch (e) {}\n    return newDictionary\n}\nfunction linesConstructor(dataArray, tintArray, state, tooltip) {\n    const lines = dataArray.lines\n    const tooltipElement = tooltip ? [<Tooltip/>] : []\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{r: 3}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={2}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend/>\n            {tooltipElement}\n            {drawn}\n        </LineChart>\n    )\n}\nfunction barConstructor(dataArray, tintArray, state, label) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    const barContent = keys.map(function (key, index) {\n        let labelSet = []\n        if (label === true) {\n            labelSet = [<LabelList dataKey={key} position=\"top\" style={{fill: 'var(--themeColor)'}}/>]\n\n        }\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n            >\n                {labelSet}\n            </Bar>\n        )\n    }, label)\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    render() {\n        const data = fixDictionaryKeys(this.props.data, this.props.keys, this.props.zoom)\n        const size = this.props.size * 1.25\n        const innerRadius = size / 3.75\n        const spacing = 0\n        const tint = this.props.tint === undefined ? [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"] : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner}\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(0, 1)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(1, 2)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(2, 3)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(3, 4)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    greatLegend(value) {\n        return (<span>{value}</span>)\n    }\n\n    render() {\n        const tint = this.props.tint === undefined ? \"#137A7F\" : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner, align: \"center\"}\n        const size = this.props.size\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[this.props.data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {borderRadius: defaultRoundCorner}\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={this.state.data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={2} dot={{r: 3}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={2} dot={{r: 3}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: defaultRoundCorner\n        }\n        const tint = this.props.tint === undefined ? [\"#EA0\", \"#08A\"] : this.props.tint\n        const dataToConstruct = fixDictionaryKeys(this.props.data, this.props.keys)\n        let nameLabel = makeAvailable(this.props.children)\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(dataToConstruct, tint, port, this.props.tooltip)}\n                <label className={'widgetLabel'}>\n                    {nameLabel}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    componentDidMount() {\n        this.render()\n    }\n\n    render() {\n        const dataToConstruct = this.props.keys === undefined ? this.props.data : makeDictionaryPairs(this.props.data, this.props.keys)\n        const port = this.props.port\n        const tint = setTintArray(this.props.tint)\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": defaultRoundCorner\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([dataToConstruct], tint, port, this.props.label)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class AreaChartTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                \"name\": \"Page A\",\n                \"uv\": 4000,\n                \"pv\": 2400,\n                \"amt\": 2400\n            },\n            {\n                \"name\": \"Page B\",\n                \"uv\": 3000,\n                \"pv\": 1398,\n                \"amt\": 2210\n            },\n            {\n                \"name\": \"Page C\",\n                \"uv\": 2000,\n                \"pv\": 9800,\n                \"amt\": 2290\n            },\n            {\n                \"name\": \"Page D\",\n                \"uv\": 2780,\n                \"pv\": 3908,\n                \"amt\": 2000\n            },\n            {\n                \"name\": \"Page E\",\n                \"uv\": 1890,\n                \"pv\": 4800,\n                \"amt\": 2181\n            },\n            {\n                \"name\": \"Page F\",\n                \"uv\": 2390,\n                \"pv\": 3800,\n                \"amt\": 2500\n            },\n            {\n                \"name\": \"Page G\",\n                \"uv\": 3490,\n                \"pv\": 4300,\n                \"amt\": 2100\n            }\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: defaultRoundCorner\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <AreaChart\n                    width={port.width}\n                    height={port.height}\n                    data={this.state.data}\n                    style={transformToCentre}\n                >\n                    <defs>\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                    <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                </AreaChart>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class GreatLegends extends React.Component {\n    getFromData(data, index, key) {\n        try {return data[index][key]}\n        catch (error) {}\n        return undefined\n    }\n    makeEmpty(inside) {\n        return (inside === null || inside === undefined) ? '--' : inside\n    }\n    render() {\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": defaultRoundCorner\n        }\n        if (this.props.type === 'array')\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <div className={'GLContainer'}>\n                    <div className={'GLName'}>\n                        {this.getFromData(this.props.data, this.props.index, this.props.keys[0])}\n                    </div>\n                    <div className={'GLValue'}>\n                        {this.makeEmpty(this.getFromData(this.props.data, this.props.index, this.props.keys[1]))}\n                    </div>\n                </div>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n        if (this.props.type === 'straight') {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div className={'GLContainer'}>\n                        <div className=\"GLName\">\n                            {this.props.name}\n                        </div>\n                        <div className=\"GLValue\">\n                            {this.makeEmpty(this.props.value)}\n                        </div>\n                    </div>\n                    <label className={'widgetLabel'}>\n                        {makeAvailable(this.props.children)}\n                    </label>\n                </div>\n            )\n        }\n        return (<React.Fragment/>)\n    }\n}","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: 'var(--themeButtonBackground)',\n    color: 'var(--themeColor)',\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n            type: (this.props.type !== undefined) ? this.props.type : \"\",\n            disabled: (this.props.disabled === true),\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick} type={this.state.type} disabled={this.state.disabled}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Suspense } from \"react\";\nimport store, { mapsStore } from \"../Store\";\nimport {\n    Button as MaterialButton,\n    Card, CardActions, CardContent, Typography,\n    FormControl, FormControlLabel, FormGroup, FormLabel,\n    Fade, Modal,\n    Checkbox, Slider, Select, MenuItem, TextField, InputLabel,\n} from \"@material-ui/core\";\nimport MapSwitch from \"../Controllers/Switch\";\nimport { Button } from \"../Controllers/Button\";\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst MapFuture = React.lazy(() => import('./Map'));\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction predictionRequest(userArguments) {\n    try {\n        axios.post('/python/predict', {\n            station: userArguments.boom.station,\n            flow: userArguments.boom.flow,\n            dayprop: userArguments.holiday,\n            weather: userArguments.weather.condition,\n            temperatures: [userArguments.weather.temperature.low, userArguments.weather.temperature.high],\n        })\n            .then(response => {console.log(response)})\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            datePicker: false,\n            argumentPicker: false,\n            activated: \"无\",\n            selectedTime: new Date(store.getState().timeline),\n            flowStats: true,\n            storeState: store.getState(),\n            mapState: mapsStore.getState(),\n            userArguments: {\n                holiday: undefined,\n                weather: {\n                    enabled: false,\n                    condition: '阴',\n                    temperature: {\n                        low: undefined,\n                        high: undefined\n                    }\n                },\n                boom: {\n                    enabled: false,\n                    station: undefined,\n                    flow: undefined,\n                    type: 0,\n                    failure: false,\n                }\n            }\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState({storeState: store.getState()})\n    }\n    handleOpen(modal) {\n        if (modal === 'datePicker') {this.setState({datePicker: !this.state.datePicker})}\n        if (modal === 'argumentPicker') {this.setState({argumentPicker: !this.state.argumentPicker})}\n    }\n    handleTime(e) {\n        this.setState({selectedTime: e})\n    }\n    handleChange(e, argument) {\n        let newArguments = this.state.userArguments\n        if (argument === 'holiday') {\n            newArguments.holiday = e.target.checked\n        }\n        if (argument === 'boomTick') {\n            newArguments.boom.enabled = e.target.checked\n        }\n        if (argument === 'boomType') {\n            newArguments.boom.type = e.target.value\n        }\n        if (argument === 'boom') {\n            newArguments.boom.station = this.state.stationSpectating\n            newArguments.boom.flow = e\n        }\n        if (argument === 'weatherTick') {\n            newArguments.weather.enabled = e.target.checked\n        }\n        if (argument === 'weatherTemperatureLow') {\n            newArguments.weather.temperature.low = e.target.value\n        }\n        if (argument === 'weatherTemperatureHigh') {\n            newArguments.weather.temperature.high = e.target.value\n        }\n        if (argument === 'weather') {\n            newArguments.weather.condition = e.target.value\n        }\n        if (argument === 'failure') {\n            newArguments.boom.failure = e.target.checked\n        }\n        this.setState({userArguments: newArguments})\n    }\n    handlePredictionUpdate(type) {\n        predictionRequest(this.state.userArguments, type)\n        alert('预测请求已经提交'+this.state.userArguments.boom.flow)\n        this.handleOpen('argumentPicker')\n    }\n    handleTimeUpdate() {\n        store.dispatch({\n            type: 'timeUpdate',\n            time: this.state.selectedTime\n        })\n        mapsStore.dispatch({\n            type: 'refresh'\n        })\n        this.handleOpen('datePicker')\n    }\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>线路</td>\n                    <td>{this.state.storeState.lineSpectating}</td>\n                </tr>\n                <tr>\n                    <td>断面客流</td>\n                    <td>{this.state.storeState.stationSpectating.flow}</td>\n                </tr>\n                <tr>\n                    <td>高峰时段</td>\n                    <td>9:00</td>\n                </tr>\n            </table>\n        )\n    }\n    stationArguments() {\n        if (this.state.stationSpectating === 'No') {\n            return (\n                <FormLabel component={'legend'}>没有选择站点</FormLabel>\n            )\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <FormLabel component={'legend'}>{this.state.storeState.stationSpectating.station}</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.userArguments.holiday}\n                                    onChange={(event) => this.handleChange(event, 'failure')}\n                                />\n                            }\n                            label={'故障'}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.userArguments.boom.enabled}\n                                        onChange={(event) => this.handleChange(event, 'boomTick')}\n                                    />\n                                }\n                                label={'突发客流'}\n                            />\n                            <FormGroup row>\n                                <Select\n                                    labelId={'客流类型'}\n                                    id={'客流类型'}\n                                    value={this.state.userArguments.boom.type}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(event) => this.handleChange(event, 'boomType')}\n                                    style={{width: '100%'}}\n                                >\n                                    <MenuItem value={0}>进站</MenuItem>\n                                    <MenuItem value={1}>出站</MenuItem>\n                                    <MenuItem value={2}>进站加</MenuItem>\n                                    <MenuItem value={3}>出站加</MenuItem>\n                                </Select>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Slider\n                                    defaultValue={3000}\n                                    valueLabelDisplay=\"auto\"\n                                    step={10}\n                                    marks\n                                    min={10}\n                                    max={110}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(foo, event) => this.handleChange(event, 'boom')}\n                                />\n                            </FormGroup>\n                        </FormGroup>\n\n                    </FormGroup>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"Layer\"} style={{borderRadius: this.state.rounded}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={'MapTimestamp'}>\n                    <span>预览时间线</span>\n                    <span className={this.state.storeState.timeNoGo === true ? '' : 'noGo'}>{this.state.storeState.timeNoGo === true ? '数据可用' : '该时间无数据'}</span>\n                    <br />\n                    <span className={'TimestampDate'}>\n                        {moment(this.state.storeState.timeline).format('MM-DD-YYYY HH:MM')}\n                    </span>\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch\n                        switchOptions={[\"无\", \"热力图\"]}\n                        setState={(e) => (this.setState(e))}\n                        state={this.state}\n                    />\n                    <div style={{display: \"flex\", flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <Button onClick={() => this.handleOpen('datePicker')}>\n                            日期\n                        </Button>\n                        <div style={{width: '.5em'}}/>\n                        <Button onClick={() => store.dispatch({type: 'timeUpdate', live: true})}>\n                            实时\n                        </Button>\n                    </div>\n\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}数据\n                    </Button>\n                    {this.state.flowStats ? <Button onClick={() => this.handleOpen('argumentPicker')}>模拟数据变更</Button> : ''}\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.selectedTime}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"primary\"}\n                                        onClick={() => this.handleTimeUpdate(this.state.storeState.time)}\n                                    >\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"default\"}\n                                        onClick={() => this.handleOpen('datePicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.argumentPicker}>\n                        <Fade in={this.state.argumentPicker}>\n                            <Card style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        输入参数\n                                    </Typography>\n                                    <div className={'DualPanel'}>\n                                        <FormControl component={'fieldset'}>\n                                            <FormLabel component={'legend'}>该时间操作</FormLabel>\n                                            <FormGroup row>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.holiday}\n                                                            onChange={this.state}\n                                                        />\n                                                    }\n                                                    label={'放假'}\n                                                />\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weatherTick')}\n                                                        />\n                                                    }\n                                                    label={'变更天气'}\n                                                />\n                                                <FormGroup>\n                                                    <FormControl>\n                                                        <InputLabel id={'天气选择标签'}>\n                                                            天气类型\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"天气选择\"\n                                                            id=\"天气选择\"\n                                                            value={this.state.userArguments.weather.condition}\n                                                            disabled={!this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weather')}\n                                                        >\n                                                            <MenuItem value={'阴'}>阴</MenuItem>\n                                                            <MenuItem value={'晴'}>晴</MenuItem>\n                                                            <MenuItem value={'多云'}>多云</MenuItem>\n                                                            <MenuItem value={'小雨'}>小雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>中雨</MenuItem>\n                                                            <MenuItem value={'大雨'}>大雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>暴雨</MenuItem>\n                                                            <MenuItem value={'雷阵雨'}>雷阵雨</MenuItem>\n                                                        </Select>\n                                                    </FormControl>\n\n                                                    <TextField\n                                                        id={'最低温度输入'}\n                                                        label={'输入最低摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureLow')}\n                                                    />\n                                                    <TextField\n                                                        id={'最高温度输入'}\n                                                        label={'输入最高摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureHigh')}\n                                                    />\n                                                </FormGroup>\n                                            </FormGroup>\n                                        </FormControl>\n                                        <br />\n                                        <FormControl component={'fieldset'}>\n                                            {this.stationArguments()}\n                                        </FormControl>\n                                    </div>\n                                </CardContent>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"} onClick={() => this.handlePredictionUpdate('meow')}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('argumentPicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>地图正在加载……</div>}>\n                        <MapFuture\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                            mode={this.state.activated}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport { MapsBlock } from '../Widgets/MapsBlock';\nimport { mapsStore } from \"../Store\";\n\nconst body = document.body\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8),\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size, mapsState} = this.state\n        return (\n            <div className={\"OverviewGrid\"} key={'pages-index'}>\n                <div className={\"div1\"}>\n                    <Widgets.DashboardOne size={size} data={mapsState.highestFlow}>\n                        客流最高站点\n                    </Widgets.DashboardOne>\n                </div>\n                <div className={\"div2\"}>\n                    <Widgets.GreatLegends type={'straight'} name={'全网客流量指数'} value={mapsState.overallFlow}>\n                        重点客流量\n                    </Widgets.GreatLegends>\n                </div>\n                <div className={\"div3\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.highestDist4}\n                        zoom={0.1}\n                        tint={['#6099DB', '#DC73BC', '#7BDB6B', '#DBD455']}\n                    >\n                        客流高峰区域\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div4\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.lineFlow}\n                        keys={['linename', 'flow']}\n                        tint={['#6BDB9C', '#DBC760', '#5685DB', '#D9734C']}\n                    >\n                        客流高峰线路\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div5\"}>\n                    <MapsBlock\n                        port={{\"height\": size * 5, \"width\": size * 4}}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\nimport {mapsStore} from \"../Store\";\n\nconst body = document.body\n\nexport class LineHeat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            width: body.scrollWidth / 2,\n            height: body.scrollHeight / 10,\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {height, width, mapsState} = this.state\n        return(\n            <div className={\"LHGrid\"} key={'pages-line-heat'}>\n                <div className=\"div1\">\n                    <React.Suspense fallback={<div className={'Panel'}/>}>\n                        <Widgets.SimpleBars\n                            port={{height: height, width: width * 2}}\n                            data={mapsState.lineFlow}\n                            keys={['linename', 'flow']}\n                            tint={['#09B8A3', '#23EB62', '#F0438F', '#EBBF23', '#A1C0F5', '#0977B8', '#B98AF5', '#F7DF34', '#F75A43', '#65A1C2']}\n                            label={true}\n                        />\n                    </React.Suspense>\n                </div>\n                <div className=\"div2\"></div>\n                <div className=\"div3\"></div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n                <div className=\"div7\"></div>\n                <div className=\"div8\"></div>\n                <div className=\"div9\"></div>\n                <div className=\"div10\"></div>\n                <div className=\"div11\"></div>\n                <div className=\"div12\"></div>\n                <div className=\"div13\"></div>\n                <div className=\"div14\"></div>\n                <div className=\"div15\"></div>\n                <div className=\"div16\"></div>\n                <div className=\"div17\"></div>\n                <div className=\"div18\"></div>\n                <div className=\"div19\"></div>\n                <div className=\"div20\"></div>\n            </div>\n        )\n    }\n}\n\nexport class HeatTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize = () => {\n        this.setState({\n            size: body.scrollHeight / 5\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return(\n            <div className={\"THGrid\"} key={'pages-timeline-heat'}>\n                <div className=\"div1\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div2\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div3\">\n                    <Widgets.AreaChartTrends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\n\nconst body = document.body\n\nclass PassengerAnalytics extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n    render() {\n        const {size} = this.state\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                            <Widgets.SimpleBars\n                                port={{\"height\": size, \"width\": size * 2}}\n                                tint={[\"#2196f3\", \"#8bc34a\"]}\n                                data={{u:90, p:5}}\n                            >\n                                Simple Bars\n                            </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div2\"></div>\n                    <div className=\"div3\"></div>\n                    <div className=\"div4\"></div>\n                    <div className=\"div5\"></div>\n                    <div className=\"div6\"></div>\n                    <div className=\"div7\"></div>\n                    <div className=\"div8\"></div>\n                    <div className=\"div9\"></div>\n                    <div className=\"div10\"></div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from \"react\";\nimport \"./style.css\"\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (this.props.type !== undefined) ? this.props.type : \"text\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={'InputFunction'}>\n                <label>\n                    {this.props.children}\n                </label>\n                <input className={'coilsInput'} type={this.state.type} onChange={(event => this.props.handler(event))}/>\n            </div>\n        )\n    }\n}\n\nexport default Input","import React from \"react\";\nimport { Input, Button } from '../Controllers';\nimport { FormGroup, FormLabel, Slider, Button as MaterialButton } from '@material-ui/core'\nimport axios from \"axios\";\nimport './style.css';\nimport store, { setExpiration, clearStorage } from \"../Store\";\nimport { ThemeSwitch } from \"../Controllers/Switch\";\n\nfunction loginRequest(username, password) {\n    try {\n        axios.post('/api/log', {\n            'username': username,\n            'password': password\n        }).then(function (response) {\n            console.log(response.data)\n            alert(response.data.msg)\n            if (response.data.code === 200) {\n                store.dispatch({\n                    type: 'login',\n                    loginState: true,\n                    session: response.data\n                })\n            }\n        })\n    }\n    catch (error) {\n        alert('网络连接出现了一些问题')\n        console.error(error);\n    }\n}\n\nclass CertForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: 1,\n        }\n    }\n    CertChange(type) {\n        let feedbackInfo\n        if (type === 'logout') {\n            feedbackInfo = '注销凭据完成'\n            const action = {\n                type: 'certMan',\n                logout: true\n            }\n            store.dispatch(action)\n        }\n        if (type === 'cache') {\n            feedbackInfo = '保存凭据' + this.state.duration +'天'\n            setExpiration(this.state.duration)\n        }\n        alert(feedbackInfo)\n    }\n    handleSlider = (event, newValue) => {\n        this.setState({duration: newValue})\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <ThemeSwitch/>\n                <div className={'Description'}>\n                    可以按 [K] 快速切换主题\n                </div>\n                <form\n                    style={{marginTop: '2em'}}\n                    onSubmit={() => this.CertChange('cache', this.state.duration)}\n                >\n                    <FormGroup>\n                        <FormLabel style={{color: 'var(--ThemeColor)'}} component={'legend'}>保存凭据时长（天）</FormLabel>\n                        <div style={{margin: '0 auto', width: 'calc(100% - 20px)'}}>\n                            <Slider\n                                defaultValue={1}\n                                valueLabelDisplay=\"auto\"\n                                step={5}\n                                marks\n                                min={1}\n                                max={31}\n                                onChange={this.handleSlider}\n                            />\n                        </div>\n                    </FormGroup>\n                    <div style={{display: \"flex\", flexDirection: 'row'}}>\n                        <Button type={'submit'}>\n                            保存凭据\n                        </Button>\n                        <div style={{width: '.5em'}}/>\n                        <Button onClick={() => this.CertChange('logout')}>\n                            注销\n                        </Button>\n                    </div>\n                    <br />\n                    <MaterialButton\n                        size={'small'}\n                        style={{color: '#F66'}}\n                        onClick={() => clearStorage()}\n                    >\n                        清除本地数据并注销\n                    </MaterialButton>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState(),\n            username: '',\n            password: ''\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n    handleLogin(event) {\n        event.preventDefault()\n        loginRequest(this.state.username, this.state.password)\n    }\n    handleForm(event, type) {\n        if (type === 'username') {\n            this.setState({username: event.target.value})\n        }\n        if (type === 'password') {\n            this.setState({password: event.target.value})\n        }\n    }\n\n    render() {\n        let FormSheet, hello\n        const LoginForm = [\n            <form onSubmit={(e) => this.handleLogin(e)}>\n                <div className={\"AuthForm\"}>\n                    <div>\n                        <Input handler={(e) => {this.handleForm(e, 'username')}}>\n                            用户名称\n                        </Input>\n                        <Input type={\"password\"} handler={(e) => {this.handleForm(e, 'password')}}>\n                            密码\n                        </Input>\n                    </div>\n                    <div className={\"Button\"}>\n                        <Button type={\"submit\"}>\n                            好\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        ]\n\n        if (this.state.store.loginState) {\n            FormSheet = [<CertForm/>]\n            hello = \"认证管理\"\n        }\n        else {\n            FormSheet = LoginForm\n            hello = \"认证\"\n        }\n\n        return (\n            <React.Fragment>\n                <div id={'Amaze'}/>\n                <div id={'ActualCard'}>\n                    <h1>\n                        {hello}\n                    </h1>\n                </div>\n                <div id={'Maze'}/>\n                    <section className={\"AuthCard\"}>\n                        {FormSheet}\n                    </section>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport Overview from \"./Overview\";\nimport { LineHeat, HeatTimeline } from \"./LineHeat\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport Login from \"./Authenticate\";\nimport './index.css';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, {exposedMethods, mapsStore} from \"./Store\";\n\nconst root = document.documentElement\n\nfunction setTheme() {\n    if (store.getState().theme === 'light') {\n        root.style.setProperty('--themeTable', '#E3E3E3')\n        root.style.setProperty('--themeBorder', 'none')\n        root.style.setProperty('--themeColor', '#443')\n        root.style.setProperty('--themeHover', '#220')\n        root.style.setProperty('--themeActive', '#220')\n        root.style.setProperty('--themeLayer', 'rgba(250, 250, 250, 0.8)')\n        root.style.setProperty('--themeFilter', 'screen')\n        root.style.setProperty('--themeDarkFilter', 'brightness(1.17)')\n        root.style.setProperty('--themePure0', 'rgba(255, 255, 255, 1)')\n        root.style.setProperty('--themePure1', 'rgba(255, 255, 255, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(80, 80, 80, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#FFF')\n        root.style.setProperty('--controlBlur', '#553')\n        root.style.setProperty('--dockBorderSize', '1px')\n        root.style.setProperty('--actualFilter', 'rgba(255, 255, 255, .8)')\n    }\n    if (store.getState().theme === 'dark') {\n        root.style.setProperty('--themeTable', '#171717')\n        root.style.setProperty('--themeBorder', '0 0 1.5px #EEE')\n        root.style.setProperty('--themeColor', '#EEE')\n        root.style.setProperty('--themeHover', '#AAB')\n        root.style.setProperty('--themeActive', '#FFF')\n        root.style.setProperty('--themeLayer', 'rgba(53, 53, 53, 0.8)')\n        root.style.setProperty('--themeFilter', 'multiply')\n        root.style.setProperty('--themeDarkFilter', 'brightness(.25)')\n        root.style.setProperty('--themePure0', 'rgba(64, 64, 64, 1)')\n        root.style.setProperty('--themePure1', 'rgba(0, 0, 0, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(255, 255, 255, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#535353')\n        root.style.setProperty('--controlBlur', '#BBC')\n        root.style.setProperty('--dockBorderSize', '2px')\n        root.style.setProperty('--actualFilter', 'rgba(0, 0, 25, .15)')\n\n    }\n}\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {storeState: store.getState()}\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){this.setState({storeState: store.getState()})}\n    componentDidMount() {\n        mapsStore.dispatch({type: 'refresh'})\n    }\n\n    render() {\n        setTheme()\n        let pagesList = []\n        if (this.state.storeState.loginState === true) {\n            pagesList.push(\n                <Switch>\n                    <Route exact path={\"./\"}>\n                        <Redirect to={\"Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"} component={AnimationApp}/>\n                </Switch>\n            )\n        }\n        else {\n            pagesList.push(\n                <Switch>\n                    <Route path={\"*\"}>\n                        <Login />\n                    </Route>\n                </Switch>\n            )\n        }\n        return (\n            <PersistGate store={store} persistor={exposedMethods}>\n                <Router>\n                    {pagesList}\n                </Router>\n            </PersistGate>\n        )\n    }\n}\n\nclass AnimationApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            handling: 0,\n            redirect: undefined\n        }\n    }\n    wary(e) {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        this.setState({redirect: e})\n        this.setState({redirect: undefined})\n    }\n    themeSwitcherWary() {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        store.dispatch({type: 'switchTheme'})\n    }\n\n    componentDidMount() {\n        let done = () => {\n            this.setState({handling: 0})\n        }\n        store.subscribe(() => {\n            setTimeout(done, 500, done)\n        })\n        this.props.history.listen(location => {\n            mapsStore.dispatch({type: 'refresh'})\n            if (this.props.location.pathname !== location.pathname) {\n                setTimeout(done, 500, done)\n            }\n        })\n    }\n    render() {\n        const redirect = {\n            state: this.state.redirect,\n            handling: this.state.handling,\n            set: (e) => this.wary(e),\n            done: () => this.done()\n        }\n        const themeSwitchKey = () => this.themeSwitcherWary()\n\n        function handleShortcutKey(key) {\n            const destination = ['Overview', 'LineHeat', 'HeatTimeline', 'PassengerAnalytics', 'Authenticate']\n            redirect.set(<Redirect to={destination[key - 1]}/>)\n        }\n        // keyboard shortcuts\n        window.addEventListener(\"keyup\", function (e) {\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (e.key !== undefined) {\n                if (e.key === '1') {handleShortcutKey(1)}\n                if (e.key === '2') {handleShortcutKey(2)}\n                if (e.key === '3') {handleShortcutKey(3)}\n                if (e.key === '4') {handleShortcutKey(4)}\n                if (e.key === 'L' || e.key === 'l') {handleShortcutKey(5)}\n                if (e.key === 'K' || e.key === 'k') {themeSwitchKey()}\n                return;\n            }\n            else if (e.code !== undefined) {\n                if (e.code === 'Digit1') {handleShortcutKey(1)}\n                if (e.code === 'Digit2') {handleShortcutKey(2)}\n                if (e.code === 'Digit3') {handleShortcutKey(3)}\n                if (e.code === 'Digit4') {handleShortcutKey(4)}\n                if (e.code === 'KeyL') {handleShortcutKey(5)}\n                if (e.code === 'KeyK') {themeSwitchKey()}\n                return;\n            }\n        })\n\n        return (\n            <React.Fragment>\n                {this.state.redirect}\n                <div className=\"Dock\">\n                    <NavLink key={\"Overview\"} to={\"Overview\"} activeClassName={\"active\"} exact>\n                        <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                    </NavLink>\n                    <NavLink key={\"LineHeat\"} to={\"LineHeat\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>线路分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"HeatTimeline\"} to={\"HeatTimeline\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>时段分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"PassengerAnalytics\"} to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>用户画像<span>3</span></button>\n                    </NavLink>\n                    <NavLink key={\"Authenticate\"} to={\"Authenticate\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>认证与设置<span>L</span></button>\n                    </NavLink>\n                </div>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={this.props.location}\n                        classNames={\"fade\"}\n                        timeout={250}\n                    >\n                        <Switch>\n                            <Route path={`*/Overview`} component={Overview}/>\n                            <Route path={`*/LineHeat`} component={LineHeat}/>\n                            <Route path={`*/HeatTimeline`} component={HeatTimeline}/>\n                            <Route path={`*/PassengerAnalytics`} component={PassengerAnalytics}/>\n                            <Route path={`*/Authenticate`} component={Login}/>\n                            <Route path={`*`}>\n                                <Redirect to={\"Overview\"}/>\n                            </Route>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}