{"version":3,"sources":["Store/methods.js","Store/mapsUpdater.js","Store/index.js","Controllers/Switch.js","Widgets/widgets.js","Controllers/Button.js","Widgets/MapsBlock.js","Overview/index.js","LineHeat/index.js","PassengerAnalytics/index.js","Controllers/Input.js","Authenticate/index.js","App.js","reportWebVitals.js","index.js"],"names":["defaultState","active","theme","loginState","sessionData","timeUpToDate","now","Date","timeline","timePeriod","timeNoGo","lineSpectating","stationSpectating","station","flow","flowSpectating","peakSpectating","dashboardData","Store","state","action","newState","JSON","parse","stringify","type","session","logout","line","hoverType","hoverID","time","value","defaultValue","initiated","stationData","pathData","heatData","newMapState","require","refreshDashboard","store","getState","undefined","data","expires","setExpiration","schoolDays","persistConfig","key","storage","CookieStorage","Cookies","expiration","default","persistedMethods","persistReducer","methods","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","exposedMethods","persistStore","mapsPersistConfig","mapsMethods","mapsUpdater","mapsStore","mapsExposedMethods","date","year","getFullYear","toString","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","console","log","axios","post","then","response","result","msg","dispatch","catch","error","MapSwitch","props","switchOptions","this","setState","allOptions","optionsController","index","forEach","perOption","acClass","activated","push","id","onClick","className","enumOptions","React","Component","ThemeSwitch","themeNames","transformToCentre","position","left","top","transform","defaultRoundCorner","makeAvailable","thing","Fragment","fixDictionaryKeys","theKeys","zoom","emptyData","zoomSet","theKeysSet","map","e","linesConstructor","dataArray","tintArray","tooltip","lines","tooltipElement","converted","drawn","lineIndex","values","y","x","partPoint","name","Object","assign","dot","r","dataKey","stroke","strokeWidth","width","height","style","barConstructor","label","keys","barContent","labelSet","fill","Dashboard","nameLabel","size","innerRadius","tint","frame","borderRadius","children","slice","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","uv","pv","amt","port","SimpleBars","render","propTintArray","dataToConstruct","newDictionary","makeDictionaryPairs","AreaChartTrends","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","fillOpacity","GreatLegends","inside","getFromData","makeEmpty","MNButtonStyle","backgroundColor","color","Button","disabled","variant","MapFuture","lazy","MapsBlock","rounded","datePicker","argumentPicker","selectedTime","flowStats","storeState","mapState","userArguments","holiday","weather","enabled","condition","temperature","low","high","boom","failure","storeChange","bind","subscribe","modal","argument","newArguments","target","checked","dayprop","temperatures","predictionRequest","alert","handleOpen","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","onChange","event","handleChange","row","Select","labelId","MenuItem","Slider","valueLabelDisplay","step","marks","min","max","foo","opacity","userSelect","cursor","getStats","moment","format","triggerStats","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","margin","utils","MomentUtils","handleTime","CardActions","handleTimeUpdate","FormControl","InputLabel","TextField","marginTop","InputLabelProps","shrink","stationArguments","handlePredictionUpdate","fallback","mode","body","document","Index","calculateSize","Math","scrollHeight","scrollWidth","mapsState","addEventListener","removeEventListener","highestFlow","overallFlow","highestDist4","lineFlow","LineHeat","Suspense","HeatTimeline","PassengerAnalytics","u","p","Input","handler","CertForm","handleSlider","newValue","duration","feedbackInfo","onSubmit","CertChange","Login","username","password","preventDefault","code","loginRequest","FormSheet","hello","LoginForm","handleLogin","handleForm","root","documentElement","App","setProperty","pagesList","exact","path","to","AnimationApp","persistor","handling","redirect","done","history","listen","location","pathname","setTimeout","wary","handleShortcutKey","defaultPrevented","activeClassName","TransitionGroup","CSSTransition","classNames","timeout","Overview","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a816457e.chunk.js","sourcesContent":["const defaultState = {\n    active: \"dashboard\",\n    theme: 'light',\n    loginState: false,\n    sessionData: '',\n    timeUpToDate: true,\n    now: new Date('June 1, 2020 22:30:00'),\n    timeline: new Date('June 1, 2020 22:30:00'),\n    timePeriod: '实时',\n    timeNoGo: '数据加载中',\n    lineSpectating: 'No',\n    stationSpectating: {station: '没有选中站点', flow: 0},\n    flowSpectating: -1,\n    peakSpectating: -1,\n    dashboardData: {}\n}\nconst Store = (state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'login' && action.loginState) {\n        newState.loginState = true\n        newState.sessionData = action.session\n        return newState\n    }\n    if (action.type === 'certMan') {\n        if (action.logout) {\n            return defaultState\n        }\n    }\n    if (action.type === 'hoverUpdate') {\n        newState.lineSpectating = action.line\n        if (action.hoverType === 'station') {\n            newState.stationSpectating.station = action.hoverID\n            newState.stationSpectating.flow = action.flow\n        }\n        return newState\n    }\n    if (action.type === 'switchTheme') {\n        newState.theme = 'light'\n        if (state.theme === 'light') {\n            newState.theme = 'dark'\n        }\n        return newState\n    }\n    if (action.type === 'timeUpdate') {\n        if (action.time > state.now) {\n            newState.timePeriod = '预测'\n        }\n        else if (action.time < state.now) {\n            newState.timePeriod = '历史'\n        }\n        else if (action.now) {\n            newState.timePeriod = '实时'\n        }\n        newState.timeline = action.time\n        return newState\n    }\n    if (action.type === 'noGo') {\n        newState.timeNoGo = action.value === '成功'\n        return newState\n    }\n    return state\n}\nexport default Store","import store, {refreshDashboard} from \"./index\";\n\nconst defaultValue = {\n    initiated: 0,\n    stationData: {},\n    pathData: {},\n    heatData: {},\n    dashboardData: {}\n}\n\nconst Store = (state = defaultValue, action) => {\n    let newMapState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'refresh') {\n        if (!newMapState.initiated) {\n            newMapState.dashboardData = require('../stationaryPlaceholder/dashboard.json')\n            newMapState.stationData = require('../stationaryPlaceholder/stations.json')\n            newMapState.pathData = require('../stationaryPlaceholder/paths.json')\n        }\n        refreshDashboard(store.getState().timeline)\n        return newMapState\n    }\n    if (action.type === 'push') {\n        if (action.stationData !== undefined) {newMapState.stationData = action.stationData}\n        if (action.pathData !== undefined) {newMapState.pathData = action.pathData}\n        if (action.heatData !== undefined) {newMapState.heatData = action.heatData}\n        return newMapState\n    }\n    if (action.type === 'loadDashboard') {\n        newMapState.dashboardData = action.data\n        return newMapState\n    }\n    return state\n}\nexport default Store","import { createStore } from \"redux\";\nimport methods from './methods';\nimport mapsUpdater from './mapsUpdater';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { CookieStorage } from 'redux-persist-cookie-storage';\nimport storage from 'redux-persist/lib/storage';\nimport Cookies from 'cookies-js';\nimport axios from \"axios\";\n\nlet expires = 22 * 86400\n\nexport function setExpiration(schoolDays)\n{\n    if (schoolDays === undefined) {\n        schoolDays = 22\n    }\n    expires = schoolDays * 86400;\n}\n\n//组件数据和会话\nconst persistConfig = {\n    key: 'root',\n    storage: new CookieStorage(Cookies, {expiration:\n        {default: expires}\n    })\n}\nconst persistedMethods = persistReducer(persistConfig, methods)\nlet store = createStore(persistedMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport let exposedMethods = persistStore(store)\nexport default store\n\n//地图存储\nconst mapsPersistConfig = {\n    key: 'maps',\n    storage: storage\n}\nconst mapsMethods = persistReducer(mapsPersistConfig, mapsUpdater)\nexport let mapsStore = createStore(mapsMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport let mapsExposedMethods = persistStore(mapsStore)\n\nexport function searchObject(data, searchKey, value, requiredKey) {\n    let result\n    try {\n        data.forEach(function (theObject) {\n            if (theObject[searchKey] === value) {\n                result = theObject[requiredKey]\n            }\n        })\n    }\n    catch(error)\n    {\n        console.error(error)\n        return result\n    }\n\n    return result\n}\nexport function refreshDashboard(timeline) {\n    if (timeline === undefined) {\n        console.log('undefined date')\n        return\n    }\n    const date = new Date(timeline)\n    const data = {\n        year: date.getFullYear().toString(),\n        month: (date.getMonth() + 1).toString(),\n        day: date.getDate().toString(),\n        hour: date.getHours().toString(),\n        minute: date.getMinutes().toString()\n    }\n    console.log('Time update request fired')\n    axios.post('/api/time/json', data)\n        .then(response => {\n            console.log(response.data.result.msg)\n            mapsStore.dispatch({\n                type: 'loadDashboard',\n                data: response.data\n            })\n            store.dispatch({\n                type: 'noGo',\n                value: response.data.result.msg\n            })\n        })\n        .catch(error => {\n            console.error(error)\n        })\n}\nexport function moodyTimeDifference(givenTime) {\n    const moodyHour = givenTime.getHours() + (givenTime.getMinutes() > 30 ? 1 : 0)\n    const moodyMin = givenTime.getMinutes() > 15 && givenTime.getMinutes() <= 45 ? 30 : 0\n    return givenTime.getMonth()+1 + ':' + givenTime.getDate() + ':' + moodyHour + ':' + moodyMin\n}","import React from \"react\";\nimport store from \"../Store\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        let index = 0\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport class ThemeSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState()\n        }\n    }\n    themeNames = ['深色', '浅色']\n    enumOptions() {\n        let optionsController = []\n        let index = 0\n        this.themeNames.forEach(\n            function (perOption) {\n                const {theme} = store.getState()\n                const themeOptions = ['dark', 'light']\n                let acClass = \"SwitchTick\"\n                if (theme === themeOptions[index]) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => {\n                            store.dispatch({\n                                type: 'switchTheme'\n                            })\n                        }}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n    dispatchTheme(value) {\n        store.dispatch({\n            type: 'switchTheme',\n            theme: value\n        })\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions()}\n            </div>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport './style.css';\nimport {\n    AreaChart, Area,\n    RadialBarChart,\n    RadialBar,\n    PolarAngleAxis,\n    Legend, Tooltip,\n    Cell,\n    LineChart,\n    CartesianGrid,\n    XAxis,\n    YAxis, Line, BarChart, Bar, LabelList\n} from \"recharts\";\nimport '../Controllers/Switch';\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\nconst defaultRoundCorner = 20;\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\nfunction makeAvailable(thing) {\n    if (thing !== undefined) {return thing}\n    return (<React.Fragment/>)\n}\nfunction fixDictionaryKeys(data, theKeys, zoom) {\n    let emptyData = [{}, {}, {}, {}]\n    const zoomSet = zoom === undefined ? 1 : zoom\n    const theKeysSet = theKeys === undefined ? ['name', 'value'] : theKeys\n    try {\n        data.map(function (value, index) {\n            emptyData[index] = {'name': value[theKeysSet[0]], 'value': value[theKeysSet[1]] * zoomSet}\n            return emptyData\n        }, emptyData, theKeysSet, zoomSet)\n    }\n    catch (e) {}\n    return emptyData\n}\nfunction makeDictionaryPairs(data, theKeys) {\n    let newDictionary = {}\n    try {\n        data.map(function (value) {\n            const key = value[theKeys[0]]\n            newDictionary[key] = value[theKeys[1]]\n            return true\n        }, theKeys)\n    }\n    catch (e) {}\n    return newDictionary\n}\nfunction linesConstructor(dataArray, tintArray, state, tooltip) {\n    const lines = dataArray.lines\n    const tooltipElement = tooltip ? [<Tooltip/>] : []\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{r: 3}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={2}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend/>\n            {tooltipElement}\n            {drawn}\n        </LineChart>\n    )\n}\nfunction barConstructor(dataArray, tintArray, state, label) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    const barContent = keys.map(function (key, index) {\n        let labelSet = []\n        if (label === true) {\n            labelSet = [<LabelList dataKey={key} position=\"top\" style={{fill: 'var(--themeColor)'}}/>]\n\n        }\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n            >\n                {labelSet}\n            </Bar>\n        )\n    }, label)\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    render() {\n        const data = fixDictionaryKeys(this.props.data, this.props.keys, this.props.zoom)\n        const size = this.props.size * 1.25\n        const innerRadius = size / 3.75\n        const spacing = 0\n        const tint = this.props.tint === undefined ? [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"] : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner}\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(0, 1)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(1, 2)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(2, 3)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(3, 4)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    greatLegend(value) {\n        return (<span>{value}</span>)\n    }\n\n    render() {\n        const tint = this.props.tint === undefined ? \"#137A7F\" : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner, align: \"center\"}\n        const size = this.props.size\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[this.props.data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {borderRadius: defaultRoundCorner}\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={this.state.data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={2} dot={{r: 3}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={2} dot={{r: 3}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: defaultRoundCorner\n        }\n        const tint = this.props.tint === undefined ? [\"#EA0\", \"#08A\"] : this.props.tint\n        const dataToConstruct = fixDictionaryKeys(this.props.data, this.props.keys)\n        let nameLabel = makeAvailable(this.props.children)\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(dataToConstruct, tint, port, this.props.tooltip)}\n                <label className={'widgetLabel'}>\n                    {nameLabel}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    componentDidMount() {\n        this.render()\n    }\n\n    render() {\n        const dataToConstruct = this.props.keys === undefined ? this.props.data : makeDictionaryPairs(this.props.data, this.props.keys)\n        const port = this.props.port\n        const tint = setTintArray(this.props.tint)\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": defaultRoundCorner\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([dataToConstruct], tint, port, this.props.label)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class AreaChartTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                \"name\": \"Page A\",\n                \"uv\": 4000,\n                \"pv\": 2400,\n                \"amt\": 2400\n            },\n            {\n                \"name\": \"Page B\",\n                \"uv\": 3000,\n                \"pv\": 1398,\n                \"amt\": 2210\n            },\n            {\n                \"name\": \"Page C\",\n                \"uv\": 2000,\n                \"pv\": 9800,\n                \"amt\": 2290\n            },\n            {\n                \"name\": \"Page D\",\n                \"uv\": 2780,\n                \"pv\": 3908,\n                \"amt\": 2000\n            },\n            {\n                \"name\": \"Page E\",\n                \"uv\": 1890,\n                \"pv\": 4800,\n                \"amt\": 2181\n            },\n            {\n                \"name\": \"Page F\",\n                \"uv\": 2390,\n                \"pv\": 3800,\n                \"amt\": 2500\n            },\n            {\n                \"name\": \"Page G\",\n                \"uv\": 3490,\n                \"pv\": 4300,\n                \"amt\": 2100\n            }\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: defaultRoundCorner\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <AreaChart\n                    width={port.width}\n                    height={port.height}\n                    data={this.state.data}\n                    style={transformToCentre}\n                >\n                    <defs>\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                    <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                </AreaChart>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class GreatLegends extends React.Component {\n    getFromData(data, index, key) {\n        try {return data[index][key]}\n        catch (error) {}\n        return undefined\n    }\n    makeEmpty(inside) {\n        return (inside === null || inside === undefined) ? '--' : inside\n    }\n    render() {\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": defaultRoundCorner\n        }\n        if (this.props.type === 'array')\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <div className={'GLContainer'}>\n                    <div className={'GLName'}>\n                        {this.getFromData(this.props.data, this.props.index, this.props.keys[0])}\n                    </div>\n                    <div className={'GLValue'}>\n                        {this.makeEmpty(this.getFromData(this.props.data, this.props.index, this.props.keys[1]))}\n                    </div>\n                </div>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n        if (this.props.type === 'straight') {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div className={'GLContainer'}>\n                        <div className=\"GLName\">\n                            {this.props.name}\n                        </div>\n                        <div className=\"GLValue\">\n                            {this.makeEmpty(this.props.value)}\n                        </div>\n                    </div>\n                    <label className={'widgetLabel'}>\n                        {makeAvailable(this.props.children)}\n                    </label>\n                </div>\n            )\n        }\n        return (<React.Fragment/>)\n    }\n}","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: 'var(--themeButtonBackground)',\n    color: 'var(--themeColor)',\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n            type: (this.props.type !== undefined) ? this.props.type : \"\",\n            disabled: (this.props.disabled === true),\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick} type={this.state.type} disabled={this.state.disabled}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Suspense } from \"react\";\nimport store, { mapsStore } from \"../Store\";\nimport {\n    Button as MaterialButton,\n    Card, CardActions, CardContent, Typography,\n    FormControl, FormControlLabel, FormGroup, FormLabel,\n    Fade, Modal,\n    Checkbox, Slider, Select, MenuItem, TextField, InputLabel,\n} from \"@material-ui/core\";\nimport MapSwitch from \"../Controllers/Switch\";\nimport { Button } from \"../Controllers/Button\";\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst MapFuture = React.lazy(() => import('./Map'));\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction predictionRequest(userArguments) {\n    try {\n        axios.post('/python/predict', {\n            station: userArguments.boom.station,\n            flow: userArguments.boom.flow,\n            dayprop: userArguments.holiday,\n            weather: userArguments.weather.condition,\n            temperatures: [userArguments.weather.temperature.low, userArguments.weather.temperature.high],\n        })\n            .then(response => {console.log(response)})\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            datePicker: false,\n            argumentPicker: false,\n            activated: \"无\",\n            selectedTime: new Date(store.getState().timeline),\n            flowStats: true,\n            storeState: store.getState(),\n            mapState: mapsStore.getState(),\n            userArguments: {\n                holiday: undefined,\n                weather: {\n                    enabled: false,\n                    condition: '阴',\n                    temperature: {\n                        low: undefined,\n                        high: undefined\n                    }\n                },\n                boom: {\n                    enabled: false,\n                    station: undefined,\n                    flow: undefined,\n                    type: 0,\n                    failure: false,\n                }\n            }\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState({storeState: store.getState()})\n    }\n    handleOpen(modal) {\n        if (modal === 'datePicker') {this.setState({datePicker: !this.state.datePicker})}\n        if (modal === 'argumentPicker') {this.setState({argumentPicker: !this.state.argumentPicker})}\n    }\n    handleTime(e) {\n        this.setState({selectedTime: e})\n    }\n    handleChange(e, argument) {\n        let newArguments = this.state.userArguments\n        if (argument === 'holiday') {\n            newArguments.holiday = e.target.checked\n        }\n        if (argument === 'boomTick') {\n            newArguments.boom.enabled = e.target.checked\n        }\n        if (argument === 'boomType') {\n            newArguments.boom.type = e.target.value\n        }\n        if (argument === 'boom') {\n            newArguments.boom.station = this.state.stationSpectating\n            newArguments.boom.flow = e\n        }\n        if (argument === 'weatherTick') {\n            newArguments.weather.enabled = e.target.checked\n        }\n        if (argument === 'weatherTemperatureLow') {\n            newArguments.weather.temperature.low = e.target.value\n        }\n        if (argument === 'weatherTemperatureHigh') {\n            newArguments.weather.temperature.high = e.target.value\n        }\n        if (argument === 'weather') {\n            newArguments.weather.condition = e.target.value\n        }\n        if (argument === 'failure') {\n            newArguments.boom.failure = e.target.checked\n        }\n        this.setState({userArguments: newArguments})\n    }\n    handlePredictionUpdate(type) {\n        predictionRequest(this.state.userArguments, type)\n        alert('预测请求已经提交'+this.state.userArguments.boom.flow)\n        this.handleOpen('argumentPicker')\n    }\n    handleTimeUpdate() {\n        store.dispatch({\n            type: 'timeUpdate',\n            time: this.state.selectedTime\n        })\n        mapsStore.dispatch({\n            type: 'refresh'\n        })\n        this.handleOpen('datePicker')\n    }\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>线路</td>\n                    <td>{this.state.storeState.lineSpectating}</td>\n                </tr>\n                <tr>\n                    <td>断面客流</td>\n                    <td>{this.state.storeState.stationSpectating.flow}</td>\n                </tr>\n                <tr>\n                    <td>高峰时段</td>\n                    <td>9:00</td>\n                </tr>\n            </table>\n        )\n    }\n    stationArguments() {\n        if (this.state.stationSpectating === 'No') {\n            return (\n                <FormLabel component={'legend'}>没有选择站点</FormLabel>\n            )\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <FormLabel component={'legend'}>{this.state.storeState.stationSpectating.station}</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.userArguments.holiday}\n                                    onChange={(event) => this.handleChange(event, 'failure')}\n                                />\n                            }\n                            label={'故障'}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.userArguments.boom.enabled}\n                                        onChange={(event) => this.handleChange(event, 'boomTick')}\n                                    />\n                                }\n                                label={'突发客流'}\n                            />\n                            <FormGroup row>\n                                <Select\n                                    labelId={'客流类型'}\n                                    id={'客流类型'}\n                                    value={this.state.userArguments.boom.type}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(event) => this.handleChange(event, 'boomType')}\n                                    style={{width: '100%'}}\n                                >\n                                    <MenuItem value={0}>进站</MenuItem>\n                                    <MenuItem value={1}>出站</MenuItem>\n                                    <MenuItem value={2}>进站加</MenuItem>\n                                    <MenuItem value={3}>出站加</MenuItem>\n                                </Select>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Slider\n                                    defaultValue={3000}\n                                    valueLabelDisplay=\"auto\"\n                                    step={10}\n                                    marks\n                                    min={10}\n                                    max={110}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(foo, event) => this.handleChange(event, 'boom')}\n                                />\n                            </FormGroup>\n                        </FormGroup>\n\n                    </FormGroup>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"Layer\"} style={{borderRadius: this.state.rounded}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={'MapTimestamp'}>\n                    <span>预览时间线</span>\n                    <span className={this.state.storeState.timeNoGo === true ? '' : 'noGo'}>{this.state.storeState.timeNoGo === true ? '数据可用' : '该时间无数据'}</span>\n                    <br />\n                    <span className={'TimestampDate'}>\n                        {moment(this.state.storeState.timeline).format('MM-DD-YYYY HH:MM')}\n                    </span>\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch\n                        switchOptions={[\"无\", \"热力图\"]}\n                        setState={(e) => (this.setState(e))}\n                        state={this.state}\n                    />\n                    <Button onClick={() => this.handleOpen('datePicker')}>\n                        选择日期\n                    </Button>\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}数据\n                    </Button>\n                    {this.state.flowStats ? <Button onClick={() => this.handleOpen('argumentPicker')}>模拟数据变更</Button> : ''}\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.selectedTime}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"primary\"}\n                                        onClick={() => this.handleTimeUpdate(this.state.storeState.time)}\n                                    >\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"default\"}\n                                        onClick={() => this.handleOpen('datePicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.argumentPicker}>\n                        <Fade in={this.state.argumentPicker}>\n                            <Card style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        输入参数\n                                    </Typography>\n                                    <div className={'DualPanel'}>\n                                        <FormControl component={'fieldset'}>\n                                            <FormLabel component={'legend'}>该时间操作</FormLabel>\n                                            <FormGroup row>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.holiday}\n                                                            onChange={this.state}\n                                                        />\n                                                    }\n                                                    label={'放假'}\n                                                />\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weatherTick')}\n                                                        />\n                                                    }\n                                                    label={'变更天气'}\n                                                />\n                                                <FormGroup>\n                                                    <FormControl>\n                                                        <InputLabel id={'天气选择标签'}>\n                                                            天气类型\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"天气选择\"\n                                                            id=\"天气选择\"\n                                                            value={this.state.userArguments.weather.condition}\n                                                            disabled={!this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weather')}\n                                                        >\n                                                            <MenuItem value={'阴'}>阴</MenuItem>\n                                                            <MenuItem value={'晴'}>晴</MenuItem>\n                                                            <MenuItem value={'多云'}>多云</MenuItem>\n                                                            <MenuItem value={'小雨'}>小雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>中雨</MenuItem>\n                                                            <MenuItem value={'大雨'}>大雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>暴雨</MenuItem>\n                                                            <MenuItem value={'雷阵雨'}>雷阵雨</MenuItem>\n                                                        </Select>\n                                                    </FormControl>\n\n                                                    <TextField\n                                                        id={'最低温度输入'}\n                                                        label={'输入最低摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureLow')}\n                                                    />\n                                                    <TextField\n                                                        id={'最高温度输入'}\n                                                        label={'输入最高摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureHigh')}\n                                                    />\n                                                </FormGroup>\n                                            </FormGroup>\n                                        </FormControl>\n                                        <br />\n                                        <FormControl component={'fieldset'}>\n                                            {this.stationArguments()}\n                                        </FormControl>\n                                    </div>\n                                </CardContent>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"} onClick={() => this.handlePredictionUpdate('meow')}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('argumentPicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>地图正在加载……</div>}>\n                        <MapFuture\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                            mode={this.state.activated}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport { MapsBlock } from '../Widgets/MapsBlock';\nimport { mapsStore } from \"../Store\";\n\nconst body = document.body\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8),\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size, mapsState} = this.state\n        return (\n            <div className={\"OverviewGrid\"} key={'pages-index'}>\n                <div className={\"div1\"}>\n                    <Widgets.DashboardOne size={size} data={mapsState.highestFlow}>\n                        客流最高站点\n                    </Widgets.DashboardOne>\n                </div>\n                <div className={\"div2\"}>\n                    <Widgets.GreatLegends type={'straight'} name={'全网客流量指数'} value={mapsState.overallFlow}>\n                        重点客流量\n                    </Widgets.GreatLegends>\n                </div>\n                <div className={\"div3\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.highestDist4}\n                        zoom={0.1}\n                        tint={['#6099DB', '#DC73BC', '#7BDB6B', '#DBD455']}\n                    >\n                        客流高峰区域\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div4\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.lineFlow}\n                        keys={['linename', 'flow']}\n                        tint={['#6BDB9C', '#DBC760', '#5685DB', '#D9734C']}\n                    >\n                        客流高峰线路\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div5\"}>\n                    <MapsBlock\n                        port={{\"height\": size * 5, \"width\": size * 4}}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\nimport {mapsStore} from \"../Store\";\n\nconst body = document.body\n\nexport class LineHeat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            width: body.scrollWidth / 2,\n            height: body.scrollHeight / 10,\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {height, width, mapsState} = this.state\n        return(\n            <div className={\"LHGrid\"} key={'pages-line-heat'}>\n                <div className=\"div1\">\n                    <React.Suspense fallback={<div className={'Panel'}/>}>\n                        <Widgets.SimpleBars\n                            port={{height: height, width: width * 2}}\n                            data={mapsState.lineFlow}\n                            keys={['linename', 'flow']}\n                            tint={['#09B8A3', '#23EB62', '#F0438F', '#EBBF23', '#A1C0F5', '#0977B8', '#B98AF5', '#F7DF34', '#F75A43', '#65A1C2']}\n                            label={true}\n                        />\n                    </React.Suspense>\n                </div>\n                <div className=\"div2\"></div>\n                <div className=\"div3\"></div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n                <div className=\"div7\"></div>\n                <div className=\"div8\"></div>\n                <div className=\"div9\"></div>\n                <div className=\"div10\"></div>\n                <div className=\"div11\"></div>\n                <div className=\"div12\"></div>\n                <div className=\"div13\"></div>\n                <div className=\"div14\"></div>\n                <div className=\"div15\"></div>\n                <div className=\"div16\"></div>\n                <div className=\"div17\"></div>\n                <div className=\"div18\"></div>\n                <div className=\"div19\"></div>\n                <div className=\"div20\"></div>\n            </div>\n        )\n    }\n}\n\nexport class HeatTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize = () => {\n        this.setState({\n            size: body.scrollHeight / 5\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return(\n            <div className={\"THGrid\"} key={'pages-timeline-heat'}>\n                <div className=\"div1\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div2\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div3\">\n                    <Widgets.AreaChartTrends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\n\nconst body = document.body\n\nclass PassengerAnalytics extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n    render() {\n        const {size} = this.state\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                            <Widgets.SimpleBars\n                                port={{\"height\": size, \"width\": size * 2}}\n                                tint={[\"#2196f3\", \"#8bc34a\"]}\n                                data={{u:90, p:5}}\n                            >\n                                Simple Bars\n                            </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div2\"></div>\n                    <div className=\"div3\"></div>\n                    <div className=\"div4\"></div>\n                    <div className=\"div5\"></div>\n                    <div className=\"div6\"></div>\n                    <div className=\"div7\"></div>\n                    <div className=\"div8\"></div>\n                    <div className=\"div9\"></div>\n                    <div className=\"div10\"></div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from \"react\";\nimport \"./style.css\"\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (this.props.type !== undefined) ? this.props.type : \"text\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={'InputFunction'}>\n                <label>\n                    {this.props.children}\n                </label>\n                <input className={'coilsInput'} type={this.state.type} onChange={(event => this.props.handler(event))}/>\n            </div>\n        )\n    }\n}\n\nexport default Input","import React from \"react\";\nimport { Input, Button } from '../Controllers';\nimport { FormGroup, Slider, FormLabel } from '@material-ui/core'\nimport axios from \"axios\";\nimport './style.css';\nimport store, { setExpiration } from \"../Store\";\nimport { ThemeSwitch } from \"../Controllers/Switch\";\n\nfunction loginRequest(username, password) {\n    try {\n        axios.post('/api/log', {\n            'username': username,\n            'password': password\n        }).then(function (response) {\n            console.log(response.data)\n            alert(response.data.msg)\n            if (response.data.code === 200) {\n                store.dispatch({\n                    type: 'login',\n                    loginState: true,\n                    session: response.data\n                })\n            }\n        })\n    }\n    catch (error) {\n        alert('网络连接出现了一些问题')\n        console.error(error);\n    }\n}\n\nclass CertForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: 1,\n        }\n    }\n    CertChange(type) {\n        let feedbackInfo\n        if (type === 'logout') {\n            feedbackInfo = '注销凭据完成'\n            const action = {\n                type: 'certMan',\n                logout: true\n            }\n            store.dispatch(action)\n        }\n        if (type === 'cache') {\n            feedbackInfo = '保存凭据' + this.state.duration +'天'\n            setExpiration(this.state.duration)\n        }\n        alert(feedbackInfo)\n    }\n    handleSlider = (event, newValue) => {\n        this.setState({duration: newValue})\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <ThemeSwitch/>\n                <form\n                    style={{marginTop: '2em'}}\n                    onSubmit={() => this.CertChange('cache', this.state.duration)}\n                >\n                    <FormGroup>\n                        <FormLabel style={{color: 'var(--ThemeColor)'}} component={'legend'}>保存凭据时长（天）</FormLabel>\n                        <div style={{margin: '0 auto', width: 'calc(100% - 20px)'}}>\n                            <Slider\n                                defaultValue={1}\n                                valueLabelDisplay=\"auto\"\n                                step={5}\n                                marks\n                                min={1}\n                                max={31}\n                                onChange={this.handleSlider}\n                            />\n                        </div>\n                    </FormGroup>\n                    <Button type={'submit'}>\n                        保存凭据\n                    </Button>\n                    <br />\n                    <div style={{marginTop: '20px'}}>\n                        <Button onClick={() => this.CertChange('logout')}>\n                            注销凭据\n                        </Button>\n                    </div>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState(),\n            username: '',\n            password: ''\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n    handleLogin(event) {\n        event.preventDefault()\n        loginRequest(this.state.username, this.state.password)\n    }\n    handleForm(event, type) {\n        if (type === 'username') {\n            this.setState({username: event.target.value})\n        }\n        if (type === 'password') {\n            this.setState({password: event.target.value})\n        }\n    }\n\n    render() {\n        let FormSheet, hello\n        const LoginForm = [\n            <form onSubmit={(e) => this.handleLogin(e)}>\n                <div className={\"AuthForm\"}>\n                    <div>\n                        <Input handler={(e) => {this.handleForm(e, 'username')}}>\n                            用户名称\n                        </Input>\n                        <Input type={\"password\"} handler={(e) => {this.handleForm(e, 'password')}}>\n                            密码\n                        </Input>\n                    </div>\n                    <div className={\"Button\"}>\n                        <Button type={\"submit\"}>\n                            好\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        ]\n\n        if (this.state.store.loginState) {\n            FormSheet = [<CertForm/>]\n            hello = \"认证管理\"\n        }\n        else {\n            FormSheet = LoginForm\n            hello = \"认证\"\n        }\n\n        return (\n            <React.Fragment>\n                <div id={'Amaze'}/>\n                <div id={'ActualCard'}>\n                    <h1>\n                        {hello}\n                    </h1>\n                </div>\n                <div id={'Maze'}/>\n                    <section className={\"AuthCard\"}>\n                        {FormSheet}\n                    </section>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport Overview from \"./Overview\";\nimport { LineHeat, HeatTimeline } from \"./LineHeat\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport Login from \"./Authenticate\";\nimport './index.css';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, { exposedMethods } from \"./Store\";\n\nconst root = document.documentElement\n\nfunction setTheme() {\n    if (store.getState().theme === 'light') {\n        root.style.setProperty('--themeTable', '#E3E3E3')\n        root.style.setProperty('--themeBorder', 'none')\n        root.style.setProperty('--themeColor', '#443')\n        root.style.setProperty('--themeHover', '#220')\n        root.style.setProperty('--themeActive', '#220')\n        root.style.setProperty('--themeLayer', 'rgba(250, 250, 250, 0.8)')\n        root.style.setProperty('--themeFilter', 'screen')\n        root.style.setProperty('--themeDarkFilter', 'brightness(1.17)')\n        root.style.setProperty('--themePure0', 'rgba(255, 255, 255, 1)')\n        root.style.setProperty('--themePure1', 'rgba(255, 255, 255, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(80, 80, 80, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#FFF')\n        root.style.setProperty('--controlBlur', '#553')\n        root.style.setProperty('--dockBorderSize', '1px')\n        root.style.setProperty('--actualFilter', 'rgba(255, 255, 255, .8)')\n    }\n    if (store.getState().theme === 'dark') {\n        root.style.setProperty('--themeTable', '#171717')\n        root.style.setProperty('--themeBorder', '0 0 1.5px #EEE')\n        root.style.setProperty('--themeColor', '#EEE')\n        root.style.setProperty('--themeHover', '#AAB')\n        root.style.setProperty('--themeActive', '#FFF')\n        root.style.setProperty('--themeLayer', 'rgba(53, 53, 53, 0.8)')\n        root.style.setProperty('--themeFilter', 'multiply')\n        root.style.setProperty('--themeDarkFilter', 'brightness(.65)')\n        root.style.setProperty('--themePure0', 'rgba(64, 64, 64, 1)')\n        root.style.setProperty('--themePure1', 'rgba(0, 0, 0, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(255, 255, 255, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#535353')\n        root.style.setProperty('--controlBlur', '#BBC')\n        root.style.setProperty('--dockBorderSize', '2px')\n        root.style.setProperty('--actualFilter', 'rgba(0, 0, 25, .15)')\n\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {storeState: store.getState()}\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){this.setState({storeState: store.getState()})}\n\n    render() {\n        setTheme()\n        let pagesList = []\n        if (this.state.storeState.loginState === true) {\n            pagesList.push(\n                <Switch>\n                    <Route exact path={\"./\"}>\n                        <Redirect to={\"Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"} component={AnimationApp}/>\n                </Switch>\n            )\n        }\n        else {\n            pagesList.push(\n                <Switch>\n                    <Route path={\"*\"}>\n                        <Login />\n                    </Route>\n                </Switch>\n            )\n        }\n        return (\n            <PersistGate store={store} persistor={exposedMethods}>\n                <Router>\n                    {pagesList}\n                </Router>\n            </PersistGate>\n        )\n    }\n}\n\nclass AnimationApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            handling: 0,\n            redirect: undefined\n        }\n    }\n    wary(e) {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        this.setState({redirect: e})\n        this.setState({redirect: undefined})\n    }\n\n    componentDidMount() {\n        let done = () => {\n            this.setState({handling: 0})\n        }\n\n        this.props.history.listen(location => {\n            if (this.props.location.pathname !== location.pathname) {\n                setTimeout(done, 500, done)\n            }\n        })\n    }\n    render() {\n        let redirect = {\n            state: this.state.redirect,\n            handling: this.state.handling,\n            set: (e) => this.wary(e),\n            done: () => this.done()\n        }\n        function handleShortcutKey(key) {\n            const destination = ['Overview', 'LineHeat', 'HeatTimeline', 'PassengerAnalytics', 'Authenticate']\n            redirect.set(<Redirect to={destination[key - 1]}/>)\n        }\n        // keyboard shortcuts\n        window.addEventListener(\"keydown\", function (e) {\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (e.key !== undefined) {\n                if (e.key === '1') {handleShortcutKey(1)}\n                if (e.key === '2') {handleShortcutKey(2)}\n                if (e.key === '3') {handleShortcutKey(3)}\n                if (e.key === '4') {handleShortcutKey(4)}\n                if (e.key === 'L' || e.key === 'l') {handleShortcutKey(5)}\n            }\n            else if (e.code !== undefined) {\n                if (e.code === 'Digit1') {handleShortcutKey(1)}\n                if (e.code === 'Digit2') {handleShortcutKey(2)}\n                if (e.code === 'Digit3') {handleShortcutKey(3)}\n                if (e.code === 'Digit4') {handleShortcutKey(4)}\n                if (e.code === 'KeyL') {handleShortcutKey(5)}\n            }\n        })\n\n        return (\n            <React.Fragment>\n                {this.state.redirect}\n                <div className=\"Dock\">\n                    <NavLink key={\"Overview\"} to={\"Overview\"} activeClassName={\"active\"} exact>\n                        <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                    </NavLink>\n                    <NavLink key={\"LineHeat\"} to={\"LineHeat\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>线路分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"HeatTimeline\"} to={\"HeatTimeline\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>时段分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"PassengerAnalytics\"} to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>客流分析<span>3</span></button>\n                    </NavLink>\n                    <NavLink key={\"Authenticate\"} to={\"Authenticate\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>认证与设置<span>L</span></button>\n                    </NavLink>\n                </div>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={this.props.location}\n                        classNames={\"fade\"}\n                        timeout={250}\n                    >\n                        <Switch>\n                            <Route path={`*/Overview`} component={Overview}/>\n                            <Route path={`*/LineHeat`} component={LineHeat}/>\n                            <Route path={`*/HeatTimeline`} component={HeatTimeline}/>\n                            <Route path={`*/PassengerAnalytics`} component={PassengerAnalytics}/>\n                            <Route path={`*/Authenticate`} component={Login}/>\n                            <Route path={`*`}>\n                                <Redirect to={\"Overview\"}/>\n                            </Route>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}