{"version":3,"sources":["Store/methods.js","Store/mapsUpdater.js","Store/index.js","Controllers/Switch.js","Widgets/widgets.js","Controllers/Button.js","Widgets/MapsBlock.js","Overview/index.js","LineHeat/index.js","PassengerAnalytics/index.js","Controllers/Input.js","Authenticate/index.js","App.js","reportWebVitals.js","index.js"],"names":["defaultState","active","theme","loginState","sessionData","timeUpToDate","now","Date","timeline","timePeriod","timeNoGo","lineSpectating","stationSpectating","station","flow","flowSpectating","peakSpectating","dashboardData","Store","state","action","newState","JSON","parse","stringify","type","session","logout","line","hoverType","hoverID","time","value","defaultValue","initiated","stationData","pathData","heatData","newMapState","require","refreshDashboard","store","getState","undefined","data","expires","setExpiration","schoolDays","persistConfig","key","storage","CookieStorage","Cookies","expiration","default","persistedMethods","persistReducer","methods","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","exposedMethods","persistStore","mapsPersistConfig","mapsMethods","mapsUpdater","mapsStore","mapsExposedMethods","date","year","getFullYear","toString","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","console","log","axios","post","then","response","result","msg","dispatch","catch","error","MapSwitch","props","switchOptions","this","setState","allOptions","optionsController","index","forEach","perOption","acClass","activated","push","id","onClick","className","enumOptions","React","Component","ThemeSwitch","themeNames","transformToCentre","position","left","top","transform","defaultRoundCorner","makeAvailable","thing","Fragment","linesConstructor","dataArray","tintArray","tooltip","lines","tooltipElement","converted","drawn","map","lineIndex","values","y","x","partPoint","name","Object","assign","dot","r","dataKey","stroke","strokeWidth","width","height","style","barConstructor","keys","barContent","fill","Dashboard","theKeys","zoom","e","nameLabel","size","spacing","tint","frame","borderRadius","children","slice","innerRadius","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","uv","pv","amt","port","SimpleBars","propData","sampleData","mockData","warn","propTintArray","AreaChartTrends","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","fillOpacity","GreatLegends","getFromData","MNButtonStyle","backgroundColor","color","Button","disabled","variant","MapFuture","lazy","MapsBlock","rounded","datePicker","argumentPicker","selectedTime","flowStats","storeState","mapState","userArguments","holiday","weather","enabled","condition","temperature","low","high","boom","failure","storeChange","bind","subscribe","modal","argument","newArguments","target","checked","dayprop","temperatures","predictionRequest","alert","handleOpen","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","onChange","event","handleChange","label","row","Select","labelId","MenuItem","Slider","valueLabelDisplay","step","marks","min","max","foo","opacity","userSelect","cursor","getStats","moment","format","triggerStats","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","margin","utils","MomentUtils","handleTime","CardActions","handleTimeUpdate","FormControl","InputLabel","TextField","marginTop","InputLabelProps","shrink","stationArguments","handlePredictionUpdate","fallback","mode","body","document","Index","calculateSize","Math","scrollHeight","scrollWidth","mapsState","forceUpdate","addEventListener","setTimeout","removeEventListener","to","highestFlow","overallFlow","highestDist4","lineFlow","LineHeat","documentElement","clientHeight","HeatTimeline","PassengerAnalytics","Input","handler","CertForm","handleSlider","newValue","duration","feedbackInfo","onSubmit","CertChange","Login","username","password","preventDefault","code","loginRequest","FormSheet","hello","LoginForm","handleLogin","handleForm","root","App","setProperty","pagesList","exact","path","AnimationApp","persistor","handleShortcutKey","location","replace","defaultPrevented","activeClassName","TransitionGroup","CSSTransition","classNames","timeout","Overview","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.25be3ed1.chunk.js","sourcesContent":["const defaultState = {\n    active: \"dashboard\",\n    theme: 'light',\n    loginState: false,\n    sessionData: '',\n    timeUpToDate: true,\n    now: new Date('June 1, 2020 22:30:00'),\n    timeline: new Date('June 1, 2020 22:30:00'),\n    timePeriod: '实时',\n    timeNoGo: '数据加载中',\n    lineSpectating: 'No',\n    stationSpectating: {station: '没有选中站点', flow: 0},\n    flowSpectating: -1,\n    peakSpectating: -1,\n    dashboardData: {}\n}\nconst Store = (state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'login' && action.loginState) {\n        newState.loginState = true\n        newState.sessionData = action.session\n        return newState\n    }\n    if (action.type === 'certMan') {\n        if (action.logout) {\n            return defaultState\n        }\n    }\n    if (action.type === 'hoverUpdate') {\n        newState.lineSpectating = action.line\n        if (action.hoverType === 'station') {\n            newState.stationSpectating.station = action.hoverID\n            newState.stationSpectating.flow = action.flow\n        }\n        return newState\n    }\n    if (action.type === 'switchTheme') {\n        newState.theme = 'light'\n        if (state.theme === 'light') {\n            newState.theme = 'dark'\n        }\n        return newState\n    }\n    if (action.type === 'timeUpdate') {\n        if (action.time > state.now) {\n            newState.timePeriod = '预测'\n        }\n        else if (action.time < state.now) {\n            newState.timePeriod = '历史'\n        }\n        else if (action.now) {\n            newState.timePeriod = '实时'\n        }\n        newState.timeline = action.time\n        return newState\n    }\n    if (action.type === 'noGo') {\n        newState.timeNoGo = action.value === '成功'\n        return newState\n    }\n    return state\n}\nexport default Store","import store, {refreshDashboard} from \"./index\";\n\nconst defaultValue = {\n    initiated: 0,\n    stationData: {},\n    pathData: {},\n    heatData: {},\n    dashboardData: {}\n}\n\nconst Store = (state = defaultValue, action) => {\n    let newMapState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'refresh') {\n        if (!newMapState.initiated) {\n            newMapState.dashboardData = require('../stationaryPlaceholder/dashboard.json')\n            newMapState.stationData = require('../stationaryPlaceholder/stations.json')\n            newMapState.pathData = require('../stationaryPlaceholder/paths.json')\n        }\n        refreshDashboard(store.getState().timeline)\n        return newMapState\n    }\n    if (action.type === 'push') {\n        if (action.stationData !== undefined) {newMapState.stationData = action.stationData}\n        if (action.pathData !== undefined) {newMapState.pathData = action.pathData}\n        if (action.heatData !== undefined) {newMapState.heatData = action.heatData}\n        return newMapState\n    }\n    if (action.type === 'loadDashboard') {\n        newMapState.dashboardData = action.data\n        return newMapState\n    }\n    return state\n}\nexport default Store","import { createStore } from \"redux\";\nimport methods from './methods';\nimport mapsUpdater from './mapsUpdater';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { CookieStorage } from 'redux-persist-cookie-storage';\nimport storage from 'redux-persist/lib/storage';\nimport Cookies from 'cookies-js';\nimport axios from \"axios\";\n\nlet expires = 22 * 86400\n\nexport function setExpiration(schoolDays)\n{\n    if (schoolDays === undefined) {\n        schoolDays = 22\n    }\n    expires = schoolDays * 86400;\n}\n\n//组件数据和会话\nconst persistConfig = {\n    key: 'root',\n    storage: new CookieStorage(Cookies, {expiration:\n        {default: expires}\n    })\n}\nconst persistedMethods = persistReducer(persistConfig, methods)\nlet store = createStore(persistedMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport let exposedMethods = persistStore(store)\nexport default store\n\n//地图存储\nconst mapsPersistConfig = {\n    key: 'maps',\n    storage: storage\n}\nconst mapsMethods = persistReducer(mapsPersistConfig, mapsUpdater)\nexport let mapsStore = createStore(mapsMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport let mapsExposedMethods = persistStore(mapsStore)\n\nexport function searchObject(data, searchKey, value, requiredKey) {\n    let result\n    try {\n        data.forEach(function (theObject) {\n            if (theObject[searchKey] === value) {\n                result = theObject[requiredKey]\n            }\n        })\n    }\n    catch(error)\n    {\n        console.error(error)\n        return result\n    }\n\n    return result\n}\nexport function refreshDashboard(timeline) {\n    if (timeline === undefined) {\n        console.log('undefined date')\n        return\n    }\n    const date = new Date(timeline)\n    const data = {\n        year: date.getFullYear().toString(),\n        month: (date.getMonth() + 1).toString(),\n        day: date.getDate().toString(),\n        hour: date.getHours().toString(),\n        minute: date.getMinutes().toString()\n    }\n    console.log('Time update request fired')\n    axios.post('/api/time/json', data)\n        .then(response => {\n            console.log(response.data.result.msg)\n            mapsStore.dispatch({\n                type: 'loadDashboard',\n                data: response.data\n            })\n            store.dispatch({\n                type: 'noGo',\n                value: response.data.result.msg\n            })\n        })\n        .catch(error => {\n            console.error(error)\n        })\n}\nexport function moodyTimeDifference(givenTime) {\n    const moodyHour = givenTime.getHours() + (givenTime.getMinutes() > 30 ? 1 : 0)\n    const moodyMin = givenTime.getMinutes() > 15 && givenTime.getMinutes() <= 45 ? 30 : 0\n    return givenTime.getMonth()+1 + ':' + givenTime.getDate() + ':' + moodyHour + ':' + moodyMin\n}","import React from \"react\";\nimport store from \"../Store\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        let index = 0\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport class ThemeSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState()\n        }\n    }\n    themeNames = ['深色', '浅色']\n    enumOptions() {\n        let optionsController = []\n        let index = 0\n        this.themeNames.forEach(\n            function (perOption) {\n                const {theme} = store.getState()\n                const themeOptions = ['dark', 'light']\n                let acClass = \"SwitchTick\"\n                if (theme === themeOptions[index]) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => {\n                            store.dispatch({\n                                type: 'switchTheme'\n                            })\n                        }}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n    dispatchTheme(value) {\n        store.dispatch({\n            type: 'switchTheme',\n            theme: value\n        })\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions()}\n            </div>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport './style.css';\nimport {\n    AreaChart, Area,\n    RadialBarChart,\n    RadialBar,\n    PolarAngleAxis,\n    Legend, Tooltip,\n    Cell,\n    LineChart,\n    CartesianGrid,\n    XAxis,\n    YAxis, Line, BarChart, Bar\n} from \"recharts\";\nimport '../Controllers/Switch';\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\nconst defaultRoundCorner = 20;\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\nfunction makeAvailable(thing) {\n    if (thing !== undefined) {return thing}\n    return (<React.Fragment/>)\n}\nfunction constructData(propData, sampleData) {\n    if (propData !== undefined) {\n        if (propData == null) {\n            console.warn(\"Null data received\")\n        }\n        return propData\n    } else return sampleData\n}\nfunction linesConstructor(dataArray, tintArray, state, tooltip) {\n    const lines = dataArray.lines\n    const tooltipElement = tooltip ? [<Tooltip/>] : []\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{r: 3}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={2}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend/>\n            {tooltipElement}\n            {drawn}\n        </LineChart>\n    )\n}\nfunction barConstructor(dataArray, tintArray, state) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    const barContent = keys.map(function (key, index) {\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n            />\n        )\n    })\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    render() {\n        let data = [{}, {}, {}, {}]\n        const theKeys = this.props.keys === undefined ? ['name', 'value'] : this.props.keys\n        const zoom = this.props.zoom === undefined ? 1 : this.props.zoom\n        try {\n            this.props.data.map(function wow(value, index) {\n                data[index] = {'name': value[theKeys[0]], 'value': value[theKeys[1]] * zoom}\n                return true\n            }, theKeys)\n        }\n        catch (e) {}\n        const size = this.props.size * 2\n        const spacing = size / 8\n        const tint = this.props.tint === undefined ? [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"] : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner}\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(0, 1)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(1, 2)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(2, 3)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(3, 4)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    greatLegend(value) {\n        return (<span>{value}</span>)\n    }\n\n    render() {\n        const tint = \"#137A7F\"\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner, align: \"center\"}\n        const size = this.props.size\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[this.props.data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {borderRadius: defaultRoundCorner}\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={this.state.data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={2} dot={{r: 3}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={2} dot={{r: 3}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = {\n            xAxisMeasurement: \"XExample\",\n            lines: [\n                {\n                    name: 'One',\n                    values: [\n                        4000,\n                        5000,\n                        3500,\n                        5000\n                    ]\n                },\n                {\n                    name: \"Two\",\n                    values: [\n                        7500,\n                        5560,\n                        2280,\n                        5600\n                    ]\n                },\n            ]\n        }\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data,\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: defaultRoundCorner\n        }\n        const tint = [\"#EA0\", \"#08A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(this.state.data, tint, port, this.props.tooltip)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = constructData(this.props.data, {\"uv\": 900, \"pv\": 609})\n        this.state = {\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const tint = setTintArray(this.props.tint)\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": defaultRoundCorner\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([this.state.data], tint, port)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class AreaChartTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                \"name\": \"Page A\",\n                \"uv\": 4000,\n                \"pv\": 2400,\n                \"amt\": 2400\n            },\n            {\n                \"name\": \"Page B\",\n                \"uv\": 3000,\n                \"pv\": 1398,\n                \"amt\": 2210\n            },\n            {\n                \"name\": \"Page C\",\n                \"uv\": 2000,\n                \"pv\": 9800,\n                \"amt\": 2290\n            },\n            {\n                \"name\": \"Page D\",\n                \"uv\": 2780,\n                \"pv\": 3908,\n                \"amt\": 2000\n            },\n            {\n                \"name\": \"Page E\",\n                \"uv\": 1890,\n                \"pv\": 4800,\n                \"amt\": 2181\n            },\n            {\n                \"name\": \"Page F\",\n                \"uv\": 2390,\n                \"pv\": 3800,\n                \"amt\": 2500\n            },\n            {\n                \"name\": \"Page G\",\n                \"uv\": 3490,\n                \"pv\": 4300,\n                \"amt\": 2100\n            }\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: defaultRoundCorner\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <AreaChart\n                    width={port.width}\n                    height={port.height}\n                    data={this.state.data}\n                    style={transformToCentre}\n                >\n                    <defs>\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                    <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                </AreaChart>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class GreatLegends extends React.Component {\n    getFromData(data, index, key) {\n        try {return data[index][key]}\n        catch (error) {}\n        return undefined\n    }\n    render() {\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": defaultRoundCorner\n        }\n        if (this.props.type === 'array')\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <div className={'GLContainer'}>\n                    <div className={'GLName'}>\n                        {this.getFromData(this.props.data, this.props.index, this.props.keys[0])}\n                    </div>\n                    <div className={'GLValue'}>\n                        {this.getFromData(this.props.data, this.props.index, this.props.keys[1])}\n                    </div>\n                </div>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n        if (this.props.type === 'straight') {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div className={'GLContainer'}>\n                        <div className=\"GLName\">\n                            {this.props.name}\n                        </div>\n                        <div className=\"GLValue\">\n                            {this.props.value}\n                        </div>\n                    </div>\n                    <label className={'widgetLabel'}>\n                        {makeAvailable(this.props.children)}\n                    </label>\n                </div>\n            )\n        }\n        return (<React.Fragment/>)\n    }\n}","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: 'var(--themeButtonBackground)',\n    color: 'var(--themeColor)',\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n            type: (this.props.type !== undefined) ? this.props.type : \"\",\n            disabled: (this.props.disabled === true),\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick} type={this.state.type} disabled={this.state.disabled}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Suspense } from \"react\";\nimport store, { mapsStore } from \"../Store\";\nimport {\n    Button as MaterialButton,\n    Card, CardActions, CardContent, Typography,\n    FormControl, FormControlLabel, FormGroup, FormLabel,\n    Fade, Modal,\n    Checkbox, Slider, Select, MenuItem, TextField, InputLabel,\n} from \"@material-ui/core\";\nimport MapSwitch from \"../Controllers/Switch\";\nimport { Button } from \"../Controllers/Button\";\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst MapFuture = React.lazy(() => import('./Map'));\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction predictionRequest(userArguments) {\n    try {\n        axios.post('/python/predict', {\n            station: userArguments.boom.station,\n            flow: userArguments.boom.flow,\n            dayprop: userArguments.holiday,\n            weather: userArguments.weather.condition,\n            temperatures: [userArguments.weather.temperature.low, userArguments.weather.temperature.high],\n        })\n            .then(response => {console.log(response)})\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            datePicker: false,\n            argumentPicker: false,\n            activated: \"无\",\n            selectedTime: new Date(store.getState().timeline),\n            flowStats: true,\n            storeState: store.getState(),\n            mapState: mapsStore.getState(),\n            userArguments: {\n                holiday: undefined,\n                weather: {\n                    enabled: false,\n                    condition: '阴',\n                    temperature: {\n                        low: undefined,\n                        high: undefined\n                    }\n                },\n                boom: {\n                    enabled: false,\n                    station: undefined,\n                    flow: undefined,\n                    type: 0,\n                    failure: false,\n                }\n            }\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState({storeState: store.getState()})\n    }\n    handleOpen(modal) {\n        if (modal === 'datePicker') {this.setState({datePicker: !this.state.datePicker})}\n        if (modal === 'argumentPicker') {this.setState({argumentPicker: !this.state.argumentPicker})}\n    }\n    handleTime(e) {\n        this.setState({selectedTime: e})\n    }\n    handleChange(e, argument) {\n        let newArguments = this.state.userArguments\n        if (argument === 'holiday') {\n            newArguments.holiday = e.target.checked\n        }\n        if (argument === 'boomTick') {\n            newArguments.boom.enabled = e.target.checked\n        }\n        if (argument === 'boomType') {\n            newArguments.boom.type = e.target.value\n        }\n        if (argument === 'boom') {\n            newArguments.boom.station = this.state.stationSpectating\n            newArguments.boom.flow = e\n        }\n        if (argument === 'weatherTick') {\n            newArguments.weather.enabled = e.target.checked\n        }\n        if (argument === 'weatherTemperatureLow') {\n            newArguments.weather.temperature.low = e.target.value\n        }\n        if (argument === 'weatherTemperatureHigh') {\n            newArguments.weather.temperature.high = e.target.value\n        }\n        if (argument === 'weather') {\n            newArguments.weather.condition = e.target.value\n        }\n        if (argument === 'failure') {\n            newArguments.boom.failure = e.target.checked\n        }\n        this.setState({userArguments: newArguments})\n    }\n    handlePredictionUpdate(type) {\n        predictionRequest(this.state.userArguments, type)\n        alert('预测请求已经提交'+this.state.userArguments.boom.flow)\n        this.handleOpen('argumentPicker')\n    }\n    handleTimeUpdate() {\n        store.dispatch({\n            type: 'timeUpdate',\n            time: this.state.selectedTime\n        })\n        mapsStore.dispatch({\n            type: 'refresh'\n        })\n        this.handleOpen('datePicker')\n    }\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>线路</td>\n                    <td>{this.state.storeState.lineSpectating}</td>\n                </tr>\n                <tr>\n                    <td>断面客流</td>\n                    <td>{this.state.storeState.stationSpectating.flow}</td>\n                </tr>\n                <tr>\n                    <td>高峰时段</td>\n                    <td>9:00</td>\n                </tr>\n            </table>\n        )\n    }\n    stationArguments() {\n        if (this.state.stationSpectating === 'No') {\n            return (\n                <FormLabel component={'legend'}>没有选择站点</FormLabel>\n            )\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <FormLabel component={'legend'}>{this.state.storeState.stationSpectating.station}</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.userArguments.holiday}\n                                    onChange={(event) => this.handleChange(event, 'failure')}\n                                />\n                            }\n                            label={'故障'}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.userArguments.boom.enabled}\n                                        onChange={(event) => this.handleChange(event, 'boomTick')}\n                                    />\n                                }\n                                label={'突发客流'}\n                            />\n                            <FormGroup row>\n                                <Select\n                                    labelId={'客流类型'}\n                                    id={'客流类型'}\n                                    value={this.state.userArguments.boom.type}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(event) => this.handleChange(event, 'boomType')}\n                                    style={{width: '100%'}}\n                                >\n                                    <MenuItem value={0}>进站</MenuItem>\n                                    <MenuItem value={1}>出站</MenuItem>\n                                    <MenuItem value={2}>进站加</MenuItem>\n                                    <MenuItem value={3}>出站加</MenuItem>\n                                </Select>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Slider\n                                    defaultValue={3000}\n                                    valueLabelDisplay=\"auto\"\n                                    step={10}\n                                    marks\n                                    min={10}\n                                    max={110}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(foo, event) => this.handleChange(event, 'boom')}\n                                />\n                            </FormGroup>\n                        </FormGroup>\n\n                    </FormGroup>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"Layer\"} style={{borderRadius: this.state.rounded}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={'MapTimestamp'}>\n                    <span>预览时间线</span>\n                    <span className={this.state.storeState.timeNoGo === true ? '' : 'noGo'}>{this.state.storeState.timeNoGo === true ? '数据可用' : '该时间无数据'}</span>\n                    {moment(this.state.storeState.timeline).format('MM-DD-YYYY HH:MM')}\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch\n                        switchOptions={[\"无\", \"热力图\"]}\n                        setState={(e) => (this.setState(e))}\n                        state={this.state}\n                    />\n                    <Button onClick={() => this.handleOpen('datePicker')}>\n                        选择日期\n                    </Button>\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}数据\n                    </Button>\n                    {this.state.flowStats ? <Button onClick={() => this.handleOpen('argumentPicker')}>模拟数据变更</Button> : ''}\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.selectedTime}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"primary\"}\n                                        onClick={() => this.handleTimeUpdate(this.state.storeState.time)}\n                                    >\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"default\"}\n                                        onClick={() => this.handleOpen('datePicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.argumentPicker}>\n                        <Fade in={this.state.argumentPicker}>\n                            <Card style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        输入参数\n                                    </Typography>\n                                    <div className={'DualPanel'}>\n                                        <FormControl component={'fieldset'}>\n                                            <FormLabel component={'legend'}>该时间操作</FormLabel>\n                                            <FormGroup row>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.holiday}\n                                                            onChange={this.state}\n                                                        />\n                                                    }\n                                                    label={'放假'}\n                                                />\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weatherTick')}\n                                                        />\n                                                    }\n                                                    label={'变更天气'}\n                                                />\n                                                <FormGroup>\n                                                    <FormControl>\n                                                        <InputLabel id={'天气选择标签'}>\n                                                            天气类型\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"天气选择\"\n                                                            id=\"天气选择\"\n                                                            value={this.state.userArguments.weather.condition}\n                                                            disabled={!this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weather')}\n                                                        >\n                                                            <MenuItem value={'阴'}>阴</MenuItem>\n                                                            <MenuItem value={'晴'}>晴</MenuItem>\n                                                            <MenuItem value={'多云'}>多云</MenuItem>\n                                                            <MenuItem value={'小雨'}>小雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>中雨</MenuItem>\n                                                            <MenuItem value={'大雨'}>大雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>暴雨</MenuItem>\n                                                            <MenuItem value={'雷阵雨'}>雷阵雨</MenuItem>\n                                                        </Select>\n                                                    </FormControl>\n\n                                                    <TextField\n                                                        id={'最低温度输入'}\n                                                        label={'输入最低摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureLow')}\n                                                    />\n                                                    <TextField\n                                                        id={'最高温度输入'}\n                                                        label={'输入最高摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureHigh')}\n                                                    />\n                                                </FormGroup>\n                                            </FormGroup>\n                                        </FormControl>\n                                        <br />\n                                        <FormControl component={'fieldset'}>\n                                            {this.stationArguments()}\n                                        </FormControl>\n                                    </div>\n                                </CardContent>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"} onClick={() => this.handlePredictionUpdate('meow')}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('argumentPicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>Maps loading...</div>}>\n                        <MapFuture\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                            mode={this.state.activated}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport { MapsBlock } from '../Widgets/MapsBlock';\nimport { mapsStore } from \"../Store\";\nimport {Redirect} from \"react-router-dom\";\n\nconst body = document.body\n\nclass Index extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8),\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n            this.forceUpdate()\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        setTimeout(() => {mapsStore.dispatch({type: 'refresh'})}, 500)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size, mapsState} = this.state\n        if (mapsState === undefined) {\n            setTimeout(function () {\n                return (<Redirect to={'.'}/>)\n            },1000)\n        }\n        return (\n            <div className={\"OverviewGrid\"}>\n                <div className={\"div1\"}>\n                    <Widgets.DashboardOne size={size} data={mapsState.highestFlow}>\n                        客流最高站点\n                    </Widgets.DashboardOne>\n                </div>\n                <div className={\"div2\"}>\n                    <Widgets.GreatLegends type={'straight'} name={'全网客流量指数'} value={mapsState.overallFlow}>\n                        重点客流量\n                    </Widgets.GreatLegends>\n                </div>\n                <div className={\"div3\"}>\n                    <Widgets.Dashboard size={size} data={mapsState.highestDist4} zoom={0.1}>\n                        客流高峰区域\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div4\"}>\n                    <Widgets.Dashboard size={size} data={mapsState.lineFlow} keys={['linename', 'flow']}>\n                        客流高峰线路\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div5\"}>\n                    <MapsBlock\n                        port={{\"height\": size * 5, \"width\": size * 4}}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\n\nconst body = document.body\n\nexport class LineHeat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize() {\n        this.setState({\n            size: Math.min(document.documentElement.clientHeight / 8, body.scrollWidth / 8)\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        return(\n            <div className={\"LHGrid\"}>\n                <div className=\"div1\"></div>\n                <div className=\"div2\"></div>\n                <div className=\"div3\"></div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n                <div className=\"div7\"></div>\n                <div className=\"div8\"></div>\n                <div className=\"div9\"></div>\n                <div className=\"div10\"></div>\n                <div className=\"div11\"></div>\n                <div className=\"div12\"></div>\n                <div className=\"div13\"></div>\n                <div className=\"div14\"></div>\n                <div className=\"div15\"></div>\n                <div className=\"div16\"></div>\n                <div className=\"div17\"></div>\n                <div className=\"div18\"></div>\n                <div className=\"div19\"></div>\n                <div className=\"div20\"></div>\n            </div>\n        )\n    }\n}\n\nexport class HeatTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize = () => {\n        this.setState({\n            size: body.scrollHeight / 5\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return(\n            <div className={\"THGrid\"}>\n                <div className=\"div1\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div2\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div3\">\n                    <Widgets.AreaChartTrends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\n\nconst body = document.body\n\nclass PassengerAnalytics extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n    render() {\n        const {size} = this.state\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                            <Widgets.SimpleBars\n                                port={{\"height\": size, \"width\": size * 2}}\n                                tint={[\"#2196f3\", \"#8bc34a\"]}\n                            >\n                                Simple Bars\n                            </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div2\"></div>\n                    <div className=\"div3\"></div>\n                    <div className=\"div4\"></div>\n                    <div className=\"div5\"></div>\n                    <div className=\"div6\"></div>\n                    <div className=\"div7\"></div>\n                    <div className=\"div8\"></div>\n                    <div className=\"div9\"></div>\n                    <div className=\"div10\"></div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from \"react\";\nimport \"./style.css\"\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (this.props.type !== undefined) ? this.props.type : \"text\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={'InputFunction'}>\n                <label>\n                    {this.props.children}\n                </label>\n                <input className={'coilsInput'} type={this.state.type} onChange={(event => this.props.handler(event))}/>\n            </div>\n        )\n    }\n}\n\nexport default Input","import React from \"react\";\nimport { Input, Button } from '../Controllers';\nimport { FormGroup, Slider, FormLabel } from '@material-ui/core'\nimport axios from \"axios\";\nimport './style.css';\nimport store, { setExpiration } from \"../Store\";\nimport { ThemeSwitch } from \"../Controllers/Switch\";\n\nfunction loginRequest(username, password) {\n    try {\n        axios.post('/api/log', {\n            'username': username,\n            'password': password\n        }).then(function (response) {\n            console.log(response.data)\n            alert(response.data.msg)\n            if (response.data.code === 200) {\n                store.dispatch({\n                    type: 'login',\n                    loginState: true,\n                    session: response.data\n                })\n            }\n        })\n    }\n    catch (error) {\n        alert('网络连接出现了一些问题')\n        console.error(error);\n    }\n}\n\nclass CertForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: 1,\n        }\n    }\n    CertChange(type) {\n        let feedbackInfo\n        if (type === 'logout') {\n            feedbackInfo = '注销凭据完成'\n            const action = {\n                type: 'certMan',\n                logout: true\n            }\n            store.dispatch(action)\n        }\n        if (type === 'cache') {\n            feedbackInfo = '保存凭据' + this.state.duration +'天'\n            setExpiration(this.state.duration)\n        }\n        alert(feedbackInfo)\n    }\n    handleSlider = (event, newValue) => {\n        this.setState({duration: newValue})\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <ThemeSwitch/>\n                <form\n                    style={{marginTop: '2em'}}\n                    onSubmit={() => this.CertChange('cache', this.state.duration)}\n                >\n                    <FormGroup>\n                        <FormLabel style={{color: 'var(--ThemeColor)'}} component={'legend'}>保存凭据时长（天）</FormLabel>\n                        <div style={{margin: '0 auto', width: 'calc(100% - 20px)'}}>\n                            <Slider\n                                defaultValue={1}\n                                valueLabelDisplay=\"auto\"\n                                step={5}\n                                marks\n                                min={1}\n                                max={31}\n                                onChange={this.handleSlider}\n                            />\n                        </div>\n                    </FormGroup>\n                    <Button type={'submit'}>\n                        保存凭据\n                    </Button>\n                    <br />\n                    <div style={{marginTop: '20px'}}>\n                        <Button onClick={() => this.CertChange('logout')}>\n                            注销凭据\n                        </Button>\n                    </div>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState(),\n            username: '',\n            password: ''\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n    handleLogin(event) {\n        event.preventDefault()\n        loginRequest(this.state.username, this.state.password)\n    }\n    handleForm(event, type) {\n        if (type === 'username') {\n            this.setState({username: event.target.value})\n        }\n        if (type === 'password') {\n            this.setState({password: event.target.value})\n        }\n    }\n\n    render() {\n        let FormSheet, hello\n        const LoginForm = [\n            <form onSubmit={(e) => this.handleLogin(e)}>\n                <div className={\"AuthForm\"}>\n                    <div>\n                        <Input handler={(e) => {this.handleForm(e, 'username')}}>\n                            用户名称\n                        </Input>\n                        <Input type={\"password\"} handler={(e) => {this.handleForm(e, 'password')}}>\n                            密码\n                        </Input>\n                    </div>\n                    <div className={\"Button\"}>\n                        <Button type={\"submit\"}>\n                            好\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        ]\n\n        if (this.state.store.loginState) {\n            FormSheet = [<CertForm/>]\n            hello = \"认证管理\"\n        }\n        else {\n            FormSheet = LoginForm\n            hello = \"认证\"\n        }\n\n        return (\n            <React.Fragment>\n                <div id={'Amaze'}/>\n                <div id={'ActualCard'}>\n                    <h1>\n                        {hello}\n                    </h1>\n                </div>\n                <div id={'Maze'}/>\n                    <section className={\"AuthCard\"}>\n                        {FormSheet}\n                    </section>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport Overview from \"./Overview\";\nimport { LineHeat, HeatTimeline } from \"./LineHeat\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport Login from \"./Authenticate\";\nimport './index.css';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, { exposedMethods } from \"./Store\";\n\nconst root = document.documentElement\n\nfunction setTheme() {\n    if (store.getState().theme === 'light') {\n        root.style.setProperty('--themeTable', '#E3E3E3')\n        root.style.setProperty('--themeBorder', 'none')\n        root.style.setProperty('--themeColor', '#443')\n        root.style.setProperty('--themeHover', '#220')\n        root.style.setProperty('--themeActive', '#220')\n        root.style.setProperty('--themeLayer', 'rgba(250, 250, 250, 0.8)')\n        root.style.setProperty('--themeFilter', 'screen')\n        root.style.setProperty('--themeDarkFilter', 'brightness(1.17)')\n        root.style.setProperty('--themePure0', 'rgba(255, 255, 255, 1)')\n        root.style.setProperty('--themePure1', 'rgba(255, 255, 255, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(80, 80, 80, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#FFF')\n        root.style.setProperty('--controlBlur', '#553')\n        root.style.setProperty('--dockBorderSize', '1px')\n        root.style.setProperty('--actualFilter', 'rgba(255, 255, 255, .8)')\n    }\n    if (store.getState().theme === 'dark') {\n        root.style.setProperty('--themeTable', '#171717')\n        root.style.setProperty('--themeBorder', '0 0 1.5px #EEE')\n        root.style.setProperty('--themeColor', '#EEE')\n        root.style.setProperty('--themeHover', '#AAB')\n        root.style.setProperty('--themeActive', '#FFF')\n        root.style.setProperty('--themeLayer', 'rgba(53, 53, 53, 0.8)')\n        root.style.setProperty('--themeFilter', 'multiply')\n        root.style.setProperty('--themeDarkFilter', 'brightness(.65)')\n        root.style.setProperty('--themePure0', 'rgba(64, 64, 64, 1)')\n        root.style.setProperty('--themePure1', 'rgba(0, 0, 0, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(255, 255, 255, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#535353')\n        root.style.setProperty('--controlBlur', '#BBC')\n        root.style.setProperty('--dockBorderSize', '2px')\n        root.style.setProperty('--actualFilter', 'rgba(0, 0, 25, .15)')\n\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = store.getState()\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n\n    render() {\n        setTheme()\n        let pagesList = []\n        if (this.state.loginState === true) {\n            pagesList.push(\n                <Switch>\n                    <Route exact path={\"./\"}>\n                        <Redirect to={\"Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"} component={AnimationApp}/>\n                </Switch>\n            )\n        }\n        else {\n            pagesList.push(\n                <Switch>\n                    <Route path={\"*\"}>\n                        <Login />\n                    </Route>\n                </Switch>\n            )\n        }\n        return (\n            <PersistGate store={store} persistor={exposedMethods}>\n                <Router>\n                    {pagesList}\n                </Router>\n            </PersistGate>\n        )\n    }\n}\n\nclass AnimationApp extends React.Component {\n    render() {\n        // keyboard shortcuts\n        window.addEventListener(\"keydown\", function (e) {\n            if (e.defaultPrevented) {\n                return;\n            }\n            function handleShortcutKey(key) {\n                const destination = ['Overview', 'LineHeat', 'HeatTimeline', 'PassengerAnalytics', 'Authenticate']\n                window.location.replace('./' + destination[key - 1])\n            }\n            if (e.key !== undefined) {\n                if (e.key === '1') {handleShortcutKey(1)}\n                if (e.key === '2') {handleShortcutKey(2)}\n                if (e.key === '3') {handleShortcutKey(3)}\n                if (e.key === '4') {handleShortcutKey(4)}\n                if (e.key === 'L' || e.key === 'l') {handleShortcutKey(5)}\n            }\n            else if (e.code !== undefined) {\n                if (e.code === 'Digit1') {handleShortcutKey(1)}\n                if (e.code === 'Digit2') {handleShortcutKey(2)}\n                if (e.code === 'Digit3') {handleShortcutKey(3)}\n                if (e.code === 'Digit4') {handleShortcutKey(4)}\n                if (e.code === 'KeyL') {handleShortcutKey(5)}\n            }\n        })\n\n        return (\n            <React.Fragment>\n                <div className=\"Dock\">\n                    <NavLink key={\"Overview\"} to={\"Overview\"} activeClassName={\"active\"} exact>\n                        <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                    </NavLink>\n                    <NavLink key={\"LineHeat\"} to={\"LineHeat\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>线路分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"HeatTimeline\"} to={\"HeatTimeline\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>时段分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"PassengerAnalytics\"} to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>客流分析<span>3</span></button>\n                    </NavLink>\n                    <NavLink key={\"Authenticate\"} to={\"Authenticate\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>认证与设置<span>L</span></button>\n                    </NavLink>\n                </div>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={this.props.location}\n                        classNames={\"fade\"}\n                        timeout={250}\n                    >\n                        <Switch>\n                            <Route path={`*/Overview`} component={Overview}/>\n                            <Route path={`*/LineHeat`} component={LineHeat}/>\n                            <Route path={`*/HeatTimeline`} component={HeatTimeline}/>\n                            <Route path={`*/PassengerAnalytics`} component={PassengerAnalytics}/>\n                            <Route path={`*/Authenticate`} component={Login}/>\n                            <Route path={`*`}>\n                                <Redirect to={\"Overview\"}/>\n                            </Route>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}