{"version":3,"sources":["Controllers/Switch.js","Map.js","Widgets/widgets.js","Overview/index.js","PassengerAnalytics/index.js","App.js","reportWebVitals.js","index.js"],"names":["MapSwitch","props","state","switchOptions","this","setState","allOptions","optionsController","forEach","perOption","acClass","activated","push","id","onClick","className","enumOptions","React","Component","Point","x","y","level","type","line","station","radius","fill","setPanel","innerRadius","outerRadius","text","fontSize","Path","x1","y1","x2","y2","strokeWidth","points","stroke","Panel","width","height","MapFuture","panel","pos","alert","undefined","Fragment","pointSet","pathSet","window","innerHeight","innerWidth","showPanel","transformToCentre","position","left","top","transform","linesConstructor","dataArray","tintArray","lines","converted","drawn","map","lineIndex","values","partPoint","name","Object","assign","dot","r","dataKey","data","style","barConstructor","keys","console","log","barContent","key","index","Dashboard","rounded","size","spacing","value","tint","frame","borderRadius","slice","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","port","pv","amt","uv","SimpleTrends","xAxisMeasurement","SimpleBars","MapsBlock","e","Map","Index","calculateSize","Math","min","addEventListener","removeEventListener","PassengerAnalytics","App","path","exact","Overview","to","activeClassName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94c0e06a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport {Stage, Layer, Circle, Group, Text, Ring, Line, Rect} from \"react-konva\";\nimport \"./Overview/style.css\";\n\nclass Point extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.id,\n            x: this.props.x,\n            y: this.props.y,\n            level: this.props.level,\n            type: this.props.type,\n            line: this.props.line,\n            station: this.props.station\n        }\n    }\n    render() {\n        const basis = 2;\n        const multiplier = 2;\n        const radius = this.state.level * multiplier * basis;\n        return(\n            <Group x={this.state.x} y={this.state.y}>\n                <Circle\n                    radius={radius * 0.5}\n                    fill={'#FFF'}\n                    onClick={() => this.props.setPanel(0, 'station', [this.state.x, this.state.y], 1)}\n                />\n                <Ring\n                    innerRadius={radius * 0.5}\n                    outerRadius={radius}\n                    fill={'#990'}\n                />\n                <Text text={this.state.station} fontSize={20} x={radius * 1.5 + 5}/>\n            </Group>\n        )\n    }\n}\nclass Path extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.id,\n            x1: this.props.x1,\n            y1: this.props.y1,\n            x2: this.props.x2,\n            y2: this.props.y2,\n            level: this.props.level,\n            line: this.props.line\n        }\n    }\n    render() {\n        const strokeWidth = 5 + this.state.level * 0.1;\n        return(\n            <Line\n                x={0}\n                y={0}\n                points={[this.state.x1, this.state.y1, this.state.x2, this.state.y2]}\n                stroke={'#BBB'}\n                strokeWidth={strokeWidth}\n            />\n        )\n    }\n}\nclass Panel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: this.props.x,\n            y: this.props.y,\n        }\n        if (this.props.type === 'station') {\n\n        }\n    }\n    render() {\n        const width = 50;\n        const height = 80;\n\n        return (\n            <Group>\n                <Rect width={width} height={height} fill={'#EEE'}/>\n            </Group>\n        )\n    }\n}\n\nclass MapFuture extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            panel: {pos: [], id: 0}\n        }\n    }\n    setPanel (id, type, pos, activated) {\n        this.setState({panel: {pos, id}});\n        alert('nyan');\n    }\n    showPanel () {\n        if (this.state.pos === undefined) {\n            return(\n                <React.Fragment/>\n            )\n        }\n        return(\n            <Panel\n                x={this.state.pos[0]}\n                y={this.state.pos[1]}\n            />\n        )\n    }\n    render() {\n        let pointSet = [];\n        let pathSet = [];\n        pointSet.push(\n            <Point x={50} y={500} level={5} station={'sta999'} setPanel={(id, type, pos, activated) => {this.setPanel(id, type, pos, activated)}}/>\n        )\n        pointSet.push(\n            <Point x={100} y={50} level={2} station={'sta666'} setPanel={(id, type, pos, activated) => {this.setPanel(id, type, pos, activated)}}/>\n        )\n        pathSet.push((\n            <Path x1={50} y1={500} x2={100} y2={50} level={20}/>\n        ))\n\n        return(\n            <Stage height={window.innerHeight} width={window.innerWidth}>\n                <Layer id={'FMpaths'}>\n                    {pathSet}\n                </Layer>\n                <Layer id={'FMstations'}>\n                    {pointSet}\n                </Layer>\n                <Layer id={'FMpanels'}>\n                    {this.showPanel()}\n                </Layer>\n            </Stage>\n        )\n    }\n}\n\nexport default MapFuture","import React from 'react';\nimport './style.css';\nimport {\n    RadialBarChart,\n    RadialBar,\n    PolarAngleAxis,\n    Legend,\n    Cell,\n    LineChart,\n    CartesianGrid,\n    XAxis,\n    YAxis, Line, BarChart, Bar\n} from \"recharts\";\nimport '../Controllers/Switch';\nimport MapFuture from \"../Map\";\nimport MapSwitch from \"../Controllers/Switch\";\n// import {Layer, Rect, Stage} from \"react-konva\n// import {CircularProgress} from \"@material-ui/core\";\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction linesConstructor(dataArray, tintArray, state) {\n    const lines = dataArray.lines\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function(y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{r: 6}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={4}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend />\n            {drawn}\n        </LineChart>\n    )\n}\n\nfunction barConstructor(dataArray, tintArray, state) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    console.log(keys)\n     const barContent = keys.map(function (key, index) {\n        return(\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n            />\n        )\n    })\n\n    return(\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend />\n        </BarChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20\n        }\n    }\n    render() {\n        const size = this.props.size * 2\n        const spacing = size / 8\n        const data = [{name: '摸', value: 40}, {name: '到', value: 90}, {name: '飞', value: 60}, {name: '起', value: 70}];\n        const tint = [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded}\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(0, 1)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0} wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(1, 2)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                        <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0} wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(2, 3)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                        <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0} wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(3, 4)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0} wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {rounded: 20}\n    }\n    greatLegend(value) {\n        return (\n            <span>{value}</span>\n        )\n    }\n    render() {\n        const data = {name: '鸽子力', value: 80};\n        const tint = \"#137A7F\"\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded, align: \"center\"}\n        const size = this.props.size\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20\n        }\n    }\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#A00\", \"#00A\"]\n        const data = [\n            {\n                name: 'Page A', key: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ];\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={4} dot={{r: 6}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={4} dot={{r: 6}}/>\n                </LineChart>\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20\n        }\n    }\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#EA0\", \"#08A\"]\n        const lineData = {\n            xAxisMeasurement: \"XExample\",\n            lines: [\n                {\n                    name: 'One',\n                    values: [\n                        4000,\n                        5000,\n                        3500,\n                        5000\n                    ]\n                },\n                {\n                    name: \"Two\",\n                    values: [\n                        7500,\n                        5560,\n                        2280,\n                        5600\n                    ]\n                },\n            ]\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(lineData, tint, port)}\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n        }\n    }\n    render() {\n        const port = this.props.port\n        const data = {\"uv\": 900, \"pv\": 609}\n        const tint = [\"#998\", \"#753\"]\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": this.state.rounded\n        }\n        return(\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([data], tint, port)}\n            </div>\n        )\n    }\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            activated: \"无\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={\"Layer\"} style={{borderRadius: this.state.rounded}}>\n                <MapSwitch switchOptions={[\"无\",\"热力图\"]} state={this.state}\n                    setState={(e) => (this.setState(e))}\n                />\n                <MapFuture />\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\n\nclass Index extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(window.innerHeight / 6, window.innerWidth / 8)\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return (\n            <React.Fragment>\n                <div className={\"OverviewGrid\"}>\n                    <div className={\"div1\"}>\n                        <Widgets.MapsBlock />\n                    </div>\n                    <div className={\"div2\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div3\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div4\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div5\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div6\"}>\n                        <Widgets.Dashboard size={size}/>\n                    </div>\n                    <div className={\"div7\"}>\n                        <Widgets.Dashboard size={size}/>\n                    </div>\n                    <div className={\"div8\"}>\n                        <Widgets.Trends port={{\"height\": size, \"width\": size * 2}}/>\n                    </div>\n                    <div className={\"div9\"}>\n                        <Widgets.SimpleTrends port={{\"height\": size, \"width\": size * 3}}/>\n                    </div>\n                    <div className={\"div10\"}>\n                        <Widgets.SimpleBars port={{\"height\": size, \"width\": size * 2}}/>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\n\nclass PassengerAnalytics extends React.Component {\n    render() {\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                    </div>\n                    <div className=\"div2\"></div>\n                    <div className=\"div3\"></div>\n                    <div className=\"div4\"></div>\n                    <div className=\"div5\"></div>\n                    <div className=\"div6\"></div>\n                    <div className=\"div7\"></div>\n                    <div className=\"div8\"></div>\n                    <div className=\"div9\"></div>\n                    <div className=\"div10\"></div>\n                    <div className=\"div11\"></div>\n                    <div className=\"div12\"></div>\n                    <div className=\"div13\"></div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from 'react'\nimport {BrowserRouter as Router, Route, NavLink} from \"react-router-dom\";\nimport Overview from \"./Overview\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport './index.css';\n\nfunction App() {\n  return (\n      <Router>\n          <Route path={\"/\"} exact>\n              <Overview />\n          </Route>\n          <Route path={\"/PassengerAnalytics\"}>\n              <PassengerAnalytics />\n          </Route>\n          <div className=\"Dock\">\n              <NavLink to={\"/\"} activeClassName={\"active\"} exact>\n                  <button className={\"DockNavigation\"}>概览</button>\n              </NavLink>\n              <NavLink to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                  <button className=\"DockNavigation\">客流情况分析</button>\n              </NavLink>\n          </div>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      {/*<Popup title={\"测试用的盒子\"}>*/}\n      {/*    <Input>*/}\n      {/*        \"Nyan\"*/}\n      {/*    </Input>*/}\n      {/*</Popup>*/}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}