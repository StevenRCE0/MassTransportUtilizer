{"version":3,"sources":["Controllers/Switch.js","Controllers/Button.js","Widgets/widgets.js","Overview/index.js","PassengerAnalytics/index.js","App.js","reportWebVitals.js","index.js"],"names":["MapSwitch","props","state","switchOptions","this","setState","allOptions","optionsController","forEach","perOption","acClass","activated","push","id","onClick","className","enumOptions","React","Component","MNButtonStyle","borderRadius","backgroundColor","Button","variant","style","children","MapFuture","lazy","transformToCentre","position","left","top","transform","linesConstructor","dataArray","tintArray","lines","converted","drawn","map","line","lineIndex","values","y","x","partPoint","name","Object","assign","type","dot","r","dataKey","stroke","strokeWidth","data","width","height","barConstructor","keys","console","log","barContent","key","index","fill","Dashboard","rounded","nameLabel","size","spacing","tint","frame","undefined","Fragment","value","slice","innerRadius","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","port","pv","amt","uv","SimpleTrends","xAxisMeasurement","SimpleBars","propTintArray","propData","sampleData","warn","MapsBlock","datePicker","selectedTime","Date","flowStats","e","time","opacity","userSelect","cursor","getStats","handleOpen","triggerStats","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","component","margin","utils","MomentUtils","onChange","handleTime","CardActions","color","fallback","body","document","Index","calculateSize","Math","min","scrollHeight","scrollWidth","window","addEventListener","removeEventListener","PassengerAnalytics","AnimationApp","location","useLocation","match","handleShortcutKey","replace","defaultPrevented","code","to","activeClassName","exact","TransitionGroup","CSSTransition","classNames","timeout","path","url","Overview","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.636dc2d9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: '#FFF'\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, {Suspense} from \"react\";\nimport './style.css';\nimport {\n    RadialBarChart,\n    RadialBar,\n    PolarAngleAxis,\n    Legend,\n    Cell,\n    LineChart,\n    CartesianGrid,\n    XAxis,\n    YAxis, Line, BarChart, Bar\n} from \"recharts\";\nimport '../Controllers/Switch';\nimport MapSwitch from \"../Controllers/Switch\";\nimport {Button} from \"../Controllers/Button\";\nimport MomentUtils from \"@date-io/moment\";\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    Modal,\n    Typography,\n    Fade,\n    Button as MaterialButton,\n} from \"@material-ui/core\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDateTimePicker\n} from \"@material-ui/pickers\";\n\nconst MapFuture = React.lazy(() => import('../Map'));\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\n\nfunction constructData(propData, sampleData) {\n    if (propData !== undefined) {\n        if (propData == null) {\n            console.warn(\"Null data received\")\n        }\n        return propData\n    } else return sampleData\n}\n\nfunction linesConstructor(dataArray, tintArray, state) {\n    const lines = dataArray.lines\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{r: 6}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={4}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend/>\n            {drawn}\n        </LineChart>\n    )\n}\n\nfunction barConstructor(dataArray, tintArray, state) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    console.log(keys)\n    const barContent = keys.map(function (key, index) {\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n            />\n        )\n    })\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            name: this.props.children\n        }\n    }\n\n    render() {\n        const size = this.props.size * 2\n        const spacing = size / 8\n        const tint = [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded}\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const data = [{name: '摸', value: 40}, {name: '到', value: 90}, {name: '飞', value: 60}, {name: '起', value: 70}];\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(0, 1)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(1, 2)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(2, 3)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(3, 4)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {rounded: 20}\n    }\n\n    greatLegend(value) {\n        return (\n            <span>{value}</span>\n        )\n    }\n\n    render() {\n        const data = {name: '鸽子力', value: 80};\n        const tint = \"#137A7F\"\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded, align: \"center\"}\n        const size = this.props.size\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            name: this.props.children\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const data = [\n            {\n                name: 'Page A', key: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ];\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={4} dot={{r: 6}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={4} dot={{r: 6}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            name: this.props.children\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#EA0\", \"#08A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const lineData = {\n            xAxisMeasurement: \"XExample\",\n            lines: [\n                {\n                    name: 'One',\n                    values: [\n                        4000,\n                        5000,\n                        3500,\n                        5000\n                    ]\n                },\n                {\n                    name: \"Two\",\n                    values: [\n                        7500,\n                        5560,\n                        2280,\n                        5600\n                    ]\n                },\n            ]\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(lineData, tint, port)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            name: this.props.children\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const tint = setTintArray(this.props.tint)\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": this.state.rounded\n        }\n        const data = constructData(this.props.data, {\"uv\": 900, \"pv\": 609})\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([data], tint, port)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            datePicker: false,\n            activated: \"无\",\n            selectedTime: new Date(),\n            flowStats: false\n        }\n    }\n\n    handleOpen() {\n        this.setState({datePicker: !this.state.datePicker})\n    }\n    handleTime(e) {\n        this.setState({time: e})\n    }\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>\n                        线路\n                    </td>\n                    <td>\n                        99\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        客流量\n                    </td>\n                    <td>\n                        99\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        高峰时段\n                    </td>\n                    <td>\n                        9:00\n                    </td>\n                </tr>\n            </table>\n        )\n    }\n\n    render() {\n        return (\n            <div className={\"Layer\"} style={{borderRadius: this.state.rounded}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch switchOptions={[\"无\", \"热力图\"]} state={this.state}\n                               setState={(e) => (this.setState(e))}\n                    />\n                    <Button onClick={() => this.handleOpen()}>\n                        选择日期\n                    </Button>\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}\n                        数据\n                    </Button>\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.time}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen()}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>Maps loading...</div>}>\n                        <div style={{transform: 'translate(+7%, +5%)'}}>\n                            <MapFuture height={this.props.port.height} width={this.props.port.width}/>\n                        </div>\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\n\nconst body = document.body\n\nclass Index extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return (\n                <div className={\"OverviewGrid\"}>\n                    <div className={\"div1\"}>\n                        <Widgets.MapsBlock\n                            port={{\"height\": size * 4, \"width\": size * 4}}\n                        />\n                    </div>\n                    <div className={\"div2\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div3\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div4\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div5\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div6\"}>\n                        <Widgets.Dashboard size={size}/>\n                    </div>\n                    <div className={\"div7\"}>\n                        <Widgets.Dashboard size={size}/>\n                    </div>\n                    <div className={\"div8\"}>\n                        <Widgets.Trends\n                            port={{\"height\": size, \"width\": size * 2}}\n                        >\n                            Trends\n                        </Widgets.Trends>\n                    </div>\n                    <div className={\"div9\"}>\n                        <Widgets.SimpleTrends\n                            port={{\"height\": size, \"width\": size * 3}}\n                        >\n                            SimpleTrends\n                        </Widgets.SimpleTrends>\n                    </div>\n                    <div className={\"div10\"}>\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\n// import * as Widgets from '../Widgets/widgets';\n\nclass PassengerAnalytics extends React.Component {\n    render() {\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                    </div>\n                    <div className=\"div2\"></div>\n                    <div className=\"div3\"></div>\n                    <div className=\"div4\"></div>\n                    <div className=\"div5\"></div>\n                    <div className=\"div6\"></div>\n                    <div className=\"div7\"></div>\n                    <div className=\"div8\"></div>\n                    <div className=\"div9\"></div>\n                    <div className=\"div10\"></div>\n                    <div className=\"div11\"></div>\n                    <div className=\"div12\"></div>\n                    <div className=\"div13\"></div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n    useLocation\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport Overview from \"./Overview\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport './index.css';\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path={\"./\"}>\n                    <Redirect to={\"Overview\"}/>\n                </Route>\n                <Route path={\"*\"}>\n                    <AnimationApp/>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nfunction AnimationApp() {\n    const location = useLocation();\n    const { match } = this.props;\n\n    window.addEventListener(\"keydown\", function (e) {\n        if (e.defaultPrevented) {\n            return;\n        }\n        function handleShortcutKey(key) {\n            const destination = ['Overview', 'PassengerAnalytics']\n            window.location.replace('./' + destination[key - 1])\n        }\n        if (e.key !== undefined) {\n            if (e.key === '1') {handleShortcutKey(1)}\n            if (e.key === '2') {handleShortcutKey(2)}\n        }\n        else if (e.code !== undefined) {\n            if (e.code === 'Digit1') {handleShortcutKey(1)}\n            if (e.code === 'Digit2') {handleShortcutKey(2)}\n        }\n    })\n    return (\n        <React.Fragment>\n            <div className=\"Dock\">\n                <NavLink to={\"Overview\"} activeClassName={\"active\"} exact>\n                    <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                </NavLink>\n                <NavLink to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                    <button className=\"DockNavigation\">客流情况分析<span>2</span></button>\n                </NavLink>\n            </div>\n            <TransitionGroup>\n                <CSSTransition\n                    key={location}\n                    classNames={\"fade\"}\n                    timeout={250}\n                >\n                    <Switch>\n                        <Route path={`${match.url}/Overview`} component={Overview}/>\n                        <Route path={`${match.url}/PassengerAnalytics`} component={PassengerAnalytics}/>\n                    </Switch>\n                </CSSTransition>\n            </TransitionGroup>\n        </React.Fragment>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}