{"version":3,"sources":["Store/methods.js","Store/mapsUpdater.js","Store/index.js","Controllers/Switch.js","Widgets/widgets.js","Controllers/Button.js","Widgets/MapsBlock.js","Overview/index.js","LineHeat/index.js","PassengerAnalytics/index.js","Controllers/Input.js","Authenticate/index.js","App.js","reportWebVitals.js","index.js"],"names":["nowPlacebo","defaultState","active","theme","loginState","sessionData","now","Date","timeline","passengerMode","timePeriod","timeNoGo","flowSpectating","Store","state","action","newState","JSON","parse","stringify","type","session","logout","mode","live","time","value","defaultValue","initiated","stationData","pathData","heatData","dashboardData","lineSpectating","stationSpectating","station","flow","newMapState","require","refreshDashboard","store","getState","undefined","data","line","hoverType","hoverID","console","log","expires","setExpiration","schoolDays","persistConfig","key","storage","CookieStorage","Cookies","expiration","default","persistedMethods","persistReducer","methods","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","exposedMethods","persistStore","mapsPersistConfig","mapsMethods","mapsUpdater","mapsStore","mapsExposedMethods","date","year","getFullYear","toString","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","axios","post","then","response","result","msg","dispatch","catch","error","clearStorage","MapSwitch","props","switchOptions","this","setState","allOptions","optionsController","index","forEach","perOption","acClass","activated","push","id","onClick","className","style","enumOptions","React","Component","ThemeSwitch","themeNames","Fragment","position","height","transformToCentre","left","top","transform","defaultRoundCorner","makeAvailable","thing","linesConstructor","dataArray","tintArray","tooltip","lines","tooltipElement","converted","drawn","map","lineIndex","values","y","x","partPoint","name","Object","assign","dot","strokeWidth","dataKey","stroke","width","barConstructor","label","keys","barContent","labelSet","fill","isAnimationActive","Dashboard","nameLabel","theKeys","zoom","emptyData","zoomSet","theKeysSet","e","fixDictionaryKeys","size","innerRadius","tint","frame","borderRadius","children","slice","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","uv","pv","amt","port","r","SimpleTrends","SimpleBars","render","propTintArray","dataToConstruct","newDictionary","makeDictionaryPairs","AreaChartTrends","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","fillOpacity","GreatLegends","inside","getFromData","makeEmpty","SimplePieCharts","duetFrame","display","flexDirection","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","outerRadius","percent","radius","cos","sin","textAnchor","dominantBaseline","toFixed","duet","nameKey","labelLine","entry","length","data0","layout","MNButtonStyle","backgroundColor","color","Button","disabled","variant","MapFuture","lazy","PassengerMaps","MapsBlock","datePicker","argumentPicker","selectedTime","flowStats","storeState","mapsState","userArguments","holiday","weather","enabled","condition","temperature","low","high","boom","failure","subscribe","modal","argument","newArguments","target","checked","dayprop","temperatures","predictionRequest","alert","handleOpen","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","onChange","event","handleChange","row","Select","labelId","MenuItem","Slider","valueLabelDisplay","step","marks","min","max","foo","opacity","userSelect","cursor","getStats","moment","format","justifyContent","triggerStats","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","margin","utils","MomentUtils","handleTime","CardActions","handleTimeUpdate","FormControl","InputLabel","TextField","marginTop","InputLabelProps","shrink","stationArguments","handlePredictionUpdate","fallback","PassengerMapsBlock","handlePassengerModeChange","body","document","Index","calculateSize","scrollHeight","scrollWidth","addEventListener","removeEventListener","highestFlow","overallFlow","highestDist4","lineFlow","LineHeat","xAxisMeasurements","HeatTimeline","passengerArray","PassengerAnalytics","newArray","arrayCoherence","getSlice","u","p","Input","handler","CertForm","handleSlider","newValue","duration","feedbackInfo","onSubmit","CertChange","Login","username","password","storeChange","bind","preventDefault","code","loginRequest","FormSheet","hello","LoginForm","handleLogin","handleForm","root","documentElement","App","setProperty","pagesList","exact","path","to","AnimationApp","persistor","handling","redirect","done","setTimeout","history","listen","location","pathname","wary","themeSwitchKey","themeSwitcherWary","handleShortcutKey","defaultPrevented","activeClassName","TransitionGroup","CSSTransition","classNames","timeout","Overview","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d0b82db1.chunk.js","sourcesContent":["const nowPlacebo = 'May 29, 2020 22:30:00'\nconst defaultState = {\n    active: \"dashboard\",\n    theme: 'light',\n    loginState: false,\n    sessionData: '',\n    now: new Date(nowPlacebo),\n    timeline: new Date(nowPlacebo),\n    passengerMode: '总客流',\n    timePeriod: '实时',\n    timeNoGo: '数据加载中',\n    flowSpectating: -1,\n}\nconst Store = (state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'login' && action.loginState) {\n        newState.loginState = true\n        newState.sessionData = action.session\n        return newState\n    }\n    if (action.type === 'certMan') {\n        if (action.logout) {\n            return defaultState\n        }\n    }\n    if (action.type === 'switchTheme') {\n        newState.theme = 'light'\n        if (state.theme === 'light') {\n            newState.theme = 'dark'\n        }\n        return newState\n    }\n    if (action.type === 'changePassengerMode') {\n        newState.passengerMode = action.mode\n        return newState\n    }\n    if (action.type === 'timeUpdate') {\n        if (action.live === true) {\n            newState.timePeriod = '实时'\n            newState.timeline = nowPlacebo\n        }\n        else {\n            if (action.time > state.now) {\n                newState.timePeriod = '预测'\n            }\n            else if (action.time < state.now) {\n                newState.timePeriod = '历史'\n            }\n            newState.timeline = action.time\n        }\n        return newState\n    }\n    if (action.type === 'noGo') {\n        newState.timeNoGo = action.value === '成功'\n        return newState\n    }\n    if (action.type === 'clear') {\n        return defaultState\n    }\n    return state\n}\nexport default Store","import store, {refreshDashboard} from \"./index\";\n\nconst defaultValue = {\n    initiated: 0,\n    stationData: {},\n    pathData: {},\n    heatData: {},\n    dashboardData: {},\n    lineSpectating: 'No',\n    stationSpectating: {station: '没有选中站点', flow: 0},\n}\n\nconst Store = (state = defaultValue, action) => {\n    let newMapState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'refresh') {\n        if (!newMapState.initiated) {\n            newMapState.dashboardData = require('../stationaryPlaceholder/dashboard.json')\n            newMapState.stationData = require('../stationaryPlaceholder/stations.json')\n            newMapState.pathData = require('../stationaryPlaceholder/paths.json')\n        }\n        refreshDashboard(store.getState().timeline)\n        return newMapState\n    }\n    if (action.type === 'push') {\n        if (action.stationData !== undefined) {newMapState.stationData = action.stationData}\n        if (action.pathData !== undefined) {newMapState.pathData = action.pathData}\n        if (action.heatData !== undefined) {newMapState.heatData = action.heatData}\n        return newMapState\n    }\n    if (action.type === 'loadDashboard') {\n        newMapState.dashboardData = action.data\n        return newMapState\n    }\n    if (action.type === 'hoverUpdate') {\n        newMapState.lineSpectating = action.line\n        if (action.hoverType === 'station' || action.hoverType === 'path') {\n            newMapState.stationSpectating[action.hoverType] = action.hoverID\n            newMapState.stationSpectating.flow = action.flow\n            console.log(newMapState.stationSpectating.flow)\n        }\n\n        return newMapState\n    }\n    if (action.type === 'clear') {\n        return defaultValue\n    }\n    return state\n}\nexport default Store","import { createStore } from \"redux\";\nimport methods from './methods';\nimport mapsUpdater from './mapsUpdater';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { CookieStorage } from 'redux-persist-cookie-storage';\nimport storage from 'redux-persist/lib/storage';\nimport Cookies from 'cookies-js';\nimport axios from \"axios\";\n\nlet expires = 22 * 86400\n\nexport function setExpiration(schoolDays)\n{\n    if (schoolDays === undefined) {\n        schoolDays = 22\n    }\n    expires = schoolDays * 86400;\n}\n\n//组件数据和会话\nconst persistConfig = {\n    key: 'root',\n    storage: new CookieStorage(Cookies, {expiration:\n        {default: expires}\n    })\n}\nconst persistedMethods = persistReducer(persistConfig, methods)\nlet store = createStore(persistedMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport let exposedMethods = persistStore(store)\nexport default store\n\n//地图存储\nconst mapsPersistConfig = {\n    key: 'maps',\n    storage: storage\n}\nconst mapsMethods = persistReducer(mapsPersistConfig, mapsUpdater)\nexport let mapsStore = createStore(mapsMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport let mapsExposedMethods = persistStore(mapsStore)\n\nexport function searchObject(data, searchKey, value, requiredKey) {\n    let result\n    try {\n        data.forEach(function (theObject) {\n            if (theObject[searchKey] === value) {\n                result = theObject[requiredKey]\n            }\n        })\n    }\n    catch(error)\n    {\n        console.error(error)\n        return result\n    }\n\n    return result\n}\nexport function refreshDashboard(timeline) {\n    if (timeline === undefined) {\n        console.log('undefined date')\n        return\n    }\n    const date = new Date(timeline)\n    const data = {\n        year: date.getFullYear().toString(),\n        month: (date.getMonth() + 1).toString(),\n        day: date.getDate().toString(),\n        hour: date.getHours().toString(),\n        minute: date.getMinutes().toString()\n    }\n    console.log('Time update request fired')\n    axios.post('/api/time/json', data)\n        .then(response => {\n            console.log(response.data.result.msg)\n            mapsStore.dispatch({\n                type: 'loadDashboard',\n                data: response.data\n            })\n            store.dispatch({\n                type: 'noGo',\n                value: response.data.result.msg\n            })\n        })\n        .catch(error => {\n            console.error(error)\n        })\n}\nexport function moodyTimeDifference(givenTime) {\n    const moodyHour = givenTime.getHours() + (givenTime.getMinutes() > 30 ? 1 : 0)\n    const moodyMin = givenTime.getMinutes() > 15 && givenTime.getMinutes() <= 45 ? 30 : 0\n    return givenTime.getMonth()+1 + ':' + givenTime.getDate() + ':' + moodyHour + ':' + moodyMin\n}\nexport function clearStorage() {\n    mapsStore.dispatch({type: 'clear'})\n    store.dispatch({type: 'clear'})\n}","import React from \"react\";\nimport store from \"../Store\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        let index = 0\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n                style={this.props.style}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport class ThemeSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState()\n        }\n    }\n    themeNames = ['深色', '浅色']\n    enumOptions() {\n        let optionsController = []\n        let index = 0\n        this.themeNames.forEach(\n            function (perOption) {\n                const {theme} = store.getState()\n                const themeOptions = ['dark', 'light']\n                let acClass = \"SwitchTick\"\n                if (theme === themeOptions[index]) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => {\n                            store.dispatch({\n                                type: 'switchTheme'\n                            })\n                        }}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n    dispatchTheme(value) {\n        store.dispatch({\n            type: 'switchTheme',\n            theme: value\n        })\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <div\n                    id={'controller-theme-switch'}\n                    className={\"SwitchBase\"}\n                    style={{position: 'absolute'}}\n                >\n                    {this.enumOptions()}\n                </div>\n                <div style={{height: 'calc(11pt + 30px)'}}/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport './style.css';\nimport {\n    PolarAngleAxis, XAxis, YAxis,\n    AreaChart, Area,\n    RadialBarChart, RadialBar,\n    LineChart, Line,\n    PieChart, Pie,\n    BarChart, Bar,\n    Legend, Tooltip,\n    Cell, CartesianGrid,\n    LabelList\n} from \"recharts\";\nimport '../Controllers/Switch';\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\nexport const defaultRoundCorner = 20;\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\nexport function makeAvailable(thing) {\n    if (thing !== undefined) {return thing}\n    return (<React.Fragment/>)\n}\nfunction fixDictionaryKeys(data, theKeys, zoom) {\n    let emptyData = [{}, {}, {}, {}]\n    const zoomSet = zoom === undefined ? 1 : zoom\n    const theKeysSet = theKeys === undefined ? ['name', 'value'] : theKeys\n    try {\n        data.map(function (value, index) {\n            emptyData[index] = {'name': value[theKeysSet[0]], 'value': value[theKeysSet[1]] * zoomSet}\n            return emptyData\n        }, emptyData, theKeysSet, zoomSet)\n    }\n    catch (e) {}\n    return emptyData\n}\nfunction makeDictionaryPairs(data, theKeys) {\n    let newDictionary = {}\n    try {\n        data.map(function (value) {\n            const key = value[theKeys[0]]\n            newDictionary[key] = value[theKeys[1]]\n            return true\n        }, theKeys)\n    }\n    catch (e) {}\n    return newDictionary\n}\nfunction linesConstructor(dataArray, tintArray, state, tooltip) {\n    const lines = dataArray.lines\n    const tooltipElement = tooltip ? [<Tooltip />] : []\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{strokeWidth: 3}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={2}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend/>\n            {tooltipElement}\n            {drawn}\n        </LineChart>\n    )\n}\nfunction barConstructor(dataArray, tintArray, state, label) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    const barContent = keys.map(function (key, index) {\n        let labelSet = []\n        if (label === true) {\n            labelSet = [<LabelList dataKey={key} position=\"top\" style={{fill: 'var(--themeColor)'}}/>]\n\n        }\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n                isAnimationActive={false}\n            >\n                {labelSet}\n            </Bar>\n        )\n    }, label)\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    render() {\n        const data = fixDictionaryKeys(this.props.data, this.props.keys, this.props.zoom)\n        const size = this.props.size * 1.25\n        const innerRadius = size / 3.75\n        const spacing = 0\n        const tint = this.props.tint === undefined ? [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"] : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner}\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(0, 1)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(1, 2)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(2, 3)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(3, 4)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    greatLegend(value) {\n        return (<span>{value}</span>)\n    }\n\n    render() {\n        const tint = this.props.tint === undefined ? \"#137A7F\" : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner, align: \"center\"}\n        const size = this.props.size\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[this.props.data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {borderRadius: defaultRoundCorner}\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={this.state.data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={2} dot={{r: 3}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={2} dot={{r: 3}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: defaultRoundCorner\n        }\n        const tint = this.props.tint === undefined ? [\"#EA0\", \"#08A\"] : this.props.tint\n        let nameLabel = makeAvailable(this.props.children)\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(this.props.data, tint, port, this.props.tooltip)}\n                <label className={'widgetLabel'}>\n                    {nameLabel}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    componentDidMount() {\n        this.render()\n    }\n\n    render() {\n        const dataToConstruct = this.props.keys === undefined ? this.props.data : makeDictionaryPairs(this.props.data, this.props.keys)\n        const tint = setTintArray(this.props.tint)\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"borderRadius\": defaultRoundCorner\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([dataToConstruct], tint, this.props.port, this.props.label)}\n                <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n            </div>\n        )\n    }\n}\n\nexport class AreaChartTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                \"name\": \"Page A\",\n                \"uv\": 4000,\n                \"pv\": 2400,\n                \"amt\": 2400\n            },\n            {\n                \"name\": \"Page B\",\n                \"uv\": 3000,\n                \"pv\": 1398,\n                \"amt\": 2210\n            },\n            {\n                \"name\": \"Page C\",\n                \"uv\": 2000,\n                \"pv\": 9800,\n                \"amt\": 2290\n            },\n            {\n                \"name\": \"Page D\",\n                \"uv\": 2780,\n                \"pv\": 3908,\n                \"amt\": 2000\n            },\n            {\n                \"name\": \"Page E\",\n                \"uv\": 1890,\n                \"pv\": 4800,\n                \"amt\": 2181\n            },\n            {\n                \"name\": \"Page F\",\n                \"uv\": 2390,\n                \"pv\": 3800,\n                \"amt\": 2500\n            },\n            {\n                \"name\": \"Page G\",\n                \"uv\": 3490,\n                \"pv\": 4300,\n                \"amt\": 2100\n            }\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: defaultRoundCorner\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <AreaChart\n                    width={port.width}\n                    height={port.height}\n                    data={this.state.data}\n                    style={transformToCentre}\n                >\n                    <defs>\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                    <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                </AreaChart>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class GreatLegends extends React.Component {\n    getFromData(data, index, key) {\n        try {return data[index][key]}\n        catch (error) {}\n        return undefined\n    }\n    makeEmpty(inside) {\n        return (inside === null || inside === undefined) ? '--' : inside\n    }\n    render() {\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": defaultRoundCorner\n        }\n        if (this.props.type === 'array')\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <div className={'GLContainer'}>\n                    <div className={'GLName'}>\n                        {this.getFromData(this.props.data, this.props.index, this.props.keys[0])}\n                    </div>\n                    <div className={'GLValue'}>\n                        {this.makeEmpty(this.getFromData(this.props.data, this.props.index, this.props.keys[1]))}\n                    </div>\n                </div>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n        if (this.props.type === 'straight') {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div className={'GLContainer'}>\n                        <div className=\"GLName\">\n                            {this.props.name}\n                        </div>\n                        <div className=\"GLValue\">\n                            {this.makeEmpty(this.props.value)}\n                        </div>\n                    </div>\n                    <label className={'widgetLabel'}>\n                        {makeAvailable(this.props.children)}\n                    </label>\n                </div>\n            )\n        }\n        return (<React.Fragment/>)\n    }\n}\n\nexport class SimplePieCharts extends React.Component {\n    render() {\n        const frame = {\n            width: \"100%\",\n            height: \"100%\",\n            borderRadius: defaultRoundCorner,\n        }\n        const duetFrame = {\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            borderRadius: defaultRoundCorner,\n            display: 'flex',\n            flexDirection: 'row'\n        }\n        const RADIAN = Math.PI / 180;\n        const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\n            const radius = innerRadius + (outerRadius - innerRadius) * 0.6;\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n            return (\n                <text x={x} y={y} fill=\"white\" textAnchor={'middle'} dominantBaseline=\"central\">\n                    {`${(percent * 100).toFixed(0)}%`}\n                </text>\n            )\n        }\n        if (this.props.duet === true) {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div style={duetFrame}>\n                        <PieChart\n                            width={this.props.size}\n                            height={this.props.size}\n                        >\n                            <Pie\n                                data={this.props.data}\n                                nameKey={'key'}\n                                dataKey={'value'}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                            >\n                                {this.props.data.map((entry, index) => <Cell fill={this.props.tint[0][index % this.props.tint[0].length]}/>)}\n                            </Pie>\n                                <Legend />\n                        </PieChart>\n                        <PieChart\n                            width={this.props.size}\n                            height={this.props.size}\n                        >\n                            <Pie\n                                data={this.props.data0}\n                                nameKey={'key'}\n                                dataKey={'value'}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                            >\n                                {this.props.data0.map((entry, index) => <Cell fill={this.props.tint[1][index % this.props.tint[1].length]}/>)}\n                            </Pie>\n                            <Legend />\n                        </PieChart>\n                    </div>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <PieChart\n                        width={this.props.size + 50}\n                        height={this.props.size + 50}\n                        style={transformToCentre}\n                    >\n                        <Pie\n                            data={this.props.data}\n                            nameKey={'key'}\n                            dataKey={'value'}\n                            labelLine={false}\n                            label={renderCustomizedLabel}\n                            isAnimationActive={false}\n                        >\n                            {this.props.data.map((entry, index) => <Cell fill={this.props.tint[index % this.props.tint.length]}/>)}\n                        </Pie>\n                        <Legend layout={'vertical'} align={'right'} verticalAlign={'middle'}/>\n                    </PieChart>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n    }\n}","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: 'var(--themeButtonBackground)',\n    color: 'var(--themeColor)',\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n            type: (this.props.type !== undefined) ? this.props.type : \"\",\n            disabled: (this.props.disabled === true),\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick} type={this.state.type} disabled={this.state.disabled}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Suspense } from \"react\";\nimport store, { mapsStore } from \"../Store\";\nimport {\n    Button as MaterialButton,\n    Card, CardActions, CardContent, Typography,\n    FormControl, FormControlLabel, FormGroup, FormLabel,\n    Fade, Modal,\n    Checkbox, Slider, Select, MenuItem, TextField, InputLabel,\n} from \"@material-ui/core\";\nimport MapSwitch from \"../Controllers/Switch\";\nimport { Button } from \"../Controllers/Button\";\nimport { defaultRoundCorner } from \"./widgets\";\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst MapFuture = React.lazy(() => import('./Map'));\nconst PassengerMaps = React.lazy(() => import('./PassengerMaps'))\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction predictionRequest(userArguments) {\n    try {\n        axios.post('/python/predict', {\n            station: userArguments.boom.station,\n            flow: userArguments.boom.flow,\n            dayprop: userArguments.holiday,\n            weather: userArguments.weather.condition,\n            temperatures: [userArguments.weather.temperature.low, userArguments.weather.temperature.high],\n        })\n            .then(response => {console.log(response)})\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            datePicker: false,\n            argumentPicker: false,\n            activated: \"无\",\n            selectedTime: new Date(store.getState().timeline),\n            flowStats: true,\n            storeState: store.getState(),\n            mapsState: mapsStore.getState(),\n            userArguments: {\n                holiday: undefined,\n                weather: {\n                    enabled: false,\n                    condition: '阴',\n                    temperature: {\n                        low: undefined,\n                        high: undefined\n                    }\n                },\n                boom: {\n                    enabled: false,\n                    station: undefined,\n                    flow: undefined,\n                    type: 0,\n                    failure: false,\n                }\n            }\n        }\n        store.subscribe(() => this.setState({storeState: store.getState()}))\n        mapsStore.subscribe(() => this.setState({mapsState: mapsStore.getState()}))\n    }\n\n    handleOpen(modal) {\n        if (modal === 'datePicker') {this.setState({datePicker: !this.state.datePicker})}\n        if (modal === 'argumentPicker') {this.setState({argumentPicker: !this.state.argumentPicker})}\n    }\n    handleTime(e) {\n        this.setState({selectedTime: e})\n    }\n    handleChange(e, argument) {\n        let newArguments = this.state.userArguments\n        if (argument === 'holiday') {\n            newArguments.holiday = e.target.checked\n        }\n        if (argument === 'boomTick') {\n            newArguments.boom.enabled = e.target.checked\n        }\n        if (argument === 'boomType') {\n            newArguments.boom.type = e.target.value\n        }\n        if (argument === 'boom') {\n            newArguments.boom.station = this.state.stationSpectating\n            newArguments.boom.flow = e\n        }\n        if (argument === 'weatherTick') {\n            newArguments.weather.enabled = e.target.checked\n        }\n        if (argument === 'weatherTemperatureLow') {\n            newArguments.weather.temperature.low = e.target.value\n        }\n        if (argument === 'weatherTemperatureHigh') {\n            newArguments.weather.temperature.high = e.target.value\n        }\n        if (argument === 'weather') {\n            newArguments.weather.condition = e.target.value\n        }\n        if (argument === 'failure') {\n            newArguments.boom.failure = e.target.checked\n        }\n        this.setState({userArguments: newArguments})\n    }\n    handlePredictionUpdate(type) {\n        predictionRequest(this.state.userArguments, type)\n        alert('预测请求已经提交'+this.state.userArguments.boom.flow)\n        this.handleOpen('argumentPicker')\n    }\n    handleTimeUpdate() {\n        store.dispatch({\n            type: 'timeUpdate',\n            time: this.state.selectedTime\n        })\n        mapsStore.dispatch({\n            type: 'refresh'\n        })\n        this.handleOpen('datePicker')\n    }\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>线路</td>\n                    <td>{this.state.mapsState.lineSpectating}</td>\n                </tr>\n                <tr>\n                    <td>断面客流</td>\n                    <td>{this.state.mapsState.stationSpectating.flow}</td>\n                </tr>\n                <tr>\n                    <td>高峰时段</td>\n                    <td>9:00</td>\n                </tr>\n            </table>\n        )\n    }\n    stationArguments() {\n        if (this.state.stationSpectating === 'No') {\n            return (\n                <FormLabel component={'legend'}>没有选择站点</FormLabel>\n            )\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <FormLabel component={'legend'}>{this.state.mapsState.stationSpectating.station}</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.userArguments.holiday}\n                                    onChange={(event) => this.handleChange(event, 'failure')}\n                                />\n                            }\n                            label={'故障'}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.userArguments.boom.enabled}\n                                        onChange={(event) => this.handleChange(event, 'boomTick')}\n                                    />\n                                }\n                                label={'突发客流'}\n                            />\n                            <FormGroup row>\n                                <Select\n                                    labelId={'客流类型'}\n                                    id={'客流类型'}\n                                    value={this.state.userArguments.boom.type}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(event) => this.handleChange(event, 'boomType')}\n                                    style={{width: '100%'}}\n                                >\n                                    <MenuItem value={0}>进站</MenuItem>\n                                    <MenuItem value={1}>出站</MenuItem>\n                                    <MenuItem value={2}>进站加</MenuItem>\n                                    <MenuItem value={3}>出站加</MenuItem>\n                                </Select>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Slider\n                                    defaultValue={3000}\n                                    valueLabelDisplay=\"auto\"\n                                    step={10}\n                                    marks\n                                    min={10}\n                                    max={110}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(foo, event) => this.handleChange(event, 'boom')}\n                                />\n                            </FormGroup>\n                        </FormGroup>\n\n                    </FormGroup>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"Layer\"} style={{borderRadius: defaultRoundCorner}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={'MapTimestamp'}>\n                    <span>预览时间线</span>\n                    <span className={this.state.storeState.timeNoGo === true ? '' : 'noGo'}>{this.state.storeState.timeNoGo === true ? '数据可用' : '该时间无数据'}</span>\n                    <br />\n                    <span className={'TimestampDate'}>\n                        {moment(this.state.storeState.timeline).format('MM-DD-YYYY HH:MM')}\n                    </span>\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch\n                        switchOptions={[\"无\", \"热力图\"]}\n                        setState={(e) => (this.setState(e))}\n                        state={this.state}\n                    />\n                    <div style={{display: \"flex\", flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <Button onClick={() => this.handleOpen('datePicker')}>\n                            日期\n                        </Button>\n                        <div style={{width: '.5em'}}/>\n                        <Button onClick={() => store.dispatch({type: 'timeUpdate', live: true})}>\n                            实时\n                        </Button>\n                    </div>\n\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}数据\n                    </Button>\n                    {this.state.flowStats ? <Button onClick={() => this.handleOpen('argumentPicker')}>模拟数据变更</Button> : ''}\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.selectedTime}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"primary\"}\n                                        onClick={() => this.handleTimeUpdate(this.state.storeState.time)}\n                                    >\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"default\"}\n                                        onClick={() => this.handleOpen('datePicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.argumentPicker}>\n                        <Fade in={this.state.argumentPicker}>\n                            <Card style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        输入参数\n                                    </Typography>\n                                    <div className={'DualPanel'}>\n                                        <FormControl component={'fieldset'}>\n                                            <FormLabel component={'legend'}>该时间操作</FormLabel>\n                                            <FormGroup row>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.holiday}\n                                                            onChange={this.state}\n                                                        />\n                                                    }\n                                                    label={'放假'}\n                                                />\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weatherTick')}\n                                                        />\n                                                    }\n                                                    label={'变更天气'}\n                                                />\n                                                <FormGroup>\n                                                    <FormControl>\n                                                        <InputLabel id={'天气选择标签'}>\n                                                            天气类型\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"天气选择\"\n                                                            id=\"天气选择\"\n                                                            value={this.state.userArguments.weather.condition}\n                                                            disabled={!this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weather')}\n                                                        >\n                                                            <MenuItem value={'阴'}>阴</MenuItem>\n                                                            <MenuItem value={'晴'}>晴</MenuItem>\n                                                            <MenuItem value={'多云'}>多云</MenuItem>\n                                                            <MenuItem value={'小雨'}>小雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>中雨</MenuItem>\n                                                            <MenuItem value={'大雨'}>大雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>暴雨</MenuItem>\n                                                            <MenuItem value={'雷阵雨'}>雷阵雨</MenuItem>\n                                                        </Select>\n                                                    </FormControl>\n\n                                                    <TextField\n                                                        id={'最低温度输入'}\n                                                        label={'输入最低摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureLow')}\n                                                    />\n                                                    <TextField\n                                                        id={'最高温度输入'}\n                                                        label={'输入最高摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureHigh')}\n                                                    />\n                                                </FormGroup>\n                                            </FormGroup>\n                                        </FormControl>\n                                        <br />\n                                        <FormControl component={'fieldset'}>\n                                            {this.stationArguments()}\n                                        </FormControl>\n                                    </div>\n                                </CardContent>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"} onClick={() => this.handlePredictionUpdate('meow')}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('argumentPicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>地图正在加载……</div>}>\n                        <MapFuture\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                            mode={this.state.activated}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class PassengerMapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {activated: store.getState().passengerMode}\n        store.subscribe(() => {\n            this.setState({activated: store.getState().passengerMode})\n        })\n    }\n    handlePassengerModeChange(e) {\n        store.dispatch({\n            type: 'changePassengerMode',\n            mode: e.activated\n        })\n    }\n\n    render() {\n        return (\n            <div className={'Layer'} style={{borderRadius: defaultRoundCorner}}>\n                <div className=\"MapControllers\" style={{left: 5, right: 'inherit'}}>\n                    <MapSwitch\n                        switchOptions={[\"总客流\", \"出站\", \"进站\"]}\n                        setState={(e) => (this.handlePassengerModeChange(e))}\n                        state={this.state}\n                    />\n                </div>\n\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={'MLPlaceholder'}>乘客画像地图正在加载……</div>}>\n                        <PassengerMaps\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport { MapsBlock } from '../Widgets/MapsBlock';\nimport { mapsStore } from \"../Store\";\n\nconst body = document.body\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8),\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size, mapsState} = this.state\n        return (\n            <div className={\"OverviewGrid\"} key={'pages-index'}>\n                <div className={\"div1\"}>\n                    <Widgets.DashboardOne size={size} data={mapsState.highestFlow}>\n                        客流最高站点\n                    </Widgets.DashboardOne>\n                </div>\n                <div className={\"div2\"}>\n                    <Widgets.GreatLegends type={'straight'} name={'全网客流量指数'} value={mapsState.overallFlow}>\n                        重点客流量\n                    </Widgets.GreatLegends>\n                </div>\n                <div className={\"div3\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.highestDist4}\n                        zoom={0.1}\n                        tint={['#6099DB', '#DC73BC', '#7BDB6B', '#DBD455']}\n                    >\n                        客流高峰区域\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div4\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.lineFlow}\n                        keys={['linename', 'flow']}\n                        tint={['#6BDB9C', '#DBC760', '#5685DB', '#D9734C']}\n                    >\n                        客流高峰线路\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div5\"}>\n                    <MapsBlock\n                        port={{\"height\": size * 5, \"width\": size * 4}}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\nimport {mapsStore} from \"../Store\";\n\nconst body = document.body\n\nexport class LineHeat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            width: body.scrollWidth / 2.2,\n            height: body.scrollHeight / 10,\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {height, width, mapsState} = this.state\n        return(\n            <div className={\"LHGrid\"} key={'pages-line-heat'}>\n                <div className=\"div1\">\n                    <Widgets.SimpleBars\n                        port={{height: height, width: width * 2}}\n                        data={mapsState.lineFlow}\n                        keys={['linename', 'flow']}\n                        tint={['#09B8A3', '#23EB62', '#F0438F', '#EBBF23', '#A1C0F5', '#0977B8', '#B98AF5', '#F7DF34', '#F75A43', '#65A1C2']}\n                        label={true}\n                    >\n                        当前全网线路客流\n                    </Widgets.SimpleBars>\n                </div>\n                <div className=\"div2\">\n                    <Widgets.SimpleTrends\n                        port={{height: height, width: width}}\n                        tooltip\n                        data={{\n                            xAxisMeasurements: 'meow',\n                            lines: [\n                                {\n                                    name: 'wow',\n                                    values: [1, 2, 3]\n                                },\n                                {\n                                    name: 'argh',\n                                    values: [23, 12, 12]\n                                }\n                            ]\n                        }}\n                    />\n                </div>\n                <div className=\"div3\"></div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n                <div className=\"div7\"></div>\n                <div className=\"div8\"></div>\n                <div className=\"div9\"></div>\n                <div className=\"div10\"></div>\n                <div className=\"div11\"></div>\n                <div className=\"div12\"></div>\n                <div className=\"div13\"></div>\n                <div className=\"div14\"></div>\n                <div className=\"div15\"></div>\n                <div className=\"div16\"></div>\n                <div className=\"div17\"></div>\n                <div className=\"div18\"></div>\n                <div className=\"div19\"></div>\n                <div className=\"div20\"></div>\n            </div>\n        )\n    }\n}\n\nexport class HeatTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize = () => {\n        this.setState({\n            size: body.scrollHeight / 5\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return(\n            <div className={\"THGrid\"} key={'pages-timeline-heat'}>\n                <div className=\"div1\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div2\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div3\">\n                    <Widgets.AreaChartTrends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport {PassengerMapsBlock} from \"../Widgets/MapsBlock\";\nimport store, {mapsStore} from \"../Store\";\n\nconst body = document.body\nconst passengerArray=['16岁以下', '16~25', '25~40', '40~60', '60岁以上', '16岁以下', '16~25', '25~40', '40~60', '60岁以上', '16岁以下', '16~25', '25~40', '40~60', '60岁以上']\n\nclass PassengerAnalytics extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n            activated: store.getState().passengerMode\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsStore: mapsStore.getState().dashboardData})\n        })\n        store.subscribe(() => {\n            this.setState({activated: store.getState().passengerMode})\n        })\n    }\n\n    calculateSize = () => {\n        this.setState({\n            height: body.scrollHeight / 6,\n            width: body.scrollWidth / 6,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 10)\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    arrayCoherence(keys, values, slice) {\n        let newArray = []\n        values.map(function (value, index) {\n            if (slice === undefined) {\n                let newDictionary = {\n                    key: keys[index],\n                    value: value\n                }\n                newArray.push(newDictionary)\n            }\n            else if (index >= slice[0] && index <= slice[1]) {\n                let newDictionary = {\n                    key: keys[index],\n                    value: value\n                }\n                newArray.push(newDictionary)\n            }\n            return true\n        })\n        return newArray\n    }\n    getSlice() {\n        if (this.state.activated === '进站') {\n            return [0, 4]\n        }\n        if (this.state.activated === '出站') {\n            return [5, 9]\n        }\n        if (this.state.activated === '总客流') {\n            return [10, 14]\n        }\n    }\n\n    render() {\n        const {height, width, size} = this.state\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                        <PassengerMapsBlock\n                            port={{height: height * 4, width: width * 2}}\n                        />\n                    </div>\n                    <div className=\"div2\">\n                        <Widgets.SimplePieCharts\n                            size={size * 2}\n                            duet\n                            tint={[['#09B8A3', '#23EB62', '#A1C0F5', '#0977B8', '#658EA4'], ['#F0438F', '#EBBF23']]}\n                            data={this.arrayCoherence(passengerArray, [88, 99, 77, 66, 55, 44, 33, 22, 11, 44, 55, 66, 77, 88, 99, 100], this.getSlice())}\n                            data0={this.arrayCoherence(passengerArray, [88, 99, 77, 66, 55, 44, 33, 22, 11, 44, 55, 66, 77, 88, 99, 100], this.getSlice())}\n                        >\n                            所选站点乘客结构\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div3\">\n                        <Widgets.SimplePieCharts\n                            size={size * 2}\n                            duet\n                            tint={[['#09B8A3', '#23EB62', '#A1C0F5', '#0977B8', '#658EA4'], ['#F0438F', '#EBBF23']]}\n                            data={this.arrayCoherence(passengerArray, [88, 99, 77, 66, 55, 44, 33, 22, 11, 44, 55, 66, 77, 88, 99, 100], [10, 14])}\n                            data0={this.arrayCoherence(passengerArray, [88, 99, 77, 66, 55, 44, 33, 22, 11, 44, 55, 66, 77, 88, 99, 100], [10, 14])}\n                        >\n                            全网乘客结构\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div4\">\n                        <Widgets.SimplePieCharts\n                            size={size}\n                            data={this.arrayCoherence(['u', 'v'], [88, 99])}\n                            tint={['#A1C0F5', '#0977B8']}\n                        >\n                            当前站点客流性别比例\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div5\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                            data={{u:90, p:5}}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div6\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                            data={{u:90, p:5}}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div7\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                            data={{u:90, p:5}}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div8\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                            data={{u:90, p:5}}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from \"react\";\nimport \"./style.css\"\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (this.props.type !== undefined) ? this.props.type : \"text\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={'InputFunction'}>\n                <label>\n                    {this.props.children}\n                </label>\n                <input className={'coilsInput'} type={this.state.type} onChange={(event => this.props.handler(event))}/>\n            </div>\n        )\n    }\n}\n\nexport default Input","import React from \"react\";\nimport { Input, Button } from '../Controllers';\nimport { FormGroup, FormLabel, Slider, Button as MaterialButton } from '@material-ui/core'\nimport axios from \"axios\";\nimport './style.css';\nimport store, { setExpiration, clearStorage } from \"../Store\";\nimport { ThemeSwitch } from \"../Controllers/Switch\";\n\nfunction loginRequest(username, password) {\n    try {\n        axios.post('/api/log', {\n            'username': username,\n            'password': password\n        }).then(function (response) {\n            console.log(response.data)\n            alert(response.data.msg)\n            if (response.data.code === 200) {\n                store.dispatch({\n                    type: 'login',\n                    loginState: true,\n                    session: response.data\n                })\n            }\n        })\n    }\n    catch (error) {\n        alert('网络连接出现了一些问题')\n        console.error(error);\n    }\n}\n\nclass CertForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: 1,\n        }\n    }\n    CertChange(type) {\n        let feedbackInfo\n        if (type === 'logout') {\n            feedbackInfo = '注销凭据完成'\n            const action = {\n                type: 'certMan',\n                logout: true\n            }\n            store.dispatch(action)\n        }\n        if (type === 'cache') {\n            feedbackInfo = '保存凭据' + this.state.duration +'天'\n            setExpiration(this.state.duration)\n        }\n        alert(feedbackInfo)\n    }\n    handleSlider = (event, newValue) => {\n        this.setState({duration: newValue})\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <ThemeSwitch/>\n                <div className={'Description'}>\n                    可以按 [K] 快速切换主题\n                </div>\n                <form\n                    style={{marginTop: '2em'}}\n                    onSubmit={() => this.CertChange('cache', this.state.duration)}\n                >\n                    <FormGroup>\n                        <FormLabel style={{color: 'var(--ThemeColor)'}} component={'legend'}>保存凭据时长（天）</FormLabel>\n                        <div style={{margin: '0 auto', width: 'calc(100% - 20px)'}}>\n                            <Slider\n                                defaultValue={1}\n                                valueLabelDisplay=\"auto\"\n                                step={5}\n                                marks\n                                min={1}\n                                max={31}\n                                onChange={this.handleSlider}\n                            />\n                        </div>\n                    </FormGroup>\n                    <div style={{display: \"flex\", flexDirection: 'row'}}>\n                        <Button type={'submit'}>\n                            保存凭据\n                        </Button>\n                        <div style={{width: '.5em'}}/>\n                        <Button onClick={() => this.CertChange('logout')}>\n                            注销\n                        </Button>\n                    </div>\n                    <br />\n                    <MaterialButton\n                        size={'small'}\n                        style={{color: '#F66'}}\n                        onClick={() => clearStorage()}\n                    >\n                        清除本地数据并注销\n                    </MaterialButton>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState(),\n            username: '',\n            password: ''\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n    handleLogin(event) {\n        event.preventDefault()\n        loginRequest(this.state.username, this.state.password)\n    }\n    handleForm(event, type) {\n        if (type === 'username') {\n            this.setState({username: event.target.value})\n        }\n        if (type === 'password') {\n            this.setState({password: event.target.value})\n        }\n    }\n\n    render() {\n        let FormSheet, hello\n        const LoginForm = [\n            <form onSubmit={(e) => this.handleLogin(e)}>\n                <div className={\"AuthForm\"}>\n                    <div>\n                        <Input handler={(e) => {this.handleForm(e, 'username')}}>\n                            用户名称\n                        </Input>\n                        <Input type={\"password\"} handler={(e) => {this.handleForm(e, 'password')}}>\n                            密码\n                        </Input>\n                    </div>\n                    <div className={\"Button\"}>\n                        <Button type={\"submit\"}>\n                            好\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        ]\n\n        if (this.state.store.loginState) {\n            FormSheet = [<CertForm/>]\n            hello = \"认证管理\"\n        }\n        else {\n            FormSheet = LoginForm\n            hello = \"认证\"\n        }\n\n        return (\n            <React.Fragment>\n                <div id={'Amaze'}/>\n                <div id={'ActualCard'}>\n                    <h1>\n                        {hello}\n                    </h1>\n                </div>\n                <div id={'Maze'}/>\n                    <section className={\"AuthCard\"}>\n                        {FormSheet}\n                    </section>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport Overview from \"./Overview\";\nimport { LineHeat, HeatTimeline } from \"./LineHeat\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport Login from \"./Authenticate\";\nimport './index.css';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, {exposedMethods, mapsStore} from \"./Store\";\n\nconst root = document.documentElement\n\nfunction setTheme() {\n    if (store.getState().theme === 'light') {\n        root.style.setProperty('--themeTable', '#E3E3E3')\n        root.style.setProperty('--themeBorder', 'none')\n        root.style.setProperty('--themeColor', '#443')\n        root.style.setProperty('--themeHover', '#220')\n        root.style.setProperty('--themeActive', '#220')\n        root.style.setProperty('--themeLayer', 'rgba(250, 250, 250, 0.8)')\n        root.style.setProperty('--themeFilter', 'screen')\n        root.style.setProperty('--themeDarkFilter', 'brightness(1.17)')\n        root.style.setProperty('--themePure0', 'rgba(255, 255, 255, 1)')\n        root.style.setProperty('--themePure1', 'rgba(255, 255, 255, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(80, 80, 80, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#FFF')\n        root.style.setProperty('--controlBlur', '#553')\n        root.style.setProperty('--dockBorderSize', '1px')\n        root.style.setProperty('--actualFilter', 'rgba(255, 255, 255, .8)')\n    }\n    if (store.getState().theme === 'dark') {\n        root.style.setProperty('--themeTable', '#171717')\n        root.style.setProperty('--themeBorder', '0 0 1.5px #EEE')\n        root.style.setProperty('--themeColor', '#EEE')\n        root.style.setProperty('--themeHover', '#AAB')\n        root.style.setProperty('--themeActive', '#FFF')\n        root.style.setProperty('--themeLayer', 'rgba(53, 53, 53, 0.8)')\n        root.style.setProperty('--themeFilter', 'multiply')\n        root.style.setProperty('--themeDarkFilter', 'brightness(.25)')\n        root.style.setProperty('--themePure0', 'rgba(64, 64, 64, 1)')\n        root.style.setProperty('--themePure1', 'rgba(0, 0, 0, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(255, 255, 255, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#535353')\n        root.style.setProperty('--controlBlur', '#BBC')\n        root.style.setProperty('--dockBorderSize', '2px')\n        root.style.setProperty('--actualFilter', 'rgba(0, 0, 25, .15)')\n\n    }\n}\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {storeState: store.getState()}\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){this.setState({storeState: store.getState()})}\n    componentDidMount() {\n        mapsStore.dispatch({type: 'refresh'})\n    }\n\n    render() {\n        setTheme()\n        let pagesList = []\n        if (this.state.storeState.loginState === true) {\n            pagesList.push(\n                <Switch>\n                    <Route exact path={\"./\"}>\n                        <Redirect to={\"Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"} component={AnimationApp}/>\n                </Switch>\n            )\n        }\n        else {\n            pagesList.push(\n                <Switch>\n                    <Route path={\"*\"}>\n                        <Login />\n                    </Route>\n                </Switch>\n            )\n        }\n        return (\n            <PersistGate store={store} persistor={exposedMethods}>\n                <Router>\n                    {pagesList}\n                </Router>\n            </PersistGate>\n        )\n    }\n}\n\nclass AnimationApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            handling: 0,\n            redirect: undefined\n        }\n    }\n    wary(e) {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        this.setState({redirect: e})\n        this.setState({redirect: undefined})\n    }\n    themeSwitcherWary() {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        store.dispatch({type: 'switchTheme'})\n    }\n\n    componentDidMount() {\n        let done = () => {\n            this.setState({handling: 0})\n        }\n        store.subscribe(() => {\n            setTimeout(done, 500, done)\n        })\n        this.props.history.listen(location => {\n            mapsStore.dispatch({type: 'refresh'})\n            if (this.props.location.pathname !== location.pathname) {\n                setTimeout(done, 500, done)\n            }\n        })\n    }\n    render() {\n        const redirect = {\n            state: this.state.redirect,\n            handling: this.state.handling,\n            set: (e) => this.wary(e),\n            done: () => this.done()\n        }\n        const themeSwitchKey = () => this.themeSwitcherWary()\n\n        function handleShortcutKey(key) {\n            const destination = ['Overview', 'LineHeat', 'HeatTimeline', 'PassengerAnalytics', 'Authenticate']\n            redirect.set(<Redirect to={destination[key - 1]}/>)\n        }\n        // keyboard shortcuts\n        window.addEventListener(\"keyup\", function (e) {\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (e.key !== undefined) {\n                if (e.key === '1') {handleShortcutKey(1)}\n                if (e.key === '2') {handleShortcutKey(2)}\n                if (e.key === '3') {handleShortcutKey(3)}\n                if (e.key === '4') {handleShortcutKey(4)}\n                if (e.key === 'L' || e.key === 'l') {handleShortcutKey(5)}\n                if (e.key === 'K' || e.key === 'k') {themeSwitchKey()}\n                return;\n            }\n            else if (e.code !== undefined) {\n                if (e.code === 'Digit1') {handleShortcutKey(1)}\n                if (e.code === 'Digit2') {handleShortcutKey(2)}\n                if (e.code === 'Digit3') {handleShortcutKey(3)}\n                if (e.code === 'Digit4') {handleShortcutKey(4)}\n                if (e.code === 'KeyL') {handleShortcutKey(5)}\n                if (e.code === 'KeyK') {themeSwitchKey()}\n                return;\n            }\n        })\n\n        return (\n            <React.Fragment>\n                {this.state.redirect}\n                <div className=\"Dock\">\n                    <NavLink key={\"Overview\"} to={\"Overview\"} activeClassName={\"active\"} exact>\n                        <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                    </NavLink>\n                    <NavLink key={\"LineHeat\"} to={\"LineHeat\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>线路分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"HeatTimeline\"} to={\"HeatTimeline\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>时段分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"PassengerAnalytics\"} to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>用户画像<span>3</span></button>\n                    </NavLink>\n                    <NavLink key={\"Authenticate\"} to={\"Authenticate\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>认证与设置<span>L</span></button>\n                    </NavLink>\n                </div>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={this.props.location}\n                        classNames={\"fade\"}\n                        timeout={250}\n                    >\n                        <Switch>\n                            <Route path={`*/Overview`} component={Overview}/>\n                            <Route path={`*/LineHeat`} component={LineHeat}/>\n                            <Route path={`*/HeatTimeline`} component={HeatTimeline}/>\n                            <Route path={`*/PassengerAnalytics`} component={PassengerAnalytics}/>\n                            <Route path={`*/Authenticate`} component={Login}/>\n                            <Route path={`*`}>\n                                <Redirect to={\"Overview\"}/>\n                            </Route>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}