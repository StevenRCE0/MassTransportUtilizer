{"version":3,"sources":["Controllers/Switch.js","Map.js","Widgets/widgets.js","Overview/index.js","PassengerAnalytics/index.js","App.js","reportWebVitals.js","index.js"],"names":["MapSwitch","props","state","switchOptions","this","setState","allOptions","optionsController","forEach","perOption","acClass","activated","push","id","onClick","className","enumOptions","React","Component","stationData","require","pathData","lineTintArray","Point","x","y","level","type","line","station","match","radius","fill","setPanel","innerRadius","outerRadius","tint","text","fontSize","Path","x1","y1","x2","y2","strokeWidth","points","stroke","Panel","width","height","MapFuture","pos","panel","alert","undefined","Fragment","widthIndex","heightIndex","pathSet","map","path","pointSet","point","showPanel","transformToCentre","position","left","top","transform","linesConstructor","dataArray","tintArray","lines","converted","drawn","lineIndex","values","partPoint","name","Object","assign","dot","r","dataKey","data","style","barConstructor","keys","console","log","barContent","key","index","Dashboard","rounded","size","spacing","value","frame","borderRadius","slice","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","port","pv","amt","uv","SimpleTrends","xAxisMeasurement","SimpleBars","propTintArray","propData","sampleData","warn","MapsBlock","e","Map","Index","calculateSize","Math","min","window","innerHeight","innerWidth","addEventListener","removeEventListener","PassengerAnalytics","AnimationApp","location","useLocation","to","activeClassName","exact","TransitionGroup","CSSTransition","classNames","timeout","Overview","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0abc8837.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport {Stage, Layer, Circle, Group, Text, Ring, Line, Rect} from \"react-konva\";\nimport \"./Overview/style.css\";\n\nconst stationData = require('./stationaryPlaceholder/stations.json');\nconst pathData = require('./stationaryPlaceholder/paths.json');\nconst lineTintArray = [\n    \"#ADEA7D\", \"#FBDE5D\", \"#E23424\", \"#3487E9\", \"#6937E5\",\"#984323\", \"#000\", \"#000\", \"#AF7525\", \"#8643B5\", \"#567874\", \"#227754\", \"#85468E\"\n]\n\nclass Point extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.id,\n            x: this.props.x,\n            y: this.props.y,\n            level: this.props.level,\n            type: this.props.type,\n            line: this.props.line,\n            station: this.props.station.match('[0-9]+'),\n        }\n    }\n\n    render() {\n        const basis = 2;\n        const multiplier = 2;\n        const radius = this.state.level * multiplier * basis;\n        return (\n            <Group x={this.state.x} y={this.state.y}>\n                <Circle\n                    radius={radius * 0.5}\n                    fill={'#FFF'}\n                    onClick={() => this.props.setPanel(0, 'station', [this.state.x, this.state.y], 1)}\n                />\n                <Ring\n                    innerRadius={radius * 0.5}\n                    outerRadius={radius}\n                    fill={this.props.tint}\n                />\n                <Text\n                    text={this.state.station}\n                    fontSize={9}\n                    x={radius * 1.5 + 5}\n                />\n            </Group>\n        )\n    }\n}\n\nclass Path extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.id,\n            x1: this.props.x1,\n            y1: this.props.y1,\n            x2: this.props.x2,\n            y2: this.props.y2,\n            level: this.props.level,\n            line: this.props.line\n        }\n    }\n\n    render() {\n        const strokeWidth = 5 + this.state.level * 0.1;\n        return (\n            <Line\n                x={0}\n                y={0}\n                points={[this.state.x1, this.state.y1, this.state.x2, this.state.y2]}\n                stroke={'#DDD'}\n                strokeWidth={strokeWidth}\n            />\n        )\n    }\n}\n\nclass Panel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: this.props.x,\n            y: this.props.y,\n        }\n        if (this.props.type === 'station') {\n\n        }\n    }\n\n    render() {\n        const width = 50;\n        const height = 80;\n\n        return (\n            <Group>\n                <Rect width={width} height={height} fill={'#EEE'}/>\n            </Group>\n        )\n    }\n}\n\nclass MapFuture extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    setPanel(id, type, pos, activated) {\n        this.setState({panel: {pos, id}});\n        alert('nyan');\n    }\n\n\n    showPanel() {\n        if (this.state.pos === undefined) {\n            return (\n                <React.Fragment/>\n            )\n        }\n        return (\n            <Panel\n                x={this.state.pos[0]}\n                y={this.state.pos[1]}\n            />\n        )\n    }\n\n    render() {\n        const widthIndex = this.props.width / 1285\n        const heightIndex = this.props.height / 1037\n        let pathSet = pathData.map(function (path) {\n            return (\n                <Path\n                    x1={path.x1 * (widthIndex)}\n                    y1={path.y1 * (heightIndex)}\n                    x2={path.x2 * widthIndex}\n                    y2={path.y2 * heightIndex}\n                    level={1}\n                />\n            )\n        });\n        let pointSet = stationData.map(function (point) {\n            return (\n                <Point\n                    x={point.x * widthIndex} y={point.y * heightIndex} level={1} station={point.station} line={point.line}\n                    tint={lineTintArray[point.line.match(\"^[0-9]+\")]}\n                />\n            )\n        })\n\n        return (\n            <Stage height={this.props.height + 50} width={this.props.width + 50}>\n                <Layer id={'FMpaths'}>\n                    {pathSet}\n                </Layer>\n                <Layer id={'FMstations'}>\n                    {pointSet}\n                </Layer>\n                <Layer id={'FMpanels'}>\n                    {this.showPanel()}\n                </Layer>\n            </Stage>\n        )\n    }\n}\n\nexport default MapFuture","import React from 'react';\nimport './style.css';\nimport {\n    RadialBarChart,\n    RadialBar,\n    PolarAngleAxis,\n    Legend,\n    Cell,\n    LineChart,\n    CartesianGrid,\n    XAxis,\n    YAxis, Line, BarChart, Bar\n} from \"recharts\";\nimport '../Controllers/Switch';\nimport MapFuture from \"../Map\";\nimport MapSwitch from \"../Controllers/Switch\";\n// import {Layer, Rect, Stage} from \"react-konva\n// import {CircularProgress} from \"@material-ui/core\";\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    }\n    else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\n\nfunction constructData(propData, sampleData) {\n    if (propData !== undefined) {\n        if (propData == null) {\n            console.warn(\"Null data received\")\n        }\n        return propData\n    }\n    else return sampleData\n}\n\nfunction linesConstructor(dataArray, tintArray, state) {\n    const lines = dataArray.lines\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function(y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{r: 6}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={4}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend />\n            {drawn}\n        </LineChart>\n    )\n}\n\nfunction barConstructor(dataArray, tintArray, state) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    console.log(keys)\n     const barContent = keys.map(function (key, index) {\n        return(\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n            />\n        )\n    })\n\n    return(\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend />\n        </BarChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20\n        }\n    }\n    render() {\n        const size = this.props.size * 2\n        const spacing = size / 8\n        const data = [{name: '摸', value: 40}, {name: '到', value: 90}, {name: '飞', value: 60}, {name: '起', value: 70}];\n        const tint = [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded}\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(0, 1)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0} wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(1, 2)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                        <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0} wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(2, 3)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                        <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0} wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(3, 4)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0} wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {rounded: 20}\n    }\n    greatLegend(value) {\n        return (\n            <span>{value}</span>\n        )\n    }\n    render() {\n        const data = {name: '鸽子力', value: 80};\n        const tint = \"#137A7F\"\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded, align: \"center\"}\n        const size = this.props.size\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20\n        }\n    }\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#A00\", \"#00A\"]\n        const data = [\n            {\n                name: 'Page A', key: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ];\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={4} dot={{r: 6}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={4} dot={{r: 6}}/>\n                </LineChart>\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20\n        }\n    }\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#EA0\", \"#08A\"]\n        const lineData = {\n            xAxisMeasurement: \"XExample\",\n            lines: [\n                {\n                    name: 'One',\n                    values: [\n                        4000,\n                        5000,\n                        3500,\n                        5000\n                    ]\n                },\n                {\n                    name: \"Two\",\n                    values: [\n                        7500,\n                        5560,\n                        2280,\n                        5600\n                    ]\n                },\n            ]\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(lineData, tint, port)}\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n        }\n    }\n    render() {\n        const port = this.props.port\n        const tint = setTintArray(this.props.tint)\n        const data = constructData(this.props.data, {\"uv\": 900, \"pv\": 609})\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": this.state.rounded\n        }\n        return(\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([data], tint, port)}\n            </div>\n        )\n    }\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            activated: \"无\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={\"Layer\"} style={{borderRadius: this.state.rounded}}>\n                <MapSwitch switchOptions={[\"无\",\"热力图\"]} state={this.state}\n                    setState={(e) => (this.setState(e))}\n                />\n                <div style={transformToCentre}>\n                    <MapFuture height={this.props.port.height} width={this.props.port.width}/>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\n\nclass Index extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(window.innerHeight / 6, window.innerWidth / 8)\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return (\n            <React.Fragment>\n                <div className={\"OverviewGrid\"}>\n                    <div className={\"div1\"}>\n                        <Widgets.MapsBlock\n                            port={{\"height\": size * 4, \"width\": size * 4}}\n                        />\n                    </div>\n                    <div className={\"div2\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div3\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div4\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div5\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div6\"}>\n                        <Widgets.Dashboard size={size}/>\n                    </div>\n                    <div className={\"div7\"}>\n                        <Widgets.Dashboard size={size}/>\n                    </div>\n                    <div className={\"div8\"}>\n                        <Widgets.Trends\n                            port={{\"height\": size, \"width\": size * 2}}\n                        />\n                    </div>\n                    <div className={\"div9\"}>\n                        <Widgets.SimpleTrends\n                            port={{\"height\": size, \"width\": size * 3}}\n                        />\n                    </div>\n                    <div className={\"div10\"}>\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\n\nclass PassengerAnalytics extends React.Component {\n    render() {\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                    </div>\n                    <div className=\"div2\"></div>\n                    <div className=\"div3\"></div>\n                    <div className=\"div4\"></div>\n                    <div className=\"div5\"></div>\n                    <div className=\"div6\"></div>\n                    <div className=\"div7\"></div>\n                    <div className=\"div8\"></div>\n                    <div className=\"div9\"></div>\n                    <div className=\"div10\"></div>\n                    <div className=\"div11\"></div>\n                    <div className=\"div12\"></div>\n                    <div className=\"div13\"></div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n    useLocation\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport Overview from \"./Overview\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport './index.css';\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route exact path={\"/\"}>\n                        <Redirect to={\"/Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"}>\n                        <AnimationApp/>\n                    </Route>\n                </Switch>\n\n            </Router>\n        </React.Fragment>\n    );\n}\n\nfunction AnimationApp() {\n    let location = useLocation();\n    return (\n        <div>\n            <div className=\"Dock\">\n                <NavLink to={\"Overview\"} activeClassName={\"active\"} exact>\n                    <button className={\"DockNavigation\"}>概览</button>\n                </NavLink>\n                <NavLink to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                    <button className=\"DockNavigation\">客流情况分析</button>\n                </NavLink>\n            </div>\n            <TransitionGroup>\n                <CSSTransition\n                    key={location}\n                    classNames={\"fade\"}\n                    timeout={250}\n                >\n                    <Switch>\n                        <Route path={\"/Overview\"}>\n                            <Overview/>\n                        </Route>\n                        <Route path={\"/PassengerAnalytics\"}>\n                            <PassengerAnalytics/>\n                        </Route>\n                    </Switch>\n                </CSSTransition>\n            </TransitionGroup>\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      {/*<Popup title={\"测试用的盒子\"}>*/}\n      {/*    <Input>*/}\n      {/*        \"Nyan\"*/}\n      {/*    </Input>*/}\n      {/*</Popup>*/}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}