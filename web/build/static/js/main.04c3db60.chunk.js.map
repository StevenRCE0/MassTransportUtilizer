{"version":3,"sources":["Controllers/Switch.js","Widgets/widgets.js","Overview/index.js","PassengerAnalytics/index.js","App.js","reportWebVitals.js","index.js"],"names":["MapSwitch","props","state","switchOptions","this","setState","allOptions","optionsController","forEach","perOption","acClass","activated","push","id","onClick","className","enumOptions","React","Component","MapFuture","lazy","transformToCentre","position","left","top","transform","linesConstructor","dataArray","tintArray","lines","converted","drawn","map","line","lineIndex","values","y","x","partPoint","name","Object","assign","type","dot","r","dataKey","stroke","strokeWidth","data","width","height","style","barConstructor","keys","console","log","barContent","key","index","fill","Dashboard","rounded","size","spacing","value","tint","frame","borderRadius","slice","innerRadius","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","port","pv","amt","uv","SimpleTrends","xAxisMeasurement","SimpleBars","propTintArray","propData","sampleData","undefined","warn","MapsBlock","e","fallback","Index","calculateSize","Math","min","window","innerHeight","innerWidth","addEventListener","removeEventListener","Fragment","PassengerAnalytics","AnimationApp","location","useLocation","to","activeClassName","exact","TransitionGroup","CSSTransition","classNames","timeout","path","Overview","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04c3db60.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from 'react';\nimport {Suspense} from \"react\";\nimport './style.css';\nimport {\n    RadialBarChart,\n    RadialBar,\n    PolarAngleAxis,\n    Legend,\n    Cell,\n    LineChart,\n    CartesianGrid,\n    XAxis,\n    YAxis, Line, BarChart, Bar\n} from \"recharts\";\nimport '../Controllers/Switch';\nimport MapSwitch from \"../Controllers/Switch\";\n// import {Layer, Rect, Stage} from \"react-konva\n// import {CircularProgress} from \"@material-ui/core\";\nconst MapFuture = React.lazy(() => import('../Map'));\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    }\n    else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\n\nfunction constructData(propData, sampleData) {\n    if (propData !== undefined) {\n        if (propData == null) {\n            console.warn(\"Null data received\")\n        }\n        return propData\n    }\n    else return sampleData\n}\n\nfunction linesConstructor(dataArray, tintArray, state) {\n    const lines = dataArray.lines\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function(y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{r: 6}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={4}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend />\n            {drawn}\n        </LineChart>\n    )\n}\n\nfunction barConstructor(dataArray, tintArray, state) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    console.log(keys)\n     const barContent = keys.map(function (key, index) {\n        return(\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n            />\n        )\n    })\n\n    return(\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend />\n        </BarChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20\n        }\n    }\n    render() {\n        const size = this.props.size * 2\n        const spacing = size / 8\n        const data = [{name: '摸', value: 40}, {name: '到', value: 90}, {name: '飞', value: 60}, {name: '起', value: 70}];\n        const tint = [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded}\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(0, 1)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0} wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(1, 2)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                        <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0} wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(2, 3)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                        <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0} wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(3, 4)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0} wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {rounded: 20}\n    }\n    greatLegend(value) {\n        return (\n            <span>{value}</span>\n        )\n    }\n    render() {\n        const data = {name: '鸽子力', value: 80};\n        const tint = \"#137A7F\"\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded, align: \"center\"}\n        const size = this.props.size\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20\n        }\n    }\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#A00\", \"#00A\"]\n        const data = [\n            {\n                name: 'Page A', key: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ];\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={4} dot={{r: 6}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={4} dot={{r: 6}}/>\n                </LineChart>\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20\n        }\n    }\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#EA0\", \"#08A\"]\n        const lineData = {\n            xAxisMeasurement: \"XExample\",\n            lines: [\n                {\n                    name: 'One',\n                    values: [\n                        4000,\n                        5000,\n                        3500,\n                        5000\n                    ]\n                },\n                {\n                    name: \"Two\",\n                    values: [\n                        7500,\n                        5560,\n                        2280,\n                        5600\n                    ]\n                },\n            ]\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(lineData, tint, port)}\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n        }\n    }\n    render() {\n        const port = this.props.port\n        const tint = setTintArray(this.props.tint)\n        const data = constructData(this.props.data, {\"uv\": 900, \"pv\": 609})\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": this.state.rounded\n        }\n        return(\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([data], tint, port)}\n            </div>\n        )\n    }\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            activated: \"无\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={\"Layer\"} style={{borderRadius: this.state.rounded}}>\n                <MapSwitch switchOptions={[\"无\",\"热力图\"]} state={this.state}\n                    setState={(e) => (this.setState(e))}\n                />\n                <div style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>Maps loading...</div>}>\n                        <MapFuture height={this.props.port.height} width={this.props.port.width}/>\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\n\nclass Index extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(window.innerHeight / 6, window.innerWidth / 8)\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return (\n            <React.Fragment>\n                <div className={\"OverviewGrid\"}>\n                    <div className={\"div1\"}>\n                        <Widgets.MapsBlock\n                            port={{\"height\": size * 4, \"width\": size * 4}}\n                        />\n                    </div>\n                    <div className={\"div2\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div3\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div4\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div5\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div6\"}>\n                        <Widgets.Dashboard size={size}/>\n                    </div>\n                    <div className={\"div7\"}>\n                        <Widgets.Dashboard size={size}/>\n                    </div>\n                    <div className={\"div8\"}>\n                        <Widgets.Trends\n                            port={{\"height\": size, \"width\": size * 2}}\n                        />\n                    </div>\n                    <div className={\"div9\"}>\n                        <Widgets.SimpleTrends\n                            port={{\"height\": size, \"width\": size * 3}}\n                        />\n                    </div>\n                    <div className={\"div10\"}>\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\n// import * as Widgets from '../Widgets/widgets';\n\nclass PassengerAnalytics extends React.Component {\n    render() {\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                    </div>\n                    <div className=\"div2\"></div>\n                    <div className=\"div3\"></div>\n                    <div className=\"div4\"></div>\n                    <div className=\"div5\"></div>\n                    <div className=\"div6\"></div>\n                    <div className=\"div7\"></div>\n                    <div className=\"div8\"></div>\n                    <div className=\"div9\"></div>\n                    <div className=\"div10\"></div>\n                    <div className=\"div11\"></div>\n                    <div className=\"div12\"></div>\n                    <div className=\"div13\"></div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n    useLocation\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport Overview from \"./Overview\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport './index.css';\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route exact path={\"/\"}>\n                        <Redirect to={\"/Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"}>\n                        <AnimationApp/>\n                    </Route>\n                </Switch>\n\n            </Router>\n        </React.Fragment>\n    );\n}\n\nfunction AnimationApp() {\n    let location = useLocation();\n    return (\n        <div>\n            <div className=\"Dock\">\n                <NavLink to={\"Overview\"} activeClassName={\"active\"} exact>\n                    <button className={\"DockNavigation\"}>概览</button>\n                </NavLink>\n                <NavLink to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                    <button className=\"DockNavigation\">客流情况分析</button>\n                </NavLink>\n            </div>\n            <TransitionGroup>\n                <CSSTransition\n                    key={location}\n                    classNames={\"fade\"}\n                    timeout={250}\n                >\n                    <Switch>\n                        <Route path={\"/Overview\"}>\n                            <Overview/>\n                        </Route>\n                        <Route path={\"/PassengerAnalytics\"}>\n                            <PassengerAnalytics/>\n                        </Route>\n                    </Switch>\n                </CSSTransition>\n            </TransitionGroup>\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      {/*<Popup title={\"测试用的盒子\"}>*/}\n      {/*    <Input>*/}\n      {/*        \"Nyan\"*/}\n      {/*    </Input>*/}\n      {/*</Popup>*/}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}