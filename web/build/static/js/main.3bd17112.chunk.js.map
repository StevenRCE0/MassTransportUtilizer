{"version":3,"sources":["Store/methods.js","Store/mapsUpdater.js","Store/index.js","Controllers/Switch.js","Widgets/widgets.js","Controllers/Button.js","Widgets/MapsBlock.js","Overview/index.js","LineHeat/index.js","PassengerAnalytics/index.js","Controllers/Input.js","Authenticate/index.js","App.js","reportWebVitals.js","index.js"],"names":["defaultState","active","loginState","timeUpToDate","time","Date","lineSpectating","stationSpectating","flowSpectating","peakSpectating","Store","state","action","type","newState","JSON","parse","stringify","alert","logout","line","hoverType","hoverID","defaultValue","stationData","pathData","newMapState","require","expires","setExpiration","schoolDays","undefined","persistConfig","key","storage","CookieStorage","Cookies","expiration","default","persistedMethods","persistReducer","methods","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","exposedMethods","persistStore","mapsPersistConfig","mapsMethods","mapsUpdater","mapsStore","mapsExposedMethods","MapSwitch","props","switchOptions","this","setState","allOptions","optionsController","forEach","perOption","acClass","activated","push","id","onClick","className","enumOptions","React","Component","transformToCentre","position","left","top","transform","linesConstructor","dataArray","tintArray","lines","converted","drawn","map","lineIndex","values","y","x","partPoint","name","Object","assign","dot","r","dataKey","stroke","strokeWidth","data","width","height","style","barConstructor","keys","console","log","barContent","index","fill","Dashboard","rounded","children","nameLabel","size","spacing","tint","frame","borderRadius","Fragment","value","slice","innerRadius","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","port","pv","amt","uv","SimpleTrends","xAxisMeasurement","SimpleBars","propTintArray","propData","sampleData","warn","MNButtonStyle","backgroundColor","Button","variant","MapFuture","lazy","MapsBlock","datePicker","argumentPicker","selectedTime","flowStats","getState","userArguments","holiday","boom","enabled","station","flow","storeChange","bind","subscribe","modal","e","argument","newArguments","target","checked","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","onChange","label","handleChange","row","Slider","valueLabelDisplay","step","marks","min","max","disabled","dispatch","opacity","userSelect","cursor","getStats","handleOpen","triggerStats","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","margin","utils","MomentUtils","handleTime","CardActions","color","FormControl","stationArguments","fallback","mode","body","document","Index","calculateSize","Math","scrollHeight","scrollWidth","addEventListener","removeEventListener","retrieveData","LineHeat","HeatTimeline","offsetWidth","PassengerAnalytics","Input","CertForm","event","feedbackInfo","option","preventDefault","onSubmit","CertChange","RadioGroup","Radio","Login","FormSheet","hello","LoginForm","App","pagesList","exact","path","to","AnimationApp","persistor","handleShortcutKey","location","replace","defaultPrevented","code","activeClassName","TransitionGroup","CSSTransition","classNames","timeout","Overview","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3bd17112.chunk.js","sourcesContent":["const defaultState = {\n    active: \"dashboard\",\n    loginState: false,\n    timeUpToDate: true,\n    time: new Date(),\n    lineSpectating: 'No',\n    stationSpectating: 'No',\n    flowSpectating: -1,\n    peakSpectating: -1\n}\nconst Store = (state = defaultState, action) => {\n    if (action.type === 'login' && action.loginState) {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.loginState = true\n        alert(\"认证成功了\")\n        return newState\n    }\n    if (action.type === 'certMan') {\n        if (action.logout) {\n            return defaultState\n        }\n    }\n    if (action.type === 'hoverUpdate') {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.lineSpectating = action.line\n        if (action.hoverType === 'station') {\n            newState.stationSpectating = action.hoverID\n        }\n        return newState\n    }\n\n    return state\n}\nexport default Store","const defaultValue = {\n    stationData: {},\n    pathData: {}\n}\nconst Store = (state = defaultValue, action) => {\n    if (action.type === 'refresh') {\n        let newMapState = JSON.parse(JSON.stringify(state))\n        newMapState.stationData = require('../stationaryPlaceholder/stations.json')\n        newMapState.pathData = require('../stationaryPlaceholder/paths.json')\n        return newMapState\n    }\n    return state\n}\nexport default Store","import { createStore } from \"redux\";\nimport methods from './methods';\nimport mapsUpdater from './mapsUpdater';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { CookieStorage } from 'redux-persist-cookie-storage';\nimport storage from 'redux-persist/lib/storage';\nimport Cookies from 'cookies-js';\n\nlet expires = 22 * 86400\n\nexport function setExpiration(schoolDays)\n{\n    if (schoolDays === undefined) {\n        schoolDays = 22\n    }\n    expires = schoolDays * 86400;\n}\n\n//组件数据和会话\nconst persistConfig = {\n    key: 'root',\n    storage: new CookieStorage(Cookies, {expiration:\n        {default: expires}\n    })\n}\nconst persistedMethods = persistReducer(persistConfig, methods)\nlet store = createStore(persistedMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport let exposedMethods = persistStore(store)\nexport default store\n\n//地图存储\nconst mapsPersistConfig = {\n    key: 'maps',\n    storage: storage\n}\nconst mapsMethods = persistReducer(mapsPersistConfig, mapsUpdater)\nexport let mapsStore = createStore(mapsMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport let mapsExposedMethods = persistStore(mapsStore)","import React from \"react\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport './style.css';\nimport {\n    RadialBarChart,\n    RadialBar,\n    PolarAngleAxis,\n    Legend,\n    Cell,\n    LineChart,\n    CartesianGrid,\n    XAxis,\n    YAxis, Line, BarChart, Bar\n} from \"recharts\";\nimport '../Controllers/Switch';\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\n\nfunction constructData(propData, sampleData) {\n    if (propData !== undefined) {\n        if (propData == null) {\n            console.warn(\"Null data received\")\n        }\n        return propData\n    } else return sampleData\n}\n\nfunction linesConstructor(dataArray, tintArray, state) {\n    const lines = dataArray.lines\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{r: 6}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={4}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend/>\n            {drawn}\n        </LineChart>\n    )\n}\n\nfunction barConstructor(dataArray, tintArray, state) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    console.log(keys)\n    const barContent = keys.map(function (key, index) {\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n            />\n        )\n    })\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            name: this.props.children\n        }\n    }\n\n    render() {\n        const size = this.props.size * 2\n        const spacing = size / 8\n        const tint = [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded}\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const data = [{name: '摸', value: 40}, {name: '到', value: 90}, {name: '飞', value: 60}, {name: '起', value: 70}];\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(0, 1)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(1, 2)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(2, 3)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={data.slice(3, 4)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = {name: '鸽子力', value: 80};\n        this.state = {\n            rounded: 20,\n            data: (this.props.data !== undefined) ? this.props.data : mockData\n        }\n    }\n\n    greatLegend(value) {\n        return (\n            <span>{value}</span>\n        )\n    }\n\n    render() {\n        const tint = \"#137A7F\"\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded, align: \"center\"}\n        const size = this.props.size\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[this.state.data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            name: this.props.children\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const data = [\n            {\n                name: 'Page A', key: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ];\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={4} dot={{r: 6}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={4} dot={{r: 6}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            name: this.props.children\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#EA0\", \"#08A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const lineData = {\n            xAxisMeasurement: \"XExample\",\n            lines: [\n                {\n                    name: 'One',\n                    values: [\n                        4000,\n                        5000,\n                        3500,\n                        5000\n                    ]\n                },\n                {\n                    name: \"Two\",\n                    values: [\n                        7500,\n                        5560,\n                        2280,\n                        5600\n                    ]\n                },\n            ]\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(lineData, tint, port)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            name: this.props.children\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const tint = setTintArray(this.props.tint)\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": this.state.rounded\n        }\n        const data = constructData(this.props.data, {\"uv\": 900, \"pv\": 609})\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([data], tint, port)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: '#FFF'\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n            type: (this.props.type !== undefined) ? this.props.type : \"\"\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick} type={this.state.type}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Suspense } from \"react\";\nimport store, { mapsStore } from \"../Store\";\nimport {\n    Button as MaterialButton,\n    Card, CardActions,\n    CardContent,\n    Checkbox,\n    Fade, FormControl,\n    FormControlLabel,\n    FormGroup,\n    FormLabel,\n    Modal,\n    Slider, Typography\n} from \"@material-ui/core\";\nimport MapSwitch from \"../Controllers/Switch\";\nimport {Button} from \"../Controllers/Button\";\nimport {KeyboardDateTimePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\nconst MapFuture = React.lazy(() => import('./Map'));\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            datePicker: false,\n            argumentPicker: false,\n            activated: \"无\",\n            selectedTime: new Date(),\n            flowStats: true,\n            lineSpectating: store.getState().lineSpectating,\n            stationSpectating: store.getState().stationSpectating,\n            userArguments: {holiday: undefined, boom: {enabled: false, station: undefined, flow: undefined}}\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n\n    handleOpen(modal) {\n        if (modal === 'datePicker') {this.setState({datePicker: !this.state.datePicker})}\n        if (modal === 'argumentPicker') {this.setState({argumentPicker: !this.state.argumentPicker})}\n    }\n    handleTime(e) {\n        this.setState({time: e})\n    }\n    handleChange(e, argument) {\n\n        const defaultBoomFlow = 3000\n\n        let newArguments = this.state.userArguments\n        if (argument === 'holiday') {\n            newArguments.holiday = e.target.checked\n        }\n        if (argument === 'boom') {\n            newArguments.boom.enabled = e.target.checked\n            if (e.target.checked) {\n                newArguments.boom.station = this.state.stationSpectating\n                newArguments.boom.flow = defaultBoomFlow\n            }\n        }\n        this.setState({userArguments: newArguments})\n    }\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>线路</td>\n                    <td>{this.state.lineSpectating}</td>\n                </tr>\n                <tr>\n                    <td>客流量</td>\n                    <td>99</td>\n                </tr>\n                <tr>\n                    <td>高峰时段</td>\n                    <td>9:00</td>\n                </tr>\n            </table>\n        )\n    }\n    stationArguments() {\n        if (this.state.stationSpectating === 'No') {\n            return (\n                <FormLabel component={'legend'}>没有选择站点</FormLabel>\n            )\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <FormLabel component={'legend'}>{this.state.stationSpectating}</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.userArguments.holiday}\n                                    onChange={this.state}\n                                />\n                            }\n                            label={'故障'}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.userArguments.boom.enabled}\n                                        onChange={(e) => this.handleChange(e, 'boom')}\n                                    />\n                                }\n                                label={'突发客流'}\n                            />\n                            <FormGroup row>\n                                <Slider\n                                    defaultValue={3000}\n                                    valueLabelDisplay=\"auto\"\n                                    step={10}\n                                    marks\n                                    min={10}\n                                    max={110}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                />\n                            </FormGroup>\n                        </FormGroup>\n\n                    </FormGroup>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        mapsStore.dispatch({type: 'refresh'})\n        return (\n            <div className={\"Layer\"} style={{borderRadius: this.state.rounded}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch switchOptions={[\"无\", \"热力图\"]} state={this.state}\n                               setState={(e) => (this.setState(e))}\n                    />\n                    <Button onClick={() => this.handleOpen('datePicker')}>\n                        选择日期\n                    </Button>\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}数据\n                    </Button>\n                    {this.state.flowStats ? <Button onClick={() => this.handleOpen('argumentPicker')}>模拟数据变更</Button> : ''}\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.time}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('datePicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.argumentPicker}>\n                        <Fade in={this.state.argumentPicker}>\n                            <Card style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        输入参数\n                                    </Typography>\n                                    <FormControl component={'fieldset'}>\n                                        <FormLabel component={'legend'}>该时间操作</FormLabel>\n                                        <FormGroup row>\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox\n                                                        checked={this.state.userArguments.holiday}\n                                                        onChange={this.state}\n                                                    />\n                                                }\n                                                label={'是假期'}\n                                            />\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox\n                                                        checked={this.state.userArguments.holiday}\n                                                        onChange={this.state}\n                                                    />\n                                                }\n                                                label={'天气'}\n                                            />\n                                        </FormGroup>\n                                    </FormControl>\n                                    <br />\n                                    <FormControl component={'fieldset'}>\n                                        {this.stationArguments()}\n                                    </FormControl>\n\n                                </CardContent>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('argumentPicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>Maps loading...</div>}>\n                        <div style={{transform: 'translate(+7%, +5%)'}}>\n                            <MapFuture\n                                height={this.props.port.height}\n                                width={this.props.port.width}\n                                mode={this.state.activated}\n                            />\n                        </div>\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport { MapsBlock } from '../Widgets/MapsBlock';\n\nconst body = document.body\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    retrieveData(name) {\n        if (name === 'overall') {\n            return(\n                {\n                    name: '综合压力',\n                    value: 60\n                }\n            )\n        }\n        if (name === 'overloadedStation') {\n            return(\n                {\n                    name: 'Sta99',\n                    value: 99\n                }\n            )\n        }\n    }\n\n    render() {\n        const {size} = this.state\n        return (\n                <div className={\"OverviewGrid\"}>\n                    <div className={\"div1\"}>\n                        <MapsBlock\n                            port={{\"height\": size * 4, \"width\": size * 4}}\n                        />\n                    </div>\n                    <div className={\"div2\"}>\n                        <Widgets.DashboardOne size={size} data={this.retrieveData('overall')}/>\n                    </div>\n                    <div className={\"div3\"}>\n                        <Widgets.DashboardOne size={size} data={this.retrieveData('overloadedStation')}/>\n                    </div>\n                    <div className={\"div4\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div5\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div6\"}>\n                        <Widgets.Dashboard size={size}/>\n                    </div>\n                    <div className={\"div7\"}>\n                        <Widgets.Dashboard size={size}/>\n                    </div>\n                    <div className={\"div8\"}>\n                        <Widgets.Trends\n                            port={{\"height\": size, \"width\": size * 2}}\n                        >\n                            Trends\n                        </Widgets.Trends>\n                    </div>\n                    <div className={\"div9\"}>\n                        <Widgets.SimpleTrends\n                            port={{\"height\": size, \"width\": size * 3}}\n                        >\n                            SimpleTrends\n                        </Widgets.SimpleTrends>\n                    </div>\n                    <div className={\"div10\"}>\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\n\nconst body = document.body\n\nexport class LineHeat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        return(\n            <div className={\"LHGrid\"}>\n                <div className=\"div1\"></div>\n                <div className=\"div2\"></div>\n                <div className=\"div3\"></div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n                <div className=\"div7\"></div>\n                <div className=\"div8\"></div>\n                <div className=\"div9\"></div>\n                <div className=\"div10\"></div>\n                <div className=\"div11\"></div>\n                <div className=\"div12\"></div>\n                <div className=\"div13\"></div>\n                <div className=\"div14\"></div>\n                <div className=\"div15\"></div>\n                <div className=\"div16\"></div>\n                <div className=\"div17\"></div>\n                <div className=\"div18\"></div>\n                <div className=\"div19\"></div>\n                <div className=\"div20\"></div>\n            </div>\n        )\n    }\n}\n\nexport class HeatTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 4, body.scrollWidth / 2)\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return(\n            <div className={\"THGrid\"}>\n                <div className=\"div1\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.offsetWidth - 60}}\n                    />\n                </div>\n                <div className=\"div2\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.offsetWidth - 60}}\n                    />\n                </div>\n                <div className=\"div3\"></div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\n// import * as Widgets from '../Widgets/widgets';\n\nclass PassengerAnalytics extends React.Component {\n    render() {\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                    </div>\n                    <div className=\"div2\"></div>\n                    <div className=\"div3\"></div>\n                    <div className=\"div4\"></div>\n                    <div className=\"div5\"></div>\n                    <div className=\"div6\"></div>\n                    <div className=\"div7\"></div>\n                    <div className=\"div8\"></div>\n                    <div className=\"div9\"></div>\n                    <div className=\"div10\"></div>\n                    <div className=\"div11\"></div>\n                    <div className=\"div12\"></div>\n                    <div className=\"div13\"></div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from \"react\";\nimport \"./style.css\"\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (this.props.type !== undefined) ? this.props.type : \"text\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={'InputFunction'}>\n                <label>\n                    {this.props.children}\n                </label>\n                <input type={this.state.type}/>\n            </div>\n        )\n    }\n}\n\nexport default Input","import React from \"react\";\nimport {Input, Button} from '../Controllers';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport './style.css';\nimport store, { setExpiration } from \"../Store\";\n\nfunction loginRequest(event) {\n    event.preventDefault()\n    store.dispatch({\n        type: 'login',\n        loginState: true\n    })\n}\n\n\n\nclass CertForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'option': ''\n        }\n    }\n    CertChange(event) {\n        let feedbackInfo\n        if (this.state.option === 'logout') {\n            feedbackInfo = '注销凭据完成'\n            const action = {\n                type: 'certMan',\n                logout: (this.state.option === 'logout')\n            }\n            store.dispatch(action)\n        }\n        if (this.state.option === 'cache') {\n            feedbackInfo = '保存凭据'+22+'天'\n            setExpiration()\n        }\n        alert(feedbackInfo)\n        event.preventDefault()\n\n    }\n\n    render() {\n        const handleRadioChange = (event) => {\n            this.setState({'option': event.target.value})\n        };\n        return(\n            <form onSubmit={(event) => this.CertChange(event)}>\n                <RadioGroup name={'manageOption'} value={this.state.option} onChange={handleRadioChange}>\n                    <FormControlLabel value={'logout'} control={<Radio/>} label={\"登出\"}/>\n                    <FormControlLabel value={'cache'} control={<Radio/>} label={\"保存凭据\"}/>\n                </RadioGroup>\n                <Button type={'submit'}>\n                    确定\n                </Button>\n            </form>\n        )\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = store.getState()\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n\n    render() {\n        let FormSheet, hello\n        const LoginForm = [\n            <form onSubmit={(e) => loginRequest(e)}>\n                <div className={\"AuthForm\"}>\n                    <div>\n                        <Input>\n                            用户名称\n                        </Input>\n                        <Input type={\"password\"}>\n                            密码\n                        </Input>\n                    </div>\n                    <div className={\"Button\"}>\n                        <Button type={\"submit\"}>\n                            好\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        ]\n\n        if (this.state.loginState) {\n            FormSheet = [<CertForm/>]\n            hello = \"认证管理\"\n        }\n        else {\n            FormSheet = LoginForm\n            hello = \"认证\"\n        }\n\n        return (\n            <React.Fragment>\n                <div id={'Amaze'}/>\n                <div id={'ActualCard'}>\n                    <h1>\n                        {hello}\n                    </h1>\n                </div>\n                <div id={'Maze'}/>\n                    <section className={\"AuthCard\"}>\n                        {FormSheet}\n                    </section>\n            </React.Fragment>\n\n\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\n\nimport Overview from \"./Overview\";\nimport { LineHeat, HeatTimeline } from \"./LineHeat\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport Login from \"./Authenticate\";\nimport './index.css';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, { exposedMethods } from \"./Store\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = store.getState()\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n\n    render() {\n        let pagesList = []\n        if (this.state.loginState === true) {\n            pagesList.push(\n                <Switch>\n                    <Route exact path={\"./\"}>\n                        <Redirect to={\"Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"} component={AnimationApp}/>\n                </Switch>)\n        }\n        else {\n            pagesList.push(\n                <Switch>\n                    <Route path={\"*\"}>\n                        <Login />\n                    </Route>\n                </Switch>\n            )\n        }\n        return (\n            <PersistGate store={store} persistor={exposedMethods}>\n                <Router>\n                    {pagesList}\n                </Router>\n            </PersistGate>\n        )\n    }\n}\n\nclass AnimationApp extends React.Component {\n    render() {\n        // keyboard shortcuts\n        window.addEventListener(\"keydown\", function (e) {\n            if (e.defaultPrevented) {\n                return;\n            }\n            function handleShortcutKey(key) {\n                const destination = ['Overview', 'PassengerAnalytics', 'Authenticate', 'LineHeat']\n                window.location.replace('./' + destination[key - 1])\n            }\n            if (e.key !== undefined) {\n                if (e.key === '1') {handleShortcutKey(1)}\n                if (e.key === '2') {handleShortcutKey(2)}\n                if (e.key === '3') {handleShortcutKey(4)}\n                if (e.key === 'L' || e.key === 'l') {handleShortcutKey(3)}\n            }\n            else if (e.code !== undefined) {\n                if (e.code === 'Digit1') {handleShortcutKey(1)}\n                if (e.code === 'Digit2') {handleShortcutKey(2)}\n                if (e.code === 'Digit3') {handleShortcutKey(4)}\n                if (e.code === 'KeyL') {handleShortcutKey(3)}\n            }\n        })\n\n        return (\n            <React.Fragment>\n                <div className=\"Dock\">\n                    <NavLink to={\"Overview\"} activeClassName={\"active\"} exact>\n                        <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                    </NavLink>\n                    <NavLink to={\"LineHeat\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>线路分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink to={\"HeatTimeline\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>时段分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>客流分析<span>3</span></button>\n                    </NavLink>\n                    <NavLink to={\"Authenticate\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>认证<span>L</span></button>\n                    </NavLink>\n                </div>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={this.props.location}\n                        classNames={\"fade\"}\n                        timeout={250}\n                    >\n                        <Switch>\n                            <Route path={`*/Overview`} component={Overview}/>\n                            <Route path={`*/LineHeat`} component={LineHeat}/>\n                            <Route path={`*/HeatTimeline`} component={HeatTimeline}/>\n                            <Route path={`*/PassengerAnalytics`} component={PassengerAnalytics}/>\n                            <Route path={`*/Authenticate`} component={Login}/>\n                            <Route path={`*`}>\n                                <Redirect to={\"Overview\"}/>\n                            </Route>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}