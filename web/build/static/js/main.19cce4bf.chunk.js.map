{"version":3,"sources":["Store/methods.js","Store/mapsUpdater.js","Store/index.js","Controllers/Switch.js","Widgets/widgets.js","Controllers/Button.js","Widgets/MapsBlock.js","Overview/index.js","LineHeat/index.js","PassengerAnalytics/index.js","Controllers/Input.js","Authenticate/index.js","App.js","reportWebVitals.js","index.js"],"names":["givenDate","Date","defaultState","active","theme","loginState","sessionData","timeUpToDate","time","timePeriod","lineSpectating","stationSpectating","station","flow","flowSpectating","peakSpectating","Store","state","action","newState","JSON","parse","stringify","type","session","logout","line","hoverType","hoverID","now","defaultValue","stationData","pathData","newMapState","require","expires","setExpiration","schoolDays","undefined","persistConfig","key","storage","CookieStorage","Cookies","expiration","default","persistedMethods","persistReducer","methods","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","exposedMethods","persistStore","mapsPersistConfig","mapsMethods","mapsUpdater","mapsStore","mapsExposedMethods","MapSwitch","props","switchOptions","this","setState","allOptions","optionsController","forEach","perOption","acClass","activated","push","id","onClick","className","enumOptions","React","Component","transformToCentre","position","left","top","transform","defaultRoundCorner","linesConstructor","dataArray","tintArray","tooltip","lines","tooltipElement","converted","drawn","map","lineIndex","values","y","x","partPoint","name","Object","assign","dot","r","dataKey","stroke","strokeWidth","data","width","height","style","barConstructor","keys","barContent","index","fill","Dashboard","rounded","children","value","nameLabel","size","spacing","tint","frame","borderRadius","Fragment","slice","innerRadius","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","uv","pv","amt","port","SimpleTrends","xAxisMeasurement","SimpleBars","propData","sampleData","mockData","console","warn","propTintArray","AreaChartTrends","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","fillOpacity","MNButtonStyle","backgroundColor","Button","variant","MapFuture","lazy","MapsBlock","datePicker","argumentPicker","selectedTime","flowStats","storeState","getState","mapState","userArguments","holiday","weather","enabled","condition","temperature","boom","storeChange","bind","subscribe","modal","e","argument","newArguments","target","checked","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","onChange","label","handleChange","row","Select","labelId","disabled","event","MenuItem","Slider","valueLabelDisplay","step","marks","min","max","dispatch","opacity","userSelect","cursor","getStats","handleOpen","triggerStats","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","margin","utils","MomentUtils","handleTime","CardActions","color","FormControl","InputLabel","TextField","marginTop","InputLabelProps","shrink","stationArguments","fallback","mode","body","document","Index","calculateSize","Math","scrollHeight","scrollWidth","log","addEventListener","removeEventListener","retrieveData","LineHeat","documentElement","clientHeight","HeatTimeline","PassengerAnalytics","Input","handler","CertForm","feedbackInfo","option","alert","preventDefault","onSubmit","CertChange","RadioGroup","Radio","Login","username","password","axios","post","then","response","msg","code","error","loginRequest","FormSheet","hello","LoginForm","handleLogin","handleForm","root","App","setProperty","pagesList","exact","path","to","AnimationApp","persistor","handleShortcutKey","location","replace","defaultPrevented","activeClassName","TransitionGroup","CSSTransition","classNames","timeout","Overview","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.19cce4bf.chunk.js","sourcesContent":["const givenDate = new Date('July 1, 2020 00:00:00')\nconst defaultState = {\n    active: \"dashboard\",\n    theme: 'light',\n    loginState: false,\n    sessionData: '',\n    timeUpToDate: true,\n    time: givenDate,\n    timePeriod: '实时',\n    lineSpectating: 'No',\n    stationSpectating: {station: '没有选中站点', flow: 0},\n    flowSpectating: -1,\n    peakSpectating: -1\n}\nconst Store = (state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'login' && action.loginState) {\n        newState.loginState = true\n        newState.sessionData = action.session\n        return newState\n    }\n    if (action.type === 'certMan') {\n        if (action.logout) {\n            return defaultState\n        }\n    }\n    if (action.type === 'hoverUpdate') {\n        newState.lineSpectating = action.line\n        if (action.hoverType === 'station') {\n            newState.stationSpectating.station = action.hoverID\n            newState.stationSpectating.flow = action.flow\n        }\n        return newState\n    }\n    if (action.type === 'switchTheme') {\n        newState.theme = action.theme\n        return newState\n    }\n    if (action.type === 'timeUpdate') {\n        if (action.time > givenDate) {\n            newState.timePeriod = '预测'\n        }\n        else if (action.time < givenDate) {\n            newState.timePeriod = '历史'\n        }\n        else if (action.now) {\n            newState.timePeriod = '实时'\n        }\n        else {\n            return newState\n        }\n        newState.time = action.time\n        return newState\n    }\n    return state\n}\nexport default Store","const defaultValue = {\n    stationData: {},\n    pathData: {}\n}\nconst Store = (state = defaultValue, action) => {\n    if (action.type === 'refresh') {\n        let newMapState = JSON.parse(JSON.stringify(state))\n        newMapState.stationData = require('../stationaryPlaceholder/stations.json')\n        newMapState.pathData = require('../stationaryPlaceholder/paths.json')\n        return newMapState\n    }\n    return state\n}\nexport default Store","import { createStore } from \"redux\";\nimport methods from './methods';\nimport mapsUpdater from './mapsUpdater';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { CookieStorage } from 'redux-persist-cookie-storage';\nimport storage from 'redux-persist/lib/storage';\nimport Cookies from 'cookies-js';\n\nlet expires = 22 * 86400\n\nexport function setExpiration(schoolDays)\n{\n    if (schoolDays === undefined) {\n        schoolDays = 22\n    }\n    expires = schoolDays * 86400;\n}\n\n//组件数据和会话\nconst persistConfig = {\n    key: 'root',\n    storage: new CookieStorage(Cookies, {expiration:\n        {default: expires}\n    })\n}\nconst persistedMethods = persistReducer(persistConfig, methods)\nlet store = createStore(persistedMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport let exposedMethods = persistStore(store)\nexport default store\n\n//地图存储\nconst mapsPersistConfig = {\n    key: 'maps',\n    storage: storage\n}\nconst mapsMethods = persistReducer(mapsPersistConfig, mapsUpdater)\nexport let mapsStore = createStore(mapsMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport let mapsExposedMethods = persistStore(mapsStore)\n\nexport function searchObject(data, searchKey, value, requiredKey) {\n    let result\n    try {\n        data.forEach(function (theObject) {\n            if (theObject[searchKey] === value) {\n                result = theObject[requiredKey]\n            }\n        })\n    }\n    catch(error)\n    {\n        return result\n    }\n\n    return result\n}\n\nexport function moodyTimeDifference(givenTime) {\n    const moodyHour = givenTime.getHours() + (givenTime.getMinutes() > 30 ? 1 : 0)\n    const moodyMin = givenTime.getMinutes() > 15 && givenTime.getMinutes() <= 45 ? 30 : 0\n    return givenTime.getMonth()+1 + ':' + givenTime.getDate() + ':' + moodyHour + ':' + moodyMin\n}","import React from \"react\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport './style.css';\nimport {\n    AreaChart, Area,\n    RadialBarChart,\n    RadialBar,\n    PolarAngleAxis,\n    Legend, Tooltip,\n    Cell,\n    LineChart,\n    CartesianGrid,\n    XAxis,\n    YAxis, Line, BarChart, Bar\n} from \"recharts\";\nimport '../Controllers/Switch';\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\nconst defaultRoundCorner = 20;\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\n\nfunction constructData(propData, sampleData) {\n    if (propData !== undefined) {\n        if (propData == null) {\n            console.warn(\"Null data received\")\n        }\n        return propData\n    } else return sampleData\n}\n\nfunction linesConstructor(dataArray, tintArray, state, tooltip) {\n    const lines = dataArray.lines\n    const tooltipElement = tooltip ? [<Tooltip/>] : []\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{r: 3}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={2}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend/>\n            {tooltipElement}\n            {drawn}\n        </LineChart>\n    )\n}\n\nfunction barConstructor(dataArray, tintArray, state) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    const barContent = keys.map(function (key, index) {\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n            />\n        )\n    })\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [{name: '摸', value: 40}, {name: '到', value: 90}, {name: '飞', value: 60}, {name: '起', value: 70}];\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const size = this.props.size * 2\n        const spacing = size / 8\n        const tint = [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded}\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(0, 1)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(1, 2)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(2, 3)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(3, 4)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = {name: '鸽子力', value: 80};\n        this.state = {\n            rounded: defaultRoundCorner,\n            data: (this.props.data !== undefined) ? this.props.data : mockData\n        }\n    }\n\n    greatLegend(value) {\n        return (\n            <span>{value}</span>\n        )\n    }\n\n    render() {\n        const tint = \"#137A7F\"\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded, align: \"center\"}\n        const size = this.props.size\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[this.state.data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ]\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={this.state.data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={2} dot={{r: 3}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={2} dot={{r: 3}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = {\n            xAxisMeasurement: \"XExample\",\n            lines: [\n                {\n                    name: 'One',\n                    values: [\n                        4000,\n                        5000,\n                        3500,\n                        5000\n                    ]\n                },\n                {\n                    name: \"Two\",\n                    values: [\n                        7500,\n                        5560,\n                        2280,\n                        5600\n                    ]\n                },\n            ]\n        }\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data,\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#EA0\", \"#08A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(this.state.data, tint, port, this.props.tooltip)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = constructData(this.props.data, {\"uv\": 900, \"pv\": 609})\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const tint = setTintArray(this.props.tint)\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": this.state.rounded\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([this.state.data], tint, port)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class AreaChartTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                \"name\": \"Page A\",\n                \"uv\": 4000,\n                \"pv\": 2400,\n                \"amt\": 2400\n            },\n            {\n                \"name\": \"Page B\",\n                \"uv\": 3000,\n                \"pv\": 1398,\n                \"amt\": 2210\n            },\n            {\n                \"name\": \"Page C\",\n                \"uv\": 2000,\n                \"pv\": 9800,\n                \"amt\": 2290\n            },\n            {\n                \"name\": \"Page D\",\n                \"uv\": 2780,\n                \"pv\": 3908,\n                \"amt\": 2000\n            },\n            {\n                \"name\": \"Page E\",\n                \"uv\": 1890,\n                \"pv\": 4800,\n                \"amt\": 2181\n            },\n            {\n                \"name\": \"Page F\",\n                \"uv\": 2390,\n                \"pv\": 3800,\n                \"amt\": 2500\n            },\n            {\n                \"name\": \"Page G\",\n                \"uv\": 3490,\n                \"pv\": 4300,\n                \"amt\": 2100\n            }\n        ]\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: this.state.rounded\n        }\n        return (\n            <div\n                className={'Layer'}\n                style={frame}\n            >\n                <AreaChart\n                    width={port.width}\n                    height={port.height}\n                    data={this.state.data}\n                    style={transformToCentre}\n                >\n                    <defs>\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                    <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                </AreaChart>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: '#FFF'\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n            type: (this.props.type !== undefined) ? this.props.type : \"\"\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick} type={this.state.type}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Suspense } from \"react\";\nimport store, { mapsStore, searchObject } from \"../Store\";\nimport {\n    Button as MaterialButton,\n    Card, CardActions, CardContent, Typography,\n    FormControl, FormControlLabel, FormGroup, FormLabel,\n    Fade, Modal,\n    Checkbox, Slider, Select, MenuItem, TextField, InputLabel,\n} from \"@material-ui/core\";\nimport MapSwitch from \"../Controllers/Switch\";\nimport {Button} from \"../Controllers/Button\";\nimport {KeyboardDateTimePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\nconst MapFuture = React.lazy(() => import('./Map'));\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            datePicker: false,\n            argumentPicker: false,\n            activated: \"无\",\n            selectedTime: new Date(),\n            flowStats: true,\n            storeState: store.getState(),\n            mapState: mapsStore.getState(),\n            userArguments: {holiday: undefined, weather: {enabled: false, condition: 1, temperature: undefined}, boom: {enabled: false, station: undefined, flow: undefined, type: 0}}\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState({storeState: store.getState()})\n    }\n    handleOpen(modal) {\n        if (modal === 'datePicker') {this.setState({datePicker: !this.state.datePicker})}\n        if (modal === 'argumentPicker') {this.setState({argumentPicker: !this.state.argumentPicker})}\n    }\n    handleTime(e) {\n        this.setState({time: e})\n    }\n    handleChange(e, argument) {\n        let newArguments = this.state.userArguments\n        if (argument === 'holiday') {\n            newArguments.holiday = e.target.checked\n        }\n        if (argument === 'boomTick') {\n            newArguments.boom.enabled = e.target.checked\n        }\n        if (argument === 'boomType') {\n            newArguments.boom.type = e.target.value\n        }\n        if (argument === 'boom') {\n            newArguments.boom.station = this.state.stationSpectating\n            newArguments.boom.flow = e.target.value\n        }\n        if (argument === 'weatherTick') {\n            newArguments.weather.enabled = e.target.checked\n        }\n        if (argument === 'weatherTemperature') {\n            newArguments.weather.temperature = e.target.value\n        }\n        if (argument === 'weather') {\n            newArguments.weather.condition = e.target.value\n        }\n        this.setState({userArguments: newArguments})\n    }\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>线路</td>\n                    <td>{this.state.storeState.lineSpectating}</td>\n                </tr>\n                <tr>\n                    <td>断面客流</td>\n                    <td>{this.state.storeState.stationSpectating.flow}</td>\n                </tr>\n                <tr>\n                    <td>高峰时段</td>\n                    <td>9:00</td>\n                </tr>\n            </table>\n        )\n    }\n    stationArguments() {\n        if (this.state.stationSpectating === 'No') {\n            return (\n                <FormLabel component={'legend'}>没有选择站点</FormLabel>\n            )\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <FormLabel component={'legend'}>{this.state.storeState.stationSpectating}</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.userArguments.holiday}\n                                    onChange={this.state}\n                                />\n                            }\n                            label={'故障'}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.userArguments.boom.enabled}\n                                        onChange={(e) => this.handleChange(e, 'boomTick')}\n                                    />\n                                }\n                                label={'突发客流'}\n                            />\n                            <FormGroup row>\n                                <Select\n                                    labelId={'客流类型'}\n                                    id={'客流类型'}\n                                    value={this.state.userArguments.boom.type}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(event) => this.handleChange(event, 'boomType')}\n                                    style={{width: '100%'}}\n                                >\n                                    <MenuItem value={0}>进站</MenuItem>\n                                    <MenuItem value={1}>出站</MenuItem>\n                                    <MenuItem value={2}>进站加</MenuItem>\n                                    <MenuItem value={3}>出站加</MenuItem>\n                                </Select>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Slider\n                                    defaultValue={3000}\n                                    valueLabelDisplay=\"auto\"\n                                    step={10}\n                                    marks\n                                    min={10}\n                                    max={110}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(event) => this.handleChange(event, 'boom')}\n                                />\n                            </FormGroup>\n                        </FormGroup>\n\n                    </FormGroup>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        mapsStore.dispatch({type: 'refresh'})\n        return (\n            <div className={\"Layer\"} style={{borderRadius: this.state.rounded}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch switchOptions={[\"无\", \"热力图\"]} state={this.state}\n                               setState={(e) => (this.setState(e))}\n                    />\n                    <Button onClick={() => this.handleOpen('datePicker')}>\n                        选择日期\n                    </Button>\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}数据\n                    </Button>\n                    {this.state.flowStats ? <Button onClick={() => this.handleOpen('argumentPicker')}>模拟数据变更</Button> : ''}\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.time}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('datePicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.argumentPicker}>\n                        <Fade in={this.state.argumentPicker}>\n                            <Card style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        输入参数\n                                    </Typography>\n                                    <div className={'DualPanel'}>\n                                        <FormControl component={'fieldset'}>\n                                            <FormLabel component={'legend'}>该时间操作</FormLabel>\n                                            <FormGroup row>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.holiday}\n                                                            onChange={this.state}\n                                                        />\n                                                    }\n                                                    label={'放假'}\n                                                />\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weatherTick')}\n                                                        />\n                                                    }\n                                                    label={'变更天气'}\n                                                />\n                                                <FormGroup>\n                                                    <FormControl>\n                                                        <InputLabel id={'天气选择标签'}>\n                                                            天气类型\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"天气选择\"\n                                                            id=\"天气选择\"\n                                                            value={this.state.userArguments.weather.condition}\n                                                            disabled={!this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weather')}\n                                                        >\n                                                            <MenuItem value={'阴'}>阴</MenuItem>\n                                                            <MenuItem value={'晴'}>晴</MenuItem>\n                                                            <MenuItem value={'多云'}>多云</MenuItem>\n                                                            <MenuItem value={'小雨'}>小雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>中雨</MenuItem>\n                                                            <MenuItem value={'大雨'}>大雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>暴雨</MenuItem>\n                                                            <MenuItem value={'雷阵雨'}>雷阵雨</MenuItem>\n                                                        </Select>\n                                                    </FormControl>\n                                                    \n                                                    <TextField\n                                                        id={'温度输入'}\n                                                        label={'输入摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperature')}\n                                                    />\n                                                </FormGroup>\n                                            </FormGroup>\n                                        </FormControl>\n                                        <br />\n                                        <FormControl component={'fieldset'}>\n                                            {this.stationArguments()}\n                                        </FormControl>\n                                    </div>\n                                </CardContent>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('argumentPicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>Maps loading...</div>}>\n                        <div style={{transform: 'translate(+7%, +5%)'}}>\n                            <MapFuture\n                                height={this.props.port.height}\n                                width={this.props.port.width}\n                                mode={this.state.activated}\n                            />\n                        </div>\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport { MapsBlock } from '../Widgets/MapsBlock';\n\nconst body = document.body\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n    retrieveData(name) {\n        if (name === 'overall') {\n            return (\n                {\n                    name: '综合压力',\n                    value: 60\n                }\n            )\n        }\n        if (name === 'overloadedStation') {\n            return (\n                {\n                    name: 'Sta99',\n                    value: 99\n                }\n            )\n        }\n        if (name === 'distPressure') {\n            return ([\n                {name: 'dist1', value: 85},\n                {name: 'dist3', value: 83},\n                {name: 'dist5', value: 77},\n                {name: 'dist6', value: 66}\n            ])\n        }\n    }\n\n    render() {\n        const {size} = this.state\n        return (\n                <div className={\"OverviewGrid\"}>\n                    <div className={\"div1\"}>\n                        <MapsBlock\n                            port={{\"height\": size * 4, \"width\": size * 4}}\n                        />\n                    </div>\n                    <div className={\"div2\"}>\n                        <Widgets.DashboardOne size={size} data={this.retrieveData('overall')}/>\n                    </div>\n                    <div className={\"div3\"}>\n                        <Widgets.DashboardOne size={size} data={this.retrieveData('overloadedStation')}/>\n                    </div>\n                    <div className={\"div4\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div5\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div6\"}>\n                        <Widgets.Dashboard size={size} data={this.retrieveData('distPressure')}>\n                            客流高峰区域\n                        </Widgets.Dashboard>\n                    </div>\n                    <div className={\"div7\"}>\n                        <Widgets.Dashboard size={size}/>\n                    </div>\n                    <div className={\"div8\"}>\n                        <Widgets.Trends\n                            port={{\"height\": size, \"width\": size * 2}}\n                        >\n                            Trends\n                        </Widgets.Trends>\n                    </div>\n                    <div className={\"div9\"}>\n                        <Widgets.SimpleTrends\n                            port={{\"height\": size, \"width\": size * 3}}\n                            tooltip={true}\n                        >\n                            SimpleTrends\n                        </Widgets.SimpleTrends>\n                    </div>\n                    <div className={\"div10\"}>\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\n\nconst body = document.body\n\nexport class LineHeat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize() {\n        this.setState({\n            size: Math.min(document.documentElement.clientHeight / 8, body.scrollWidth / 8)\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        return(\n            <div className={\"LHGrid\"}>\n                <div className=\"div1\"></div>\n                <div className=\"div2\"></div>\n                <div className=\"div3\"></div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n                <div className=\"div7\"></div>\n                <div className=\"div8\"></div>\n                <div className=\"div9\"></div>\n                <div className=\"div10\"></div>\n                <div className=\"div11\"></div>\n                <div className=\"div12\"></div>\n                <div className=\"div13\"></div>\n                <div className=\"div14\"></div>\n                <div className=\"div15\"></div>\n                <div className=\"div16\"></div>\n                <div className=\"div17\"></div>\n                <div className=\"div18\"></div>\n                <div className=\"div19\"></div>\n                <div className=\"div20\"></div>\n            </div>\n        )\n    }\n}\n\nexport class HeatTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize = () => {\n        this.setState({\n            size: body.scrollHeight / 5\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return(\n            <div className={\"THGrid\"}>\n                <div className=\"div1\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div2\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div3\">\n                    <Widgets.AreaChartTrends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\n// import * as Widgets from '../Widgets/widgets';\n\nclass PassengerAnalytics extends React.Component {\n    render() {\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                    </div>\n                    <div className=\"div2\"></div>\n                    <div className=\"div3\"></div>\n                    <div className=\"div4\"></div>\n                    <div className=\"div5\"></div>\n                    <div className=\"div6\"></div>\n                    <div className=\"div7\"></div>\n                    <div className=\"div8\"></div>\n                    <div className=\"div9\"></div>\n                    <div className=\"div10\"></div>\n                    <div className=\"div11\"></div>\n                    <div className=\"div12\"></div>\n                    <div className=\"div13\"></div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from \"react\";\nimport \"./style.css\"\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (this.props.type !== undefined) ? this.props.type : \"text\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={'InputFunction'}>\n                <label>\n                    {this.props.children}\n                </label>\n                <input className={'coilsInput'} type={this.state.type} onChange={(event => this.props.handler(event))}/>\n            </div>\n        )\n    }\n}\n\nexport default Input","import React from \"react\";\nimport {Input, Button} from '../Controllers';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport axios from \"axios\";\nimport './style.css';\nimport store, { setExpiration } from \"../Store\";\n\nfunction loginRequest(username, password) {\n    try {\n        axios.post('http://47.110.95.97:8080/log', {\n            'username': username,\n            'password': password\n        }).then(function (response) {\n            alert(response.data.msg)\n            if (response.data.code === 200) {\n                store.dispatch({\n                    type: 'login',\n                    loginState: true,\n                    session: response.data.data\n                })\n            }\n        })\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\n\nfunction switchTheme() {\n    if (store.getState().theme === 'light') {\n        store.dispatch({\n            type: 'switchTheme',\n            theme: 'dark'\n        })\n    }\n    else if (store.getState().theme === 'dark') {\n        store.dispatch({\n            type: 'switchTheme',\n            theme: 'light'\n        })\n    }\n}\n\nclass CertForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'option': ''\n        }\n    }\n    CertChange(event) {\n        let feedbackInfo\n        if (this.state.option === 'logout') {\n            feedbackInfo = '注销凭据完成'\n            const action = {\n                type: 'certMan',\n                logout: (this.state.option === 'logout')\n            }\n            store.dispatch(action)\n        }\n        if (this.state.option === 'cache') {\n            feedbackInfo = '保存凭据'+22+'天'\n            setExpiration()\n        }\n        alert(feedbackInfo)\n        event.preventDefault()\n\n    }\n\n    render() {\n        const handleRadioChange = (event) => {\n            this.setState({'option': event.target.value})\n        };\n        return(\n            <React.Fragment>\n                <Button onClick={() => switchTheme()}>\n                    切换主题\n                </Button>\n                <br /><br />\n                <form onSubmit={(event) => this.CertChange(event)}>\n                    <RadioGroup name={'manageOption'} value={this.state.option} onChange={handleRadioChange}>\n                        <FormControlLabel value={'logout'} control={<Radio/>} label={\"登出\"}/>\n                        <FormControlLabel value={'cache'} control={<Radio/>} label={\"保存凭据\"}/>\n                    </RadioGroup>\n                    <Button type={'submit'}>\n                        确定\n                    </Button>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState(),\n            username: '',\n            password: ''\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n    handleLogin(event) {\n        event.preventDefault()\n        loginRequest(this.state.username, this.state.password)\n    }\n    handleForm(event, type) {\n        if (type === 'username') {\n            this.setState({username: event.target.value})\n        }\n        if (type === 'password') {\n            this.setState({password: event.target.value})\n        }\n    }\n\n    render() {\n        let FormSheet, hello\n        const LoginForm = [\n            <form onSubmit={(e) => this.handleLogin(e)}>\n                <div className={\"AuthForm\"}>\n                    <div>\n                        <Input handler={(e) => {this.handleForm(e, 'username')}}>\n                            用户名称\n                        </Input>\n                        <Input type={\"password\"} handler={(e) => {this.handleForm(e, 'password')}}>\n                            密码\n                        </Input>\n                    </div>\n                    <div className={\"Button\"}>\n                        <Button type={\"submit\"}>\n                            好\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        ]\n\n        if (this.state.store.loginState) {\n            FormSheet = [<CertForm/>]\n            hello = \"认证管理\"\n        }\n        else {\n            FormSheet = LoginForm\n            hello = \"认证\"\n        }\n\n        return (\n            <React.Fragment>\n                <div id={'Amaze'}/>\n                <div id={'ActualCard'}>\n                    <h1>\n                        {hello}\n                    </h1>\n                </div>\n                <div id={'Maze'}/>\n                    <section className={\"AuthCard\"}>\n                        {FormSheet}\n                    </section>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\n\nimport Overview from \"./Overview\";\nimport { LineHeat, HeatTimeline } from \"./LineHeat\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport Login from \"./Authenticate\";\nimport './index.css';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, { exposedMethods } from \"./Store\";\n\nconst root = document.documentElement\n\nfunction setTheme() {\n    if (store.getState().theme === 'light') {\n        root.style.setProperty('--themeTable', '#E3E3E3')\n        root.style.setProperty('--themeBorder', 'none')\n        root.style.setProperty('--themeColor', '#443')\n        root.style.setProperty('--themeHover', '#220')\n        root.style.setProperty('--themeActive', '#220')\n        root.style.setProperty('--themeLayer', 'rgba(250, 250, 250, 0.8)')\n        root.style.setProperty('--themeFilter', 'screen')\n        root.style.setProperty('--themeDarkFilter', 'brightness(1.17)')\n        root.style.setProperty('--themePure0', 'rgba(255, 255, 255, 1)')\n        root.style.setProperty('--themePure1', 'rgba(255, 255, 255, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(80, 80, 80, 0.1)')\n        root.style.setProperty('--controlBlur', '#553')\n        root.style.setProperty('--dockBorderSize', '1px')\n        root.style.setProperty('--actualFilter', 'rgba(255, 255, 255, .8)')\n    }\n    if (store.getState().theme === 'dark') {\n        root.style.setProperty('--themeTable', '#171717')\n        root.style.setProperty('--themeBorder', '0 0 1.5px #EEE')\n        root.style.setProperty('--themeColor', '#EEE')\n        root.style.setProperty('--themeHover', '#AAB')\n        root.style.setProperty('--themeActive', '#FFF')\n        root.style.setProperty('--themeLayer', 'rgba(53, 53, 53, 0.8)')\n        root.style.setProperty('--themeFilter', 'multiply')\n        root.style.setProperty('--themeDarkFilter', 'brightness(.65)')\n        root.style.setProperty('--themePure0', 'rgba(64, 64, 64, 1)')\n        root.style.setProperty('--themePure1', 'rgba(0, 0, 0, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(255, 255, 255, 0.1)')\n        root.style.setProperty('--controlBlur', '#BBC')\n        root.style.setProperty('--dockBorderSize', '2px')\n        root.style.setProperty('--actualFilter', 'rgba(0, 0, 25, .15)')\n\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = store.getState()\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n\n    render() {\n        setTheme()\n        let pagesList = []\n        if (this.state.loginState === true) {\n            pagesList.push(\n                <Switch>\n                    <Route exact path={\"./\"}>\n                        <Redirect to={\"Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"} component={AnimationApp}/>\n                </Switch>)\n        }\n        else {\n            pagesList.push(\n                <Switch>\n                    <Route path={\"*\"}>\n                        <Login />\n                    </Route>\n                </Switch>\n            )\n        }\n        return (\n            <PersistGate store={store} persistor={exposedMethods}>\n                <Router>\n                    {pagesList}\n                </Router>\n            </PersistGate>\n        )\n    }\n}\n\nclass AnimationApp extends React.Component {\n    render() {\n        // keyboard shortcuts\n        window.addEventListener(\"keydown\", function (e) {\n            if (e.defaultPrevented) {\n                return;\n            }\n            function handleShortcutKey(key) {\n                const destination = ['Overview', 'LineHeat', 'HeatTimeline', 'PassengerAnalytics', 'Authenticate']\n                window.location.replace('./' + destination[key - 1])\n            }\n            if (e.key !== undefined) {\n                if (e.key === '1') {handleShortcutKey(1)}\n                if (e.key === '2') {handleShortcutKey(2)}\n                if (e.key === '3') {handleShortcutKey(3)}\n                if (e.key === '4') {handleShortcutKey(4)}\n                if (e.key === 'L' || e.key === 'l') {handleShortcutKey(5)}\n            }\n            else if (e.code !== undefined) {\n                if (e.code === 'Digit1') {handleShortcutKey(1)}\n                if (e.code === 'Digit2') {handleShortcutKey(2)}\n                if (e.code === 'Digit3') {handleShortcutKey(3)}\n                if (e.code === 'Digit4') {handleShortcutKey(4)}\n                if (e.code === 'KeyL') {handleShortcutKey(5)}\n            }\n        })\n\n        return (\n            <React.Fragment>\n                <div className=\"Dock\">\n                    <NavLink to={\"Overview\"} activeClassName={\"active\"} exact>\n                        <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                    </NavLink>\n                    <NavLink to={\"LineHeat\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>线路分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink to={\"HeatTimeline\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>时段分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>客流分析<span>3</span></button>\n                    </NavLink>\n                    <NavLink to={\"Authenticate\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>认证与设置<span>L</span></button>\n                    </NavLink>\n                </div>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={this.props.location}\n                        classNames={\"fade\"}\n                        timeout={250}\n                    >\n                        <Switch>\n                            <Route path={`*/Overview`} component={Overview}/>\n                            <Route path={`*/LineHeat`} component={LineHeat}/>\n                            <Route path={`*/HeatTimeline`} component={HeatTimeline}/>\n                            <Route path={`*/PassengerAnalytics`} component={PassengerAnalytics}/>\n                            <Route path={`*/Authenticate`} component={Login}/>\n                            <Route path={`*`}>\n                                <Redirect to={\"Overview\"}/>\n                            </Route>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}