{"version":3,"sources":["Controllers/Switch.js","Widgets/widgets.js","Controllers/Button.js","Widgets/MapsBlock.js","Overview/index.js","LineHeat/index.js","PassengerAnalytics/index.js","Controllers/Input.js","Authenticate/index.js","App.js","reportWebVitals.js","index.js","Store/methods.js","Store/mapsUpdater.js","Store/index.js"],"names":["MapSwitch","props","state","switchOptions","this","setState","allOptions","optionsController","index","forEach","perOption","acClass","activated","push","id","onClick","className","style","enumOptions","React","Component","ThemeSwitch","themeNames","store","getState","theme","dispatch","type","value","Fragment","position","height","transformToCentre","left","top","transform","defaultRoundCorner","makeAvailable","thing","undefined","linesConstructor","dataArray","tintArray","tooltip","axis","lines","tooltipElement","converted","drawn","centreStyle","bottom","map","line","lineIndex","values","y","x","partPoint","name","Object","assign","dot","strokeWidth","dataKey","stroke","data","width","tickLine","barConstructor","label","keys","fixedHeight","barContent","key","labelSet","fill","isAnimationActive","colouredPieConstructor","tint","entry","length","e","Dashboard","nameLabel","theKeys","zoom","emptyData","zoomSet","theKeysSet","fixDictionaryKeys","size","innerRadius","frame","borderRadius","valueKey","Math","round","children","slice","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","content","payload","right","DashboardOne","formatter","greatLegend","SimpleTrends","port","SimpleBars","propTintArray","dataToConstruct","newDictionary","makeDictionaryPairs","GreatLegends","error","inside","getFromData","makeEmpty","SimplePieCharts","result","duetFrame","display","flexDirection","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","outerRadius","percent","radius","cos","sin","textAnchor","dominantBaseline","mixBlendMode","toFixed","data0","isItZero","duet","nameKey","labelLine","layout","MNButtonStyle","backgroundColor","color","Button","disabled","variant","MapFuture","lazy","PassengerMaps","MapsBlock","datePicker","argumentPicker","selectedTime","Date","timeline","flowStats","storeState","mapsState","mapsStore","userArguments","time","holiday","weather","enabled","condition","temperature","low","high","boom","station","flow","failure","subscribe","modal","argument","newArguments","target","checked","stationSpectating","moment","format","dayprop","temperatures","axios","post","then","response","console","log","predictionRequest","alert","handleOpen","tripStart","tripFinish","stationin","stationout","month","getMonth","hour","getHours","abs","dettime","catch","start","finish","tripCalculate","timeArray","dashboardData","highestTime","replace","match","lineSpectating","patchZero","getTripForm","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","onChange","event","handleChange","row","Select","labelId","MenuItem","Slider","defaultValue","valueLabelDisplay","step","marks","min","max","foo","opacity","userSelect","cursor","getStats","timeNoGo","triggerStats","fontSize","marginTop","justifyContent","live","startTrip","finishTrip","getBeginTripButton","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","margin","utils","MomentUtils","handleTime","CardActions","handleTimeUpdate","FormControl","InputLabel","TextField","InputLabelProps","shrink","stationArguments","handlePredictionUpdate","fallback","mode","PassengerMapsBlock","passengerMode","handlePassengerModeChange","body","document","Index","calculateSize","scrollHeight","scrollWidth","window","addEventListener","removeEventListener","highestFlow","overallFlow","highestDist4","lineFlow","lineArray","LineHeat","lineData","hotPowerGraph","xAxisMeasurement","searchArray","outerMethods","getLineMap","linename","getLineBars","getBlocks","HeatTimeline","timelineData","sevenFlow","xAxisMeasurements","getLineTimeline","passengerArray","PassengerAnalytics","stationInward","ageMapSpectating","inward","stationOutward","outward","forceUpdate","data1","girls","boys","arrayCoherence","getSlice","getSum","Input","handler","CertForm","handleSlider","newValue","duration","feedbackInfo","logout","setExpiration","onSubmit","CertChange","clearStorage","Login","username","password","storeChange","bind","preventDefault","msg","code","loginState","session","loginRequest","FormSheet","hello","LoginForm","handleLogin","handleForm","root","documentElement","App","setProperty","pagesList","exact","path","to","AnimationApp","persistor","exposedMethods","handling","redirect","done","setTimeout","history","listen","location","pathname","wary","themeSwitchKey","themeSwitcherWary","handleShortcutKey","defaultPrevented","activeClassName","TransitionGroup","CSSTransition","classNames","timeout","Overview","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","nowPlacebo","defaultState","active","sessionData","now","timePeriod","flowSpectating","Store","action","newState","JSON","parse","stringify","initiated","pathData","heatData","newMapState","require","refreshDashboard","hoverType","hoverID","searchObject","ageMap","expires","schoolDays","persistConfig","storage","CookieStorage","Cookies","expiration","default","persistedMethods","persistReducer","methods","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistStore","mapsPersistConfig","mapsMethods","mapsUpdater","mapsExposedMethods","searchKey","requiredKey","theObject","date","year","getFullYear","toString","day","getDate","minute","getMinutes","newArray","str","substring"],"mappings":"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","file":"static/js/main.c7ce3799.chunk.js","sourcesContent":["import React from \"react\";\nimport store from \"../Store\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        let index = 0\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n                style={this.props.style}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport class ThemeSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState()\n        }\n    }\n    themeNames = ['深色', '浅色']\n    enumOptions() {\n        let optionsController = []\n        let index = 0\n        this.themeNames.forEach(\n            function (perOption) {\n                const {theme} = store.getState()\n                const themeOptions = ['dark', 'light']\n                let acClass = \"SwitchTick\"\n                if (theme === themeOptions[index]) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => {\n                            store.dispatch({\n                                type: 'switchTheme'\n                            })\n                        }}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n    dispatchTheme(value) {\n        store.dispatch({\n            type: 'switchTheme',\n            theme: value\n        })\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <div\n                    id={'controller-theme-switch'}\n                    className={\"SwitchBase\"}\n                    style={{position: 'absolute'}}\n                >\n                    {this.enumOptions()}\n                </div>\n                <div style={{height: 'calc(11pt + 30px)'}}/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport './style.css';\nimport {\n    PolarAngleAxis, XAxis, YAxis,\n    AreaChart, Area,\n    RadialBarChart, RadialBar,\n    LineChart, Line,\n    PieChart, Pie,\n    BarChart, Bar,\n    Legend, Tooltip,\n    Cell, CartesianGrid,\n    LabelList\n} from \"recharts\";\nimport '../Controllers/Switch';\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\nexport const defaultRoundCorner = 20;\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\nexport function makeAvailable(thing) {\n    if (thing !== undefined) {return thing}\n    return (<React.Fragment/>)\n}\nexport function fixDictionaryKeys(data, theKeys, zoom) {\n    let emptyData = [{}, {}, {}, {}]\n    const zoomSet = zoom === undefined ? 1 : zoom\n    const theKeysSet = theKeys === undefined ? ['name', 'value'] : theKeys\n    try {\n        data.map(function (value, index) {\n            emptyData[index] = {'name': value[theKeysSet[0]], 'value': value[theKeysSet[1]] * zoomSet}\n            return emptyData\n        }, emptyData, theKeysSet, zoomSet)\n    }\n    catch (e) {}\n    return emptyData\n}\nfunction makeDictionaryPairs(data, theKeys) {\n    let newDictionary = {}\n    try {\n        data.map(function (value) {\n            const key = value[theKeys[0]]\n            newDictionary[key] = value[theKeys[1]]\n            return true\n        }, theKeys)\n    }\n    catch (e) {}\n    return newDictionary\n}\nfunction linesConstructor(dataArray, tintArray, state, tooltip, axis) {\n    const lines = dataArray.lines\n    const tooltipElement = tooltip ? [<Tooltip />] : []\n    let converted = []\n    let drawn = []\n    let centreStyle = transformToCentre\n    if (axis === true) {\n        centreStyle = {position: 'absolute', bottom: 10, left: '50%', transform: 'translateX(-50%)'}\n    }\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{strokeWidth: 3}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={2}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={centreStyle}\n        >\n\n            {axis ? <CartesianGrid /> : <React.Fragment />}\n            {axis ? <YAxis tickLine={false}/> : <React.Fragment />}\n            {axis ? <XAxis tickLine={false}/> : <React.Fragment />}\n            {tooltipElement}\n            {drawn}\n            <Legend />\n        </LineChart>\n    )\n}\nfunction barConstructor(dataArray, tintArray, state, label, axis) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    const wrapperStyle = {position: 'absolute', bottom: 0, left: '50%', transform: 'translateX(-50%)'}\n    const fixedHeight = label ? state.height - 10 : state.height\n    const barContent = keys.map(function (key, index) {\n        let labelSet = []\n        if (label) {\n            labelSet = [<LabelList dataKey={key} position=\"top\" style={{fill: 'var(--themeColor)'}}/>]\n        }\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n                isAnimationActive={false}\n            >\n                {labelSet}\n            </Bar>\n        )\n    }, label)\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={fixedHeight}\n            style={wrapperStyle}\n        >\n            {axis ? <CartesianGrid /> : <React.Fragment />}\n            {axis ? <YAxis tickLine={false}/> : <React.Fragment />}\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\nfunction colouredPieConstructor(data, tint) {\n    try {\n        return data.map((entry, index) => <Cell fill={tint[index % tint.length]}/>)\n    }\n    catch (e) {}\n\n}\n\nexport class Dashboard extends React.Component {\n    render() {\n        const data = fixDictionaryKeys(this.props.data, this.props.keys, this.props.zoom)\n        const size = this.props.size * 1.25\n        const innerRadius = size / 3.75\n        const spacing = 0\n        const tint = this.props.tint === undefined ? [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"] : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner}\n        const valueKey = this.props.keys === undefined ? 'value' : this.props.keys[1]\n        const values = this.props.data.map(function (entry) {\n            return Math.round(entry[valueKey] * 100) / 100\n        })\n        const renderLegend0 = (props) => {\n            const { payload } = props;\n            return (\n                <div>\n                    {\n                        payload.map((entry) => (\n                            <div className={'CircleLegend'}>\n                                {entry.value}\n                                <br />\n                                <span>{values[0]}</span>\n                            </div>\n                        ), values)\n                    }\n                </div>\n            );\n        }\n        const renderLegend1 = (props) => {\n            const { payload } = props;\n            return (\n                <div>\n                    {\n                        payload.map((entry) => (\n                            <div className={'CircleLegend'}>\n                                {entry.value}\n                                <br />\n                                <span>{values[1]}</span>\n                            </div>\n                        ), values)\n                    }\n                </div>\n            );\n        }\n        const renderLegend2 = (props) => {\n            const { payload } = props;\n            return (\n                <div>\n                    {\n                        payload.map((entry) => (\n                            <div className={'CircleLegend'}>\n                                {entry.value}\n                                <br />\n                                <span>{values[2]}</span>\n                            </div>\n                        ), values)\n                    }\n                </div>\n            );\n        }\n        const renderLegend3 = (props) => {\n            const { payload } = props;\n            return (\n                <div>\n                    {\n                        payload.map((entry) => (\n                            <div className={'CircleLegend'}>\n                                {entry.value}\n                                <br />\n                                <span>{values[3]}</span>\n                            </div>\n                        ), values)\n                    }\n                </div>\n            );\n        }\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(0, 1)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        content={renderLegend0}\n                    />\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(1, 2)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        content={renderLegend1}\n                    />\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(2, 3)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        content={renderLegend2}\n                    />\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(3, 4)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        content={renderLegend3}\n                    />\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    greatLegend(value, ) {\n        return (<span>{value}</span>)\n    }\n\n    render() {\n        const tint = this.props.tint === undefined ? \"#137A7F\" : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner, align: \"center\"}\n        const size = this.props.size\n        const value = Math.round(this.props.data.value * 100) / 100\n        const renderLegend = (props) => {\n            const { payload } = props;\n            return (\n                <div>\n                    {\n                        payload.map((entry) => (\n                            <div className={'CircleLegend'}>\n                                {entry.value}\n                                <br />\n                                <span>{value}</span>\n                            </div>\n                        ), value)\n                    }\n                </div>\n            );\n        }\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[this.props.data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        formatter={this.greatLegend}\n                        content={renderLegend}\n                    />\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                name: 'Page A', '1号线': 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {borderRadius: defaultRoundCorner}\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={this.state.data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={2} dot={{r: 3}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={2} dot={{r: 3}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: defaultRoundCorner\n        }\n        const tint = this.props.tint === undefined ? [\"#EA0\", \"#08A\"] : this.props.tint\n        let nameLabel = makeAvailable(this.props.children)\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(this.props.data, tint, port, this.props.tooltip, this.props.axis)}\n                <label className={'widgetLabel'}>\n                    {nameLabel}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    render() {\n        const dataToConstruct = this.props.keys === undefined ? this.props.data : makeDictionaryPairs(this.props.data, this.props.keys)\n        const tint = setTintArray(this.props.tint)\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"borderRadius\": defaultRoundCorner\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([dataToConstruct], tint, this.props.port, this.props.label, this.props.axis)}\n                <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n            </div>\n        )\n    }\n}\n\nexport class AreaChartTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                \"name\": \"Page A\",\n                \"uv\": 4000,\n                \"pv\": 2400,\n                \"amt\": 2400\n            },\n            {\n                \"name\": \"Page B\",\n                \"uv\": 3000,\n                \"pv\": 1398,\n                \"amt\": 2210\n            },\n            {\n                \"name\": \"Page C\",\n                \"uv\": 2000,\n                \"pv\": 9800,\n                \"amt\": 2290\n            },\n            {\n                \"name\": \"Page D\",\n                \"uv\": 2780,\n                \"pv\": 3908,\n                \"amt\": 2000\n            },\n            {\n                \"name\": \"Page E\",\n                \"uv\": 1890,\n                \"pv\": 4800,\n                \"amt\": 2181\n            },\n            {\n                \"name\": \"Page F\",\n                \"uv\": 2390,\n                \"pv\": 3800,\n                \"amt\": 2500\n            },\n            {\n                \"name\": \"Page G\",\n                \"uv\": 3490,\n                \"pv\": 4300,\n                \"amt\": 2100\n            }\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: defaultRoundCorner\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <AreaChart\n                    width={port.width}\n                    height={port.height}\n                    data={this.state.data}\n                    style={transformToCentre}\n                >\n                    <defs>\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                    <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                </AreaChart>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class GreatLegends extends React.Component {\n    getFromData(data, index, key) {\n        try {return data[index][key]}\n        catch (error) {}\n        return undefined\n    }\n    makeEmpty(inside) {\n        return (inside === null || inside === undefined) ? '--' : inside\n    }\n    render() {\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": defaultRoundCorner\n        }\n        if (this.props.type === 'array')\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <div className={'GLContainer'}>\n                    <div className={'GLName'}>\n                        {this.getFromData(this.props.data, this.props.index, this.props.keys[0])}\n                    </div>\n                    <div className={'GLValue'}>\n                        {this.makeEmpty(this.getFromData(this.props.data, this.props.index, this.props.keys[1]))}\n                    </div>\n                </div>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n        if (this.props.type === 'straight') {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div className={'GLContainer'}>\n                        <div className=\"GLName\">\n                            {this.props.name}\n                        </div>\n                        <div className=\"GLValue\">\n                            {this.makeEmpty(this.props.value)}\n                        </div>\n                    </div>\n                    <label className={'widgetLabel'}>\n                        {makeAvailable(this.props.children)}\n                    </label>\n                </div>\n            )\n        }\n        return (<React.Fragment/>)\n    }\n}\n\nexport class SimplePieCharts extends React.Component {\n    isItZero(data) {\n        let result = false\n        try {\n            data.map(function (data) {\n                if (data.value > 0) {\n                    result = true\n                    return true\n                }\n                return true\n            })\n            return result\n        }\n        catch (e) {}\n        return result\n    }\n\n    render() {\n        const frame = {\n            width: \"100%\",\n            height: \"100%\",\n            borderRadius: defaultRoundCorner,\n        }\n        const duetFrame = {\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            borderRadius: defaultRoundCorner,\n            display: 'flex',\n            flexDirection: 'row'\n        }\n        const RADIAN = Math.PI / 180;\n        const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\n            const radius = innerRadius + (outerRadius - innerRadius) * 0.6;\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n            if (percent < .01) {\n                return <React.Fragment />\n            }\n            return (\n                <text x={x} y={y} fill=\"#777\" textAnchor={'middle'} dominantBaseline=\"central\" style={{mixBlendMode: 'difference'}}>\n                    {`${(percent * 100).toFixed(0)}%`}\n                </text>\n            )\n        }\n        const data = this.props.data\n        const data0 = this.props.data0\n        if (this.isItZero(data) === false) {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div style={transformToCentre}>当前情况无客流</div>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n        if (this.props.duet === true) {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div style={duetFrame}>\n                        <PieChart\n                            width={this.props.size}\n                            height={this.props.size}\n                        >\n                            <Pie\n                                data={data}\n                                nameKey={'key'}\n                                dataKey={'value'}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                            >\n                                {colouredPieConstructor(data, this.props.tint[0])}\n                            </Pie>\n                                <Legend />\n                        </PieChart>\n                        <PieChart\n                            width={this.props.size}\n                            height={this.props.size}\n                        >\n                            <Pie\n                                data={data0}\n                                nameKey={'key'}\n                                dataKey={'value'}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                            >\n                                {colouredPieConstructor(data, this.props.tint[1])}\n                            </Pie>\n                            <Legend />\n                        </PieChart>\n                    </div>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <PieChart\n                        width={this.props.size + 50}\n                        height={this.props.size + 50}\n                        style={transformToCentre}\n                    >\n                        <Pie\n                            data={data}\n                            nameKey={'key'}\n                            dataKey={'value'}\n                            labelLine={false}\n                            label={renderCustomizedLabel}\n                            isAnimationActive={false}\n                        >\n                            {colouredPieConstructor(data, this.props.tint)}\n                        </Pie>\n                        <Legend layout={'vertical'} align={'right'} verticalAlign={'middle'}/>\n                    </PieChart>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n    }\n}","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: 'var(--themeButtonBackground)',\n    color: 'var(--themeColor)',\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n            type: (this.props.type !== undefined) ? this.props.type : \"\",\n            disabled: (this.props.disabled === true),\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick} type={this.state.type} disabled={this.state.disabled}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Suspense } from \"react\";\nimport store, {mapsStore, patchZero} from \"../Store\";\nimport {\n    Button as MaterialButton,\n    Card, CardActions, CardContent, Typography,\n    FormControl, FormControlLabel, FormGroup, FormLabel,\n    Fade, Modal,\n    Checkbox, Slider, Select, MenuItem, TextField, InputLabel,\n} from \"@material-ui/core\";\nimport MapSwitch from \"../Controllers/Switch\";\nimport { Button } from \"../Controllers/Button\";\nimport { defaultRoundCorner } from \"./widgets\";\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst MapFuture = React.lazy(() => import('./Map'));\nconst PassengerMaps = React.lazy(() => import('./PassengerMaps'))\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction predictionRequest(userArguments) {\n    const timeConstructed = moment(userArguments.time).format('MM:DD:hh:mm')\n    const data = {\n        time: timeConstructed,\n        station: {\n            name: userArguments.boom.station,\n            flow: userArguments.boom.flow === undefined || userArguments.boom.type === undefined ? undefined : [userArguments.boom.flow, userArguments.boom.type],\n        },\n        dayprop: userArguments.holiday,\n        weather: userArguments.weather.condition,\n        temperatures: [userArguments.weather.temperature.low, userArguments.weather.temperature.high],\n    }\n    try {\n        axios.post('/python/predict', data)\n            .then(response => {console.log(response)})\n    }\n    catch (error) {}\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            datePicker: false,\n            argumentPicker: false,\n            activated: \"无\",\n            selectedTime: new Date(store.getState().timeline),\n            flowStats: true,\n            storeState: store.getState(),\n            mapsState: mapsStore.getState(),\n            userArguments: {\n                time: store.getState().timeline,\n                holiday: undefined,\n                weather: {\n                    enabled: false,\n                    condition: '阴',\n                    temperature: {\n                        low: undefined,\n                        high: undefined\n                    }\n                },\n                boom: {\n                    enabled: false,\n                    station: undefined,\n                    flow: undefined,\n                    type: 0,\n                    failure: false,\n                }\n            }\n        }\n        store.subscribe(() => this.setState({storeState: store.getState()}))\n        mapsStore.subscribe(() => this.setState({mapsState: mapsStore.getState()}))\n    }\n\n    handleOpen(modal) {\n        if (modal === 'datePicker') {this.setState({datePicker: !this.state.datePicker})}\n        if (modal === 'argumentPicker') {this.setState({argumentPicker: !this.state.argumentPicker})}\n    }\n    handleTime(e) {\n        this.setState({selectedTime: e})\n    }\n    handleChange(e, argument) {\n        let newArguments = this.state.userArguments\n        if (argument === 'holiday') {\n            newArguments.holiday = e.target.checked\n        }\n        if (argument === 'boomTick') {\n            newArguments.boom.enabled = e.target.checked\n        }\n        if (argument === 'boomType') {\n            newArguments.boom.type = e.target.value\n        }\n        if (argument === 'boom') {\n            newArguments.boom.station = this.state.stationSpectating\n            newArguments.boom.flow = e\n        }\n        if (argument === 'weatherTick') {\n            newArguments.weather.enabled = e.target.checked\n        }\n        if (argument === 'weatherTemperatureLow') {\n            newArguments.weather.temperature.low = e.target.value\n        }\n        if (argument === 'weatherTemperatureHigh') {\n            newArguments.weather.temperature.high = e.target.value\n        }\n        if (argument === 'weather') {\n            newArguments.weather.condition = e.target.value\n        }\n        if (argument === 'failure') {\n            newArguments.boom.failure = e.target.checked\n        }\n        this.setState({userArguments: newArguments})\n    }\n    handlePredictionUpdate(type) {\n        predictionRequest(this.state.userArguments, type)\n        alert('预测请求已经提交')\n        this.handleOpen('argumentPicker')\n    }\n    handleTimeUpdate() {\n        store.dispatch({\n            type: 'timeUpdate',\n            time: this.state.selectedTime\n        })\n        mapsStore.dispatch({\n            type: 'refresh'\n        })\n        this.handleOpen('datePicker')\n    }\n    getTripForm() {\n        if (this.state.tripStart === undefined && this.state.tripFinish === undefined) {\n            return <React.Fragment />\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <tr>\n                        <td>进站</td>\n                        <td>{this.state.tripStart}</td>\n                    </tr>\n                    <tr>\n                        <td>出站</td>\n                        <td>{this.state.tripFinish}</td>\n                    </tr>\n                </React.Fragment>\n            )\n        }\n    }\n    startTrip(station) {\n        this.setState({tripStart: station})\n    }\n    finishTrip(station) {\n        this.setState({tripFinish: station})\n    }\n    tripCalculate() {\n        if (this.state.tripStart === this.state.tripFinish) {\n            alert('起点和终点好像在同一站，不计算时间了。')\n            return\n        }\n        const timeline = new Date(this.state.storeState.timeline)\n        const data = {\n            stationin: this.state.tripStart,\n            stationout: this.state.tripFinish,\n            month: timeline.getMonth() + 1,\n            hour: timeline.getHours(),\n            dayprop: (this.state.userArguments.holiday === true) ? 1 : 0\n        }\n        axios.post('/python/dettime', data)\n            .then(response => alert('旅程时间大约为' + Math.abs(response.data.dettime) + '分钟'))\n            .catch(() => alert('旅程时间大约为' + 21 + '分钟'))\n    }\n    getBeginTripButton(start, finish) {\n        if (start !== undefined && finish !== undefined && start !== finish) {\n            return <Button onClick={() => this.tripCalculate()}>开始预测行程</Button>\n        }\n        else {\n            return <React.Fragment />\n        }\n    }\n\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        const timeArray = [this.state.mapsState.dashboardData.highestTime.replace(/:[0-9]$/, '').match(/[0-9]+$/), this.state.mapsState.dashboardData.highestTime.match(/[0-9]+$/)]\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>站点</td>\n                    <td>{this.state.mapsState.stationSpectating.station}</td>\n                </tr>\n                <tr>\n                    <td>线路</td>\n                    <td>{this.state.mapsState.lineSpectating}</td>\n                </tr>\n                <tr>\n                    <td>断面客流</td>\n                    <td>{this.state.mapsState.stationSpectating.flow}</td>\n                </tr>\n                <tr>\n                    <td>高峰时段</td>\n                    <td>{patchZero(timeArray[0], 2)+':'+patchZero(timeArray[1], 2)}</td>\n                </tr>\n                {this.getTripForm()}\n            </table>\n        )\n    }\n    stationArguments() {\n        if (this.state.stationSpectating === 'No') {\n            return (\n                <FormLabel component={'legend'}>没有选择站点</FormLabel>\n            )\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <FormLabel component={'legend'}>{this.state.mapsState.stationSpectating.station}</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.userArguments.holiday}\n                                    onChange={(event) => this.handleChange(event, 'failure')}\n                                />\n                            }\n                            label={'故障'}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.userArguments.boom.enabled}\n                                        onChange={(event) => this.handleChange(event, 'boomTick')}\n                                    />\n                                }\n                                label={'突发客流'}\n                            />\n                            <FormGroup row>\n                                <Select\n                                    labelId={'客流类型'}\n                                    id={'客流类型'}\n                                    value={this.state.userArguments.boom.type}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(event) => this.handleChange(event, 'boomType')}\n                                    style={{width: '100%'}}\n                                >\n                                    <MenuItem value={0}>进站</MenuItem>\n                                    <MenuItem value={1}>出站</MenuItem>\n                                    <MenuItem value={2}>进站加</MenuItem>\n                                    <MenuItem value={3}>出站加</MenuItem>\n                                </Select>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Slider\n                                    defaultValue={3000}\n                                    valueLabelDisplay=\"auto\"\n                                    step={10}\n                                    marks\n                                    min={10}\n                                    max={110}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(foo, event) => this.handleChange(event, 'boom')}\n                                />\n                            </FormGroup>\n                        </FormGroup>\n\n                    </FormGroup>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"Layer\"} style={{borderRadius: defaultRoundCorner}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={'MapTimestamp'}>\n                    <span>预览时间线</span>\n                    <span className={this.state.storeState.timeNoGo === true ? '' : 'noGo'}>{this.state.storeState.timeNoGo === true ? '数据可用' : '该时间无数据'}</span>\n                    <br />\n                    <span className={'TimestampDate'}>\n                        {moment(this.state.storeState.timeline).format('MM-DD-YYYY HH:MM')}\n                    </span>\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch\n                        switchOptions={[\"无\", \"热力图\"]}\n                        setState={(e) => (this.setState(e))}\n                        state={this.state}\n                    />\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}数据\n                    </Button>\n                    <div style={{fontSize: '11pt', marginTop: '.5em'}}>更改预览时间</div>\n                    <div style={{display: \"flex\", flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <Button onClick={() => this.handleOpen('datePicker')}>\n                            选择\n                        </Button>\n                        <div style={{width: '.5em'}}/>\n                        <Button onClick={() => store.dispatch({type: 'timeUpdate', live: true})}>\n                            实时\n                        </Button>\n                    </div>\n                    <div style={{fontSize: '11pt', marginTop: '.5em'}}>行程时间预测</div>\n                    <div style={{display: \"flex\", flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <Button onClick={() => this.startTrip(this.state.mapsState.stationSpectating.station)}>起点</Button>\n                        <Button onClick={() => this.finishTrip(this.state.mapsState.stationSpectating.station)}>终点</Button>\n                    </div>\n                    {this.getBeginTripButton(this.state.tripStart, this.state.tripFinish)}\n                    <div style={{fontSize: '11pt', marginTop: '.5em'}}>更改预测参数</div>\n                    <Button onClick={() => this.handleOpen('argumentPicker')}>模拟数据变更</Button>\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.selectedTime}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"primary\"}\n                                        onClick={() => this.handleTimeUpdate(this.state.storeState.time)}\n                                    >\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"default\"}\n                                        onClick={() => this.handleOpen('datePicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.argumentPicker}>\n                        <Fade in={this.state.argumentPicker}>\n                            <Card style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        输入参数\n                                    </Typography>\n                                    <div className={'DualPanel'}>\n                                        <FormControl component={'fieldset'}>\n                                            <FormLabel component={'legend'}>该时间操作</FormLabel>\n                                            <FormGroup row>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.holiday}\n                                                            onChange={this.state}\n                                                        />\n                                                    }\n                                                    label={'放假'}\n                                                />\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weatherTick')}\n                                                        />\n                                                    }\n                                                    label={'变更天气'}\n                                                />\n                                                <FormGroup>\n                                                    <FormControl>\n                                                        <InputLabel id={'天气选择标签'}>\n                                                            天气类型\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"天气选择\"\n                                                            id=\"天气选择\"\n                                                            value={this.state.userArguments.weather.condition}\n                                                            disabled={!this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weather')}\n                                                        >\n                                                            <MenuItem value={'阴'}>阴</MenuItem>\n                                                            <MenuItem value={'晴'}>晴</MenuItem>\n                                                            <MenuItem value={'多云'}>多云</MenuItem>\n                                                            <MenuItem value={'小雨'}>小雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>中雨</MenuItem>\n                                                            <MenuItem value={'大雨'}>大雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>暴雨</MenuItem>\n                                                            <MenuItem value={'雷阵雨'}>雷阵雨</MenuItem>\n                                                        </Select>\n                                                    </FormControl>\n\n                                                    <TextField\n                                                        id={'最低温度输入'}\n                                                        label={'输入最低摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureLow')}\n                                                    />\n                                                    <TextField\n                                                        id={'最高温度输入'}\n                                                        label={'输入最高摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureHigh')}\n                                                    />\n                                                </FormGroup>\n                                            </FormGroup>\n                                        </FormControl>\n                                        <br />\n                                        <FormControl component={'fieldset'}>\n                                            {this.stationArguments()}\n                                        </FormControl>\n                                    </div>\n                                </CardContent>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"} onClick={() => this.handlePredictionUpdate('meow')}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('argumentPicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>地图正在加载……</div>}>\n                        <MapFuture\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                            mode={this.state.activated}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class PassengerMapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {activated: store.getState().passengerMode}\n        store.subscribe(() => {\n            this.setState({activated: store.getState().passengerMode})\n        })\n    }\n    handlePassengerModeChange(e) {\n        store.dispatch({\n            type: 'changePassengerMode',\n            mode: e.activated\n        })\n    }\n\n    render() {\n        return (\n            <div className={'Layer'} style={{borderRadius: defaultRoundCorner}}>\n                <div className=\"MapControllers\" style={{left: 5, right: 'inherit'}}>\n                    <MapSwitch\n                        switchOptions={[\"总客流\", \"出站\", \"进站\"]}\n                        setState={(e) => (this.handlePassengerModeChange(e))}\n                        state={this.state}\n                    />\n                </div>\n\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={'MLPlaceholder'}>乘客画像地图正在加载……</div>}>\n                        <PassengerMaps\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport { MapsBlock } from '../Widgets/MapsBlock';\nimport { mapsStore } from \"../Store\";\n\nconst body = document.body\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8),\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size, mapsState} = this.state\n        return (\n            <div className={\"OverviewGrid\"} key={'pages-index'}>\n                <div className={\"div1\"}>\n                    <Widgets.DashboardOne size={size} data={mapsState.highestFlow}>\n                        客流最高站点\n                    </Widgets.DashboardOne>\n                </div>\n                <div className={\"div2\"}>\n                    <Widgets.GreatLegends type={'straight'} name={'全网客流量指数'} value={mapsState.overallFlow}>\n                        重点客流量\n                    </Widgets.GreatLegends>\n                </div>\n                <div className={\"div3\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.highestDist4}\n                        zoom={0.1}\n                        tint={['#6099DB', '#DC73BC', '#7BDB6B', '#DBD455']}\n                    >\n                        客流高峰区域\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div4\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.lineFlow}\n                        keys={['linename', 'flow']}\n                        tint={['#6BDB9C', '#DBC760', '#5685DB', '#D9734C']}\n                    >\n                        客流高峰线路\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div5\"}>\n                    <MapsBlock\n                        port={{\"height\": size * 5, \"width\": size * 4}}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\nimport store, {mapsStore, searchArray} from \"../Store\";\n\nconst body = document.body\nconst lineArray = ['1号线', '2号线', '3号线', '4号线', '5号线', '10号线', '11号线', '12号线']\nconst tintArray=['#09B8A3', '#23EB62', '#A1C0F5', '#0977B8', '#658EA4', '#F5DE2F', '#F58CB2', '#7FDAFA', '#7A5DF9']\n\nexport class LineHeat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            height: body.scrollHeight / 12,\n            width: body.scrollWidth / 2.2,\n            size: Math.min(body.scrollHeight / 5, body.scrollWidth / 3)\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    getLineMap(name) {\n        const lineData = this.state.mapsState.hotPowerGraph\n        const mapArray = searchArray(lineData, 'line', name, 'level')\n        return {\n            xAxisMeasurement: '站点',\n            lines: [\n                {name: name, values: mapArray}\n            ]\n        }\n    }\n    getBlocks() {\n        const { height, width } = this.state\n        const outerMethods = (name) => this.getLineMap(name)\n        return lineArray.map(function (data, index) {\n            return ([\n                <div className={\"div\" + (index + 2)}>\n                    <Widgets.SimpleTrends\n                        port={{'height': height, 'width': width * 2}}\n                        data={outerMethods(lineArray[index])}\n                        tint={[tintArray[index]]}\n                        tooltip\n                        axis\n                    >\n                        {lineArray[index]}客流记录和预测数据\n                    </Widgets.SimpleTrends>\n                </div>\n            ])\n        }, height, width, outerMethods, lineArray, tintArray)\n\n    }\n    getLineBars() {\n        const {overallFlow} = this.state.mapsState\n        return this.state.mapsState.lineFlow.map(function (line) {\n            if (line.linename === '全网') {\n                return {linename: '全网', flow: overallFlow}\n            }\n            return line\n        }, overallFlow)\n    }\n\n    render() {\n        const {height, width} = this.state\n        return(\n            <div className={\"LHGrid\"} key={'pages-line-heat'}>\n                <div className=\"div1\">\n                    <Widgets.SimpleBars\n                        port={{height: height, width: width * 2}}\n                        data={this.getLineBars()}\n                        keys={['linename', 'flow']}\n                        tint={['#09B8A3', '#23EB62', '#F0438F', '#EBBF23', '#A1C0F5', '#0977B8', '#B98AF5', '#F7DF34', '#F75A43', '#65A1C2']}\n                        label\n                        axis\n                    >\n                        当前全网线路客流\n                    </Widgets.SimpleBars>\n                </div>\n                {this.getBlocks()}\n            </div>\n        )\n    }\n}\n\nexport class HeatTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            storeState: store.getState(),\n            timelineData: mapsStore.getState().dashboardData.sevenFlow\n        }\n        store.subscribe(() => this.setState({storeState: store.getState()}))\n        mapsStore.subscribe(() => this.setState({timelineData: mapsStore.getState().dashboardData.sevenFlow}))\n    }\n    calculateSize = () => {\n        this.setState({\n            width: body.scrollWidth / 2.2,\n            height: body.scrollHeight / 10,\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n        mapsStore.dispatch({type: 'refresh'})\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    getLineTimeline(index, name) {\n        try {\n            const result = {\n                xAxisMeasurement: '日',\n                lines: [{\n                    name: name,\n                    values: this.state.timelineData[index].values\n                }]\n            }\n            return (result)\n        }\n        catch (e) {}\n        return {\n            xAxisMeasurements: '加载中',\n            lines: []\n        }\n    }\n    getLineTimelines() {\n        try {\n            let lineMapArray = this.state.timelineData.map(function (lineData) {\n                return (\n                    {\n                        name: lineData.linename,\n                        values: lineData.values\n                    }\n                )\n            })\n            return {\n                xAxisMeasurement: '日',\n                lines: lineMapArray\n            }\n        }\n        catch (e) {}\n        return {\n            xAxisMeasurements: '加载中',\n            lines: []\n        }\n    }\n    getBlocks() {\n        const { height, width } = this.state\n        const outerMethods = (line, name) => this.getLineTimeline(line, name)\n        return this.state.timelineData.map(function (line, index) {\n            return ([\n                <div className={\"div\" + (index + 2)}>\n                    <Widgets.SimpleTrends\n                        port={{'height': height, 'width': width}}\n                        data={outerMethods(index, lineArray[index])}\n                        tint={[tintArray[index]]}\n                        tooltip\n                        axis\n                    >\n                        {lineArray[index]}客流记录和预测数据\n                    </Widgets.SimpleTrends>\n                </div>\n            ])\n        }, height, width, outerMethods, lineArray, tintArray)\n\n    }\n\n    render() {\n        const { height, width } = this.state\n        const testData = {\n            xAxisMeasurement: '日',\n            lines: [{\n                name: '1号线', values: [1, 2, 3, 4, 5, 6]\n            }]\n        }\n        return(\n            <div className={\"THGrid\"} key={'pages-timeline-heat'}>\n                <div className=\"div1\">\n                    <Widgets.SimpleTrends\n                        port={{'height':  height, 'width': width * 2}}\n                        data={testData}\n                        tooltip\n                        axis\n                    >\n                        近日客流量时间分布\n                    </Widgets.SimpleTrends>\n                </div>\n                {this.getBlocks()}\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport {PassengerMapsBlock} from \"../Widgets/MapsBlock\";\nimport store, {mapsStore, arrayCoherence} from \"../Store\";\n\nconst body = document.body\nconst passengerArray=['16岁以下', '16~25', '25~40', '40~60', '60岁以上', '16岁以下', '16~25', '25~40', '40~60', '60岁以上', '16岁以下', '16~25', '25~40', '40~60', '60岁以上']\nconst tintArray=[['#09B8A3', '#23EB62', '#A1C0F5', '#0977B8', '#658EA4'], ['#F5E3D0', '#F5DE2F', '#F58CB2', '#7FDAFA', '#7A5DF9']]\n\nclass PassengerAnalytics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stationInward: mapsStore.getState().ageMapSpectating.inward,\n            stationOutward: mapsStore.getState().ageMapSpectating.outward,\n            activated: store.getState().passengerMode,\n        }\n        mapsStore.subscribe(() => {\n            this.setState({\n                stationInward: mapsStore.getState().ageMapSpectating.inward,\n                stationOutward: mapsStore.getState().ageMapSpectating.outward,\n            })\n            this.forceUpdate()\n        })\n        store.subscribe(() => {\n            this.setState({activated: store.getState().passengerMode})\n        })\n    }\n\n    calculateSize = () => {\n        this.setState({\n            height: body.scrollHeight / 6,\n            width: body.scrollWidth / 6,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 10)\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n        mapsStore.dispatch({type: 'refresh'})\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    getSlice() {\n        if (this.state.activated === '进站') {\n            return [0, 4]\n        }\n        if (this.state.activated === '出站') {\n            return [5, 9]\n        }\n        if (this.state.activated === '总客流') {\n            return [10, 14]\n        }\n    }\n    getSum(type, data0, data1) {\n        try {\n            if (type === 'inOut') {\n                let inward = 0\n                let outward = 0\n                data0.slice(10, 14).map(function (value) {\n                    inward += value\n                    return true\n                })\n                data1.slice(10, 14).map(function (value) {\n                    outward += value\n                    return true\n                })\n                return [\n                    {key: '进站', value: inward},\n                    {key: '出站', value: outward}\n                ]\n            }\n            if (type === 'inOutBar') {\n                let inward = 0\n                let outward = 0\n                data0.slice(10, 14).map(function (value) {\n                    inward += value\n                    return true\n                })\n                data1.slice(10, 14).map(function (value) {\n                    outward += value\n                    return true\n                })\n                //eslint-ignore-next-line\n                return {'进站': inward, '出站': outward}\n            }\n            if (type === 'gender') {\n                let girls = 0\n                let boys = 0\n                data0.slice(0, 4).map(function (value) {\n                    girls += value\n                    return true\n                })\n                data1.slice(0, 4).map(function (value) {\n                    girls += value\n                    return true\n                })\n                data0.slice(5, 10).map(function (value) {\n                    boys += value\n                    return true\n                })\n                data1.slice(5, 10).map(function (value) {\n                    boys += value\n                    return true\n                })\n                return [\n                    {key: '女性', value: girls},\n                    {key: '男性', value: boys}\n                ]\n            }\n        }\n        catch (e) {}\n        return ({key: '加载中', value: 0})\n    }\n\n    render() {\n        const {height, width, size} = this.state\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                        <PassengerMapsBlock\n                            port={{height: height * 4, width: width * 2}}\n                        />\n                    </div>\n                    <div className=\"div2\">\n                        <Widgets.SimplePieCharts\n                            size={size * 2}\n                            duet\n                            tint={tintArray}\n                            data={arrayCoherence(passengerArray, this.state.stationInward, this.getSlice())}\n                            data0={this.getSum('inOut', this.state.stationInward, this.state.stationOutward)}\n                        >\n                            所选站点乘客结构\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div3\">\n                        <Widgets.SimplePieCharts\n                            size={size * 2}\n                            tint={tintArray[0]}\n                            data={arrayCoherence(passengerArray, [88, 99, 77, 66, 55, 44, 33, 22, 11, 44, 55, 66, 77, 88, 99, 100], [10, 14])}\n                        >\n                            全网乘客结构\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div4\">\n                        <Widgets.SimplePieCharts\n                            size={size}\n                            data={this.getSum('gender', this.state.stationInward, this.state.stationOutward)}\n                            tint={tintArray[1]}\n                        >\n                            当前站点客流性别比例\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div5\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": width}}\n                            tint={[\"#FAA45A\", \"#FA5A9F\"]}\n                            data={this.getSum('inOutBar', this.state.stationInward, this.state.stationOutward)}\n                            label\n                        >\n                            当前站点进出站客流\n                        </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div6\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#5CD0FF\", \"#98FA8A\"]}\n                            data={{'女性':55, '男性':50}}\n                        >\n                            全网乘客性别比例\n                        </Widgets.SimpleBars>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from \"react\";\nimport \"./style.css\"\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (this.props.type !== undefined) ? this.props.type : \"text\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={'InputFunction'}>\n                <label>\n                    {this.props.children}\n                </label>\n                <input className={'coilsInput'} type={this.state.type} onChange={(event => this.props.handler(event))}/>\n            </div>\n        )\n    }\n}\n\nexport default Input","import React from \"react\";\nimport { Input, Button } from '../Controllers';\nimport { FormGroup, FormLabel, Slider, Button as MaterialButton } from '@material-ui/core'\nimport axios from \"axios\";\nimport './style.css';\nimport store, { setExpiration, clearStorage } from \"../Store\";\nimport { ThemeSwitch } from \"../Controllers/Switch\";\n\nfunction loginRequest(username, password) {\n    try {\n        axios.post('/api/log', {\n            'username': username,\n            'password': password\n        }).then(function (response) {\n            console.log(response.data)\n            alert(response.data.msg)\n            if (response.data.code === 200) {\n                store.dispatch({\n                    type: 'login',\n                    loginState: true,\n                    session: response.data\n                })\n            }\n        })\n    }\n    catch (error) {\n        alert('网络连接出现了一些问题')\n        console.error(error);\n    }\n}\n\nclass CertForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: 1,\n        }\n    }\n    CertChange(type) {\n        let feedbackInfo\n        if (type === 'logout') {\n            feedbackInfo = '注销凭据完成'\n            const action = {\n                type: 'certMan',\n                logout: true\n            }\n            store.dispatch(action)\n        }\n        if (type === 'cache') {\n            feedbackInfo = '保存凭据' + this.state.duration +'天'\n            setExpiration(this.state.duration)\n        }\n        alert(feedbackInfo)\n    }\n    handleSlider = (event, newValue) => {\n        this.setState({duration: newValue})\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <ThemeSwitch/>\n                <div className={'Description'}>\n                    可以按 [K] 快速切换主题\n                </div>\n                <form\n                    style={{marginTop: '2em'}}\n                    onSubmit={() => this.CertChange('cache', this.state.duration)}\n                >\n                    <FormGroup>\n                        <FormLabel style={{color: 'var(--ThemeColor)'}} component={'legend'}>保存凭据时长（天）</FormLabel>\n                        <div style={{margin: '0 auto', width: 'calc(100% - 20px)'}}>\n                            <Slider\n                                defaultValue={1}\n                                valueLabelDisplay=\"auto\"\n                                step={5}\n                                marks\n                                min={1}\n                                max={31}\n                                onChange={this.handleSlider}\n                            />\n                        </div>\n                    </FormGroup>\n                    <div style={{display: \"flex\", flexDirection: 'row'}}>\n                        <Button type={'submit'}>\n                            保存凭据\n                        </Button>\n                        <div style={{width: '.5em'}}/>\n                        <Button onClick={() => this.CertChange('logout')}>\n                            注销\n                        </Button>\n                    </div>\n                    <br />\n                    <MaterialButton\n                        size={'small'}\n                        style={{color: '#F66'}}\n                        onClick={() => clearStorage()}\n                    >\n                        清除本地数据并注销\n                    </MaterialButton>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState(),\n            username: '',\n            password: ''\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n    handleLogin(event) {\n        event.preventDefault()\n        loginRequest(this.state.username, this.state.password)\n    }\n    handleForm(event, type) {\n        if (type === 'username') {\n            this.setState({username: event.target.value})\n        }\n        if (type === 'password') {\n            this.setState({password: event.target.value})\n        }\n    }\n\n    render() {\n        let FormSheet, hello\n        const LoginForm = [\n            <form onSubmit={(e) => this.handleLogin(e)}>\n                <div className={\"AuthForm\"}>\n                    <div>\n                        <Input handler={(e) => {this.handleForm(e, 'username')}}>\n                            用户名称\n                        </Input>\n                        <Input type={\"password\"} handler={(e) => {this.handleForm(e, 'password')}}>\n                            密码\n                        </Input>\n                    </div>\n                    <div className={\"Button\"}>\n                        <Button type={\"submit\"}>\n                            好\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        ]\n\n        if (this.state.store.loginState) {\n            FormSheet = [<CertForm/>]\n            hello = \"认证管理\"\n        }\n        else {\n            FormSheet = LoginForm\n            hello = \"认证\"\n        }\n\n        return (\n            <React.Fragment>\n                <div id={'Amaze'}/>\n                <div id={'ActualCard'}>\n                    <h1>\n                        {hello}\n                    </h1>\n                </div>\n                <div id={'Maze'}/>\n                    <section className={\"AuthCard\"}>\n                        {FormSheet}\n                    </section>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport Overview from \"./Overview\";\nimport { LineHeat, HeatTimeline } from \"./LineHeat\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport Login from \"./Authenticate\";\nimport './index.css';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, {exposedMethods, mapsStore} from \"./Store\";\n\nconst root = document.documentElement\n\nfunction setTheme() {\n    if (store.getState().theme === 'light') {\n        root.style.setProperty('--themeTable', '#E3E3E3')\n        root.style.setProperty('--themeBorder', 'none')\n        root.style.setProperty('--themeColor', '#443')\n        root.style.setProperty('--themeHover', '#220')\n        root.style.setProperty('--themeActive', '#220')\n        root.style.setProperty('--themeLayer', 'rgba(250, 250, 250, 0.8)')\n        root.style.setProperty('--themeFilter', 'screen')\n        root.style.setProperty('--themeDarkFilter', 'brightness(1.17)')\n        root.style.setProperty('--themePure0', 'rgba(255, 255, 255, 1)')\n        root.style.setProperty('--themePure1', 'rgba(255, 255, 255, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(80, 80, 80, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#FFF')\n        root.style.setProperty('--controlBlur', '#553')\n        root.style.setProperty('--dockBorderSize', '1px')\n        root.style.setProperty('--actualFilter', 'rgba(255, 255, 255, .8)')\n    }\n    if (store.getState().theme === 'dark') {\n        root.style.setProperty('--themeTable', '#171717')\n        root.style.setProperty('--themeBorder', '0 0 1.5px #EEE')\n        root.style.setProperty('--themeColor', '#EEE')\n        root.style.setProperty('--themeHover', '#AAB')\n        root.style.setProperty('--themeActive', '#FFF')\n        root.style.setProperty('--themeLayer', 'rgba(53, 53, 53, 0.8)')\n        root.style.setProperty('--themeFilter', 'luminosity')\n        root.style.setProperty('--themeDarkFilter', 'brightness(.25)')\n        root.style.setProperty('--themePure0', 'rgba(64, 64, 64, 1)')\n        root.style.setProperty('--themePure1', 'rgba(0, 0, 0, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(255, 255, 255, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#535353')\n        root.style.setProperty('--controlBlur', '#BBC')\n        root.style.setProperty('--dockBorderSize', '2px')\n        root.style.setProperty('--actualFilter', 'rgba(0, 0, 25, .15)')\n\n    }\n}\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {storeState: store.getState()}\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){this.setState({storeState: store.getState()})}\n    componentDidMount() {\n        mapsStore.dispatch({type: 'refresh'})\n    }\n\n    render() {\n        setTheme()\n        let pagesList = []\n        if (this.state.storeState.loginState === true) {\n            pagesList.push(\n                <Switch>\n                    <Route exact path={\"./\"}>\n                        <Redirect to={\"Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"} component={AnimationApp}/>\n                </Switch>\n            )\n        }\n        else {\n            pagesList.push(\n                <Switch>\n                    <Route path={\"*\"}>\n                        <Login />\n                    </Route>\n                </Switch>\n            )\n        }\n        return (\n            <PersistGate store={store} persistor={exposedMethods}>\n                <Router>\n                    {pagesList}\n                </Router>\n            </PersistGate>\n        )\n    }\n}\n\nclass AnimationApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            handling: 0,\n            redirect: undefined\n        }\n    }\n    wary(e) {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        this.setState({redirect: e})\n        this.setState({redirect: undefined})\n    }\n    themeSwitcherWary() {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        store.dispatch({type: 'switchTheme'})\n    }\n\n    componentDidMount() {\n        let done = () => {\n            this.setState({handling: 0})\n        }\n        store.subscribe(() => {\n            setTimeout(done, 500, done)\n        })\n        this.props.history.listen(location => {\n            mapsStore.dispatch({type: 'refresh'})\n            if (this.props.location.pathname !== location.pathname) {\n                setTimeout(done, 500, done)\n            }\n        })\n    }\n    render() {\n        const redirect = {\n            state: this.state.redirect,\n            handling: this.state.handling,\n            set: (e) => this.wary(e),\n            done: () => this.done()\n        }\n        const themeSwitchKey = () => this.themeSwitcherWary()\n\n        function handleShortcutKey(key) {\n            const destination = ['Overview', 'LineHeat', 'HeatTimeline', 'PassengerAnalytics', 'Authenticate']\n            redirect.set(<Redirect to={destination[key - 1]}/>)\n        }\n        // keyboard shortcuts\n        window.addEventListener(\"keyup\", function (e) {\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (e.key !== undefined) {\n                if (e.key === '1') {handleShortcutKey(1)}\n                if (e.key === '2') {handleShortcutKey(2)}\n                if (e.key === '3') {handleShortcutKey(3)}\n                if (e.key === '4') {handleShortcutKey(4)}\n                if (e.key === 'L' || e.key === 'l') {handleShortcutKey(5)}\n                if (e.key === 'K' || e.key === 'k') {themeSwitchKey()}\n            }\n            else if (e.code !== undefined) {\n                if (e.code === 'Digit1') {handleShortcutKey(1)}\n                if (e.code === 'Digit2') {handleShortcutKey(2)}\n                if (e.code === 'Digit3') {handleShortcutKey(3)}\n                if (e.code === 'Digit4') {handleShortcutKey(4)}\n                if (e.code === 'KeyL') {handleShortcutKey(5)}\n                if (e.code === 'KeyK') {themeSwitchKey()}\n            }\n        })\n\n        return (\n            <React.Fragment>\n                {this.state.redirect}\n                <div className=\"Dock\">\n                    <NavLink key={\"Overview\"} to={\"Overview\"} activeClassName={\"active\"} exact>\n                        <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                    </NavLink>\n                    <NavLink key={\"LineHeat\"} to={\"LineHeat\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>线路分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"HeatTimeline\"} to={\"HeatTimeline\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>时段分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"PassengerAnalytics\"} to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>用户画像<span>3</span></button>\n                    </NavLink>\n                    <NavLink key={\"Authenticate\"} to={\"Authenticate\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>认证与设置<span>L</span></button>\n                    </NavLink>\n                </div>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={this.props.location}\n                        classNames={\"fade\"}\n                        timeout={250}\n                    >\n                        <Switch>\n                            <Route path={`*/Overview`} component={Overview}/>\n                            <Route path={`*/LineHeat`} component={LineHeat}/>\n                            <Route path={`*/HeatTimeline`} component={HeatTimeline}/>\n                            <Route path={`*/PassengerAnalytics`} component={PassengerAnalytics}/>\n                            <Route path={`*/Authenticate`} component={Login}/>\n                            <Route path={`*`}>\n                                <Redirect to={\"Overview\"}/>\n                            </Route>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const nowPlacebo = 'May 29, 2020 22:30:00'\nconst defaultState = {\n    active: \"dashboard\",\n    theme: 'light',\n    loginState: false,\n    sessionData: '',\n    now: new Date(nowPlacebo),\n    timeline: new Date(nowPlacebo),\n    passengerMode: '总客流',\n    timePeriod: '实时',\n    timeNoGo: '数据加载中',\n    flowSpectating: -1,\n}\nconst Store = (state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'login' && action.loginState) {\n        newState.loginState = true\n        newState.sessionData = action.session\n        return newState\n    }\n    if (action.type === 'certMan') {\n        if (action.logout) {\n            return defaultState\n        }\n    }\n    if (action.type === 'switchTheme') {\n        newState.theme = 'light'\n        if (state.theme === 'light') {\n            newState.theme = 'dark'\n        }\n        return newState\n    }\n    if (action.type === 'changePassengerMode') {\n        newState.passengerMode = action.mode\n        return newState\n    }\n    if (action.type === 'timeUpdate') {\n        if (action.live === true) {\n            newState.timePeriod = '实时'\n            newState.timeline = nowPlacebo\n        }\n        else {\n            if (action.time > state.now) {\n                newState.timePeriod = '预测'\n            }\n            else if (action.time < state.now) {\n                newState.timePeriod = '历史'\n            }\n            newState.timeline = action.time\n        }\n        return newState\n    }\n    if (action.type === 'noGo') {\n        newState.timeNoGo = action.value === '成功'\n        return newState\n    }\n    if (action.type === 'clear') {\n        return defaultState\n    }\n    return state\n}\nexport default Store","import store, {refreshDashboard, searchObject} from \"./index\";\n\nconst defaultValue = {\n    initiated: 0,\n    pathData: {},\n    heatData: {},\n    dashboardData: {},\n    lineSpectating: 'No',\n    stationSpectating: {station: '没有选中站点', flow: 0},\n    ageMapSpectating: {station: '没有选中站点', inward: undefined, outward: undefined}\n}\n\nconst Store = (state = defaultValue, action) => {\n    let newMapState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'refresh') {\n        if (!newMapState.initiated) {\n            newMapState.dashboardData = require('../stationaryPlaceholder/dashboard.json')\n            newMapState.pathData = require('../stationaryPlaceholder/paths.json')\n        }\n        refreshDashboard(store.getState().timeline)\n        return newMapState\n    }\n    if (action.type === 'loadDashboard') {\n        newMapState.dashboardData = action.data\n        return newMapState\n    }\n    if (action.type === 'hoverUpdate') {\n        newMapState.lineSpectating = action.line\n        if (action.hoverType === 'station' || action.hoverType === 'path') {\n            newMapState.stationSpectating[action.hoverType] = action.hoverID\n            newMapState.stationSpectating.flow = action.flow\n        }\n        if (action.hoverType === 'age') {\n            newMapState.ageMapSpectating.station = action.hoverID\n            newMapState.ageMapSpectating.inward = searchObject(newMapState.dashboardData.ageMap, 'station', action.hoverID, 'in')\n            newMapState.ageMapSpectating.outward = searchObject(newMapState.dashboardData.ageMap, 'station', action.hoverID, 'out')\n        }\n        console.log(newMapState)\n        return newMapState\n    }\n    if (action.type === 'clear') {\n        return defaultValue\n    }\n    return state\n}\nexport default Store","import { createStore } from \"redux\";\nimport methods from './methods';\nimport mapsUpdater from './mapsUpdater';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { CookieStorage } from 'redux-persist-cookie-storage';\nimport storage from 'redux-persist/lib/storage';\nimport Cookies from 'cookies-js';\nimport axios from \"axios\";\n\nlet expires = 22 * 86400\n\nexport function setExpiration(schoolDays)\n{\n    if (schoolDays === undefined) {\n        schoolDays = 22\n    }\n    expires = schoolDays * 86400;\n}\n\n//组件数据和会话\nconst persistConfig = {\n    key: 'root',\n    storage: new CookieStorage(Cookies, {expiration:\n        {default: expires}\n    })\n}\nconst persistedMethods = persistReducer(persistConfig, methods)\nlet store = createStore(persistedMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport let exposedMethods = persistStore(store)\nexport default store\n\n//地图存储\nconst mapsPersistConfig = {\n    key: 'maps',\n    storage: storage\n}\nconst mapsMethods = persistReducer(mapsPersistConfig, mapsUpdater)\nexport let mapsStore = createStore(mapsMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport let mapsExposedMethods = persistStore(mapsStore)\n\nexport function searchObject(data, searchKey, value, requiredKey) {\n    let result\n    try {\n        data.forEach(function (theObject) {\n            if (theObject[searchKey] === value) {\n                result = theObject[requiredKey]\n            }\n        })\n    }\n    catch(error) {}\n\n    return result\n}\nexport function searchArray(data, searchKey, value, requiredKey) {\n    let result = []\n    try {\n        data.forEach(function (theObject) {\n            if (theObject[searchKey] === value) {\n                result.push(theObject[requiredKey])\n            }\n        })\n    }\n    catch(error) {}\n\n    return result\n}\nexport function refreshDashboard(timeline) {\n    if (timeline === undefined) {\n        console.log('undefined date')\n        return\n    }\n    const date = new Date(timeline)\n    const data = {\n        year: date.getFullYear().toString(),\n        month: (date.getMonth() + 1).toString(),\n        day: date.getDate().toString(),\n        hour: date.getHours().toString(),\n        minute: date.getMinutes().toString()\n    }\n    console.log('Time update request fired')\n    axios.post('/api/time/json', data)\n        .then(response => {\n            console.log(response.data.result.msg)\n            mapsStore.dispatch({\n                type: 'loadDashboard',\n                data: response.data\n            })\n            store.dispatch({\n                type: 'noGo',\n                value: response.data.result.msg\n            })\n        })\n}\nexport function moodyTimeDifference(givenTime) {\n    const moodyHour = givenTime.getHours() + (givenTime.getMinutes() > 30 ? 1 : 0)\n    const moodyMin = givenTime.getMinutes() > 15 && givenTime.getMinutes() <= 45 ? 30 : 0\n    return givenTime.getMonth()+1 + ':' + givenTime.getDate() + ':' + moodyHour + ':' + moodyMin\n}\nexport function clearStorage() {\n    mapsStore.dispatch({type: 'clear'})\n    store.dispatch({type: 'clear'})\n}\nexport function arrayCoherence(keys, values, slice) {\n    let newArray = []\n    try {\n        values.map(function (value, index) {\n            if (slice === undefined) {\n                let newDictionary = {\n                    key: keys[index],\n                    value: value\n                }\n                newArray.push(newDictionary)\n            }\n            else if (index >= slice[0] && index <= slice[1]) {\n                let newDictionary = {\n                    key: keys[index],\n                    value: value\n                }\n                newArray.push(newDictionary)\n            }\n            return true\n        })\n    }\n    catch (e) {\n        newArray = [{key: '数据加载中', value: 100}]\n    }\n\n    return newArray\n}\nexport function patchZero(str, target){\n    str ='00000'+str;\n    return str.substring(str.length-target,str.length);\n}"],"sourceRoot":""}