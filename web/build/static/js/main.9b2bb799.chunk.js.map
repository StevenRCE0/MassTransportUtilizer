{"version":3,"sources":["Controllers/Switch.js","Widgets/widgets.js","Controllers/Button.js","Widgets/MapsBlock.js","Overview/index.js","LineHeat/index.js","PassengerAnalytics/index.js","Controllers/Input.js","Authenticate/index.js","App.js","reportWebVitals.js","index.js","Store/methods.js","Store/mapsUpdater.js","Store/index.js"],"names":["MapSwitch","props","state","switchOptions","this","setState","allOptions","optionsController","index","forEach","perOption","acClass","activated","push","id","onClick","className","style","enumOptions","React","Component","ThemeSwitch","themeNames","store","getState","theme","dispatch","type","value","Fragment","position","height","transformToCentre","left","top","transform","defaultRoundCorner","makeAvailable","thing","undefined","linesConstructor","dataArray","tintArray","tooltip","lines","tooltipElement","converted","drawn","map","line","lineIndex","values","y","x","partPoint","name","Object","assign","dot","strokeWidth","dataKey","stroke","data","width","barConstructor","label","keys","fixedHeight","barContent","key","labelSet","fill","isAnimationActive","bottom","colouredPieConstructor","tint","entry","length","e","Dashboard","nameLabel","theKeys","zoom","emptyData","zoomSet","theKeysSet","fixDictionaryKeys","size","innerRadius","frame","borderRadius","children","slice","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","DashboardOne","formatter","greatLegend","Trends","uv","pv","amt","port","r","SimpleTrends","SimpleBars","propTintArray","dataToConstruct","newDictionary","makeDictionaryPairs","AreaChartTrends","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","fillOpacity","GreatLegends","error","inside","getFromData","makeEmpty","SimplePieCharts","result","duetFrame","display","flexDirection","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","outerRadius","percent","radius","cos","sin","textAnchor","dominantBaseline","mixBlendMode","toFixed","data0","isItZero","duet","nameKey","labelLine","layout","MNButtonStyle","backgroundColor","color","Button","disabled","variant","MapFuture","lazy","PassengerMaps","MapsBlock","datePicker","argumentPicker","selectedTime","Date","timeline","flowStats","storeState","mapsState","mapsStore","userArguments","holiday","weather","enabled","condition","temperature","low","high","boom","station","flow","failure","subscribe","modal","argument","newArguments","target","checked","stationSpectating","axios","post","dayprop","temperatures","then","response","console","log","predictionRequest","alert","handleOpen","time","tripStart","tripFinish","stationin","stationout","month","getMonth","hour","getHours","dettime","catch","start","finish","tripCalculate","lineSpectating","getTripForm","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","onChange","event","handleChange","row","Select","labelId","MenuItem","Slider","defaultValue","valueLabelDisplay","step","marks","min","max","foo","opacity","userSelect","cursor","getStats","timeNoGo","moment","format","triggerStats","fontSize","marginTop","justifyContent","live","startTrip","finishTrip","getBeginTripButton","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","margin","utils","MomentUtils","handleTime","CardActions","handleTimeUpdate","FormControl","InputLabel","TextField","InputLabelProps","shrink","stationArguments","handlePredictionUpdate","fallback","mode","PassengerMapsBlock","passengerMode","handlePassengerModeChange","body","document","Index","calculateSize","scrollHeight","scrollWidth","dashboardData","window","addEventListener","removeEventListener","highestFlow","overallFlow","highestDist4","lineFlow","LineHeat","xAxisMeasurements","HeatTimeline","passengerArray","PassengerAnalytics","stationInward","ageMapSpectating","inward","stationOutward","outward","forceUpdate","newArray","data1","girls","boys","arrayCoherence","getSlice","getSum","u","p","Input","handler","CertForm","handleSlider","newValue","duration","feedbackInfo","logout","setExpiration","onSubmit","CertChange","clearStorage","Login","username","password","storeChange","bind","preventDefault","msg","code","loginState","session","loginRequest","FormSheet","hello","LoginForm","handleLogin","handleForm","root","documentElement","App","setProperty","pagesList","exact","path","to","AnimationApp","persistor","exposedMethods","handling","redirect","done","setTimeout","history","listen","location","pathname","wary","themeSwitchKey","themeSwitcherWary","handleShortcutKey","defaultPrevented","activeClassName","TransitionGroup","CSSTransition","classNames","timeout","Overview","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","nowPlacebo","defaultState","active","sessionData","now","timePeriod","flowSpectating","Store","action","newState","JSON","parse","stringify","initiated","pathData","heatData","newMapState","require","refreshDashboard","hoverType","hoverID","searchObject","ageMap","expires","schoolDays","persistConfig","storage","CookieStorage","Cookies","expiration","default","persistedMethods","persistReducer","methods","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistStore","mapsPersistConfig","mapsMethods","mapsUpdater","mapsExposedMethods","searchKey","requiredKey","theObject","date","year","getFullYear","toString","day","getDate","minute","getMinutes"],"mappings":"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","file":"static/js/main.9b2bb799.chunk.js","sourcesContent":["import React from \"react\";\nimport store from \"../Store\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        let index = 0\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n                style={this.props.style}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport class ThemeSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState()\n        }\n    }\n    themeNames = ['深色', '浅色']\n    enumOptions() {\n        let optionsController = []\n        let index = 0\n        this.themeNames.forEach(\n            function (perOption) {\n                const {theme} = store.getState()\n                const themeOptions = ['dark', 'light']\n                let acClass = \"SwitchTick\"\n                if (theme === themeOptions[index]) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => {\n                            store.dispatch({\n                                type: 'switchTheme'\n                            })\n                        }}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n    dispatchTheme(value) {\n        store.dispatch({\n            type: 'switchTheme',\n            theme: value\n        })\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <div\n                    id={'controller-theme-switch'}\n                    className={\"SwitchBase\"}\n                    style={{position: 'absolute'}}\n                >\n                    {this.enumOptions()}\n                </div>\n                <div style={{height: 'calc(11pt + 30px)'}}/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport './style.css';\nimport {\n    PolarAngleAxis, XAxis, YAxis,\n    AreaChart, Area,\n    RadialBarChart, RadialBar,\n    LineChart, Line,\n    PieChart, Pie,\n    BarChart, Bar,\n    Legend, Tooltip,\n    Cell, CartesianGrid,\n    LabelList\n} from \"recharts\";\nimport '../Controllers/Switch';\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\nexport const defaultRoundCorner = 20;\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\nexport function makeAvailable(thing) {\n    if (thing !== undefined) {return thing}\n    return (<React.Fragment/>)\n}\nfunction fixDictionaryKeys(data, theKeys, zoom) {\n    let emptyData = [{}, {}, {}, {}]\n    const zoomSet = zoom === undefined ? 1 : zoom\n    const theKeysSet = theKeys === undefined ? ['name', 'value'] : theKeys\n    try {\n        data.map(function (value, index) {\n            emptyData[index] = {'name': value[theKeysSet[0]], 'value': value[theKeysSet[1]] * zoomSet}\n            return emptyData\n        }, emptyData, theKeysSet, zoomSet)\n    }\n    catch (e) {}\n    return emptyData\n}\nfunction makeDictionaryPairs(data, theKeys) {\n    let newDictionary = {}\n    try {\n        data.map(function (value) {\n            const key = value[theKeys[0]]\n            newDictionary[key] = value[theKeys[1]]\n            return true\n        }, theKeys)\n    }\n    catch (e) {}\n    return newDictionary\n}\nfunction linesConstructor(dataArray, tintArray, state, tooltip) {\n    const lines = dataArray.lines\n    const tooltipElement = tooltip ? [<Tooltip />] : []\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{strokeWidth: 3}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={2}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend/>\n            {tooltipElement}\n            {drawn}\n        </LineChart>\n    )\n}\nfunction barConstructor(dataArray, tintArray, state, label) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    const wrapperStyle = {position: 'absolute', bottom: 0, left: '50%', transform: 'translateX(-50%)'}\n    const fixedHeight = label ? state.height - 10 : state.height\n    const barContent = keys.map(function (key, index) {\n        let labelSet = []\n        if (label) {\n            labelSet = [<LabelList dataKey={key} position=\"top\" style={{fill: 'var(--themeColor)'}}/>]\n        }\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n                isAnimationActive={false}\n            >\n                {labelSet}\n            </Bar>\n        )\n    }, label)\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={fixedHeight}\n            style={wrapperStyle}\n        >\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\nfunction colouredPieConstructor(data, tint) {\n    try {\n        return data.map((entry, index) => <Cell fill={tint[index % tint.length]}/>)\n    }\n    catch (e) {}\n\n}\n\nexport class Dashboard extends React.Component {\n    render() {\n        const data = fixDictionaryKeys(this.props.data, this.props.keys, this.props.zoom)\n        const size = this.props.size * 1.25\n        const innerRadius = size / 3.75\n        const spacing = 0\n        const tint = this.props.tint === undefined ? [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"] : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner}\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(0, 1)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(1, 2)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(2, 3)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(3, 4)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    greatLegend(value) {\n        return (<span>{value}</span>)\n    }\n\n    render() {\n        const tint = this.props.tint === undefined ? \"#137A7F\" : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner, align: \"center\"}\n        const size = this.props.size\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[this.props.data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {borderRadius: defaultRoundCorner}\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={this.state.data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={2} dot={{r: 3}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={2} dot={{r: 3}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: defaultRoundCorner\n        }\n        const tint = this.props.tint === undefined ? [\"#EA0\", \"#08A\"] : this.props.tint\n        let nameLabel = makeAvailable(this.props.children)\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(this.props.data, tint, port, this.props.tooltip)}\n                <label className={'widgetLabel'}>\n                    {nameLabel}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    render() {\n        const dataToConstruct = this.props.keys === undefined ? this.props.data : makeDictionaryPairs(this.props.data, this.props.keys)\n        const tint = setTintArray(this.props.tint)\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"borderRadius\": defaultRoundCorner\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([dataToConstruct], tint, this.props.port, this.props.label)}\n                <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n            </div>\n        )\n    }\n}\n\nexport class AreaChartTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                \"name\": \"Page A\",\n                \"uv\": 4000,\n                \"pv\": 2400,\n                \"amt\": 2400\n            },\n            {\n                \"name\": \"Page B\",\n                \"uv\": 3000,\n                \"pv\": 1398,\n                \"amt\": 2210\n            },\n            {\n                \"name\": \"Page C\",\n                \"uv\": 2000,\n                \"pv\": 9800,\n                \"amt\": 2290\n            },\n            {\n                \"name\": \"Page D\",\n                \"uv\": 2780,\n                \"pv\": 3908,\n                \"amt\": 2000\n            },\n            {\n                \"name\": \"Page E\",\n                \"uv\": 1890,\n                \"pv\": 4800,\n                \"amt\": 2181\n            },\n            {\n                \"name\": \"Page F\",\n                \"uv\": 2390,\n                \"pv\": 3800,\n                \"amt\": 2500\n            },\n            {\n                \"name\": \"Page G\",\n                \"uv\": 3490,\n                \"pv\": 4300,\n                \"amt\": 2100\n            }\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: defaultRoundCorner\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <AreaChart\n                    width={port.width}\n                    height={port.height}\n                    data={this.state.data}\n                    style={transformToCentre}\n                >\n                    <defs>\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                    <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                </AreaChart>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class GreatLegends extends React.Component {\n    getFromData(data, index, key) {\n        try {return data[index][key]}\n        catch (error) {}\n        return undefined\n    }\n    makeEmpty(inside) {\n        return (inside === null || inside === undefined) ? '--' : inside\n    }\n    render() {\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": defaultRoundCorner\n        }\n        if (this.props.type === 'array')\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <div className={'GLContainer'}>\n                    <div className={'GLName'}>\n                        {this.getFromData(this.props.data, this.props.index, this.props.keys[0])}\n                    </div>\n                    <div className={'GLValue'}>\n                        {this.makeEmpty(this.getFromData(this.props.data, this.props.index, this.props.keys[1]))}\n                    </div>\n                </div>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n        if (this.props.type === 'straight') {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div className={'GLContainer'}>\n                        <div className=\"GLName\">\n                            {this.props.name}\n                        </div>\n                        <div className=\"GLValue\">\n                            {this.makeEmpty(this.props.value)}\n                        </div>\n                    </div>\n                    <label className={'widgetLabel'}>\n                        {makeAvailable(this.props.children)}\n                    </label>\n                </div>\n            )\n        }\n        return (<React.Fragment/>)\n    }\n}\n\nexport class SimplePieCharts extends React.Component {\n    isItZero(data) {\n        let result = false\n        try {\n            data.map(function (data) {\n                if (data.value > 0) {\n                    result = true\n                    return true\n                }\n                return true\n            })\n            return result\n        }\n        catch (e) {}\n        return result\n    }\n\n    render() {\n        const frame = {\n            width: \"100%\",\n            height: \"100%\",\n            borderRadius: defaultRoundCorner,\n        }\n        const duetFrame = {\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            borderRadius: defaultRoundCorner,\n            display: 'flex',\n            flexDirection: 'row'\n        }\n        const RADIAN = Math.PI / 180;\n        const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\n            const radius = innerRadius + (outerRadius - innerRadius) * 0.6;\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n            if (percent < .01) {\n                return <React.Fragment />\n            }\n            return (\n                <text x={x} y={y} fill=\"#777\" textAnchor={'middle'} dominantBaseline=\"central\" style={{mixBlendMode: 'difference'}}>\n                    {`${(percent * 100).toFixed(0)}%`}\n                </text>\n            )\n        }\n        const data = this.props.data\n        const data0 = this.props.data0\n        if (this.isItZero(data) === false) {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div style={transformToCentre}>当前情况无客流</div>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n        if (this.props.duet === true) {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div style={duetFrame}>\n                        <PieChart\n                            width={this.props.size}\n                            height={this.props.size}\n                        >\n                            <Pie\n                                data={data}\n                                nameKey={'key'}\n                                dataKey={'value'}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                            >\n                                {colouredPieConstructor(data, this.props.tint[0])}\n                            </Pie>\n                                <Legend />\n                        </PieChart>\n                        <PieChart\n                            width={this.props.size}\n                            height={this.props.size}\n                        >\n                            <Pie\n                                data={data0}\n                                nameKey={'key'}\n                                dataKey={'value'}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                            >\n                                {colouredPieConstructor(data, this.props.tint[1])}\n                            </Pie>\n                            <Legend />\n                        </PieChart>\n                    </div>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <PieChart\n                        width={this.props.size + 50}\n                        height={this.props.size + 50}\n                        style={transformToCentre}\n                    >\n                        <Pie\n                            data={data}\n                            nameKey={'key'}\n                            dataKey={'value'}\n                            labelLine={false}\n                            label={renderCustomizedLabel}\n                            isAnimationActive={false}\n                        >\n                            {colouredPieConstructor(data, this.props.tint)}\n                        </Pie>\n                        <Legend layout={'vertical'} align={'right'} verticalAlign={'middle'}/>\n                    </PieChart>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n    }\n}","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: 'var(--themeButtonBackground)',\n    color: 'var(--themeColor)',\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n            type: (this.props.type !== undefined) ? this.props.type : \"\",\n            disabled: (this.props.disabled === true),\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick} type={this.state.type} disabled={this.state.disabled}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Suspense } from \"react\";\nimport store, { mapsStore } from \"../Store\";\nimport {\n    Button as MaterialButton,\n    Card, CardActions, CardContent, Typography,\n    FormControl, FormControlLabel, FormGroup, FormLabel,\n    Fade, Modal,\n    Checkbox, Slider, Select, MenuItem, TextField, InputLabel,\n} from \"@material-ui/core\";\nimport MapSwitch from \"../Controllers/Switch\";\nimport { Button } from \"../Controllers/Button\";\nimport { defaultRoundCorner } from \"./widgets\";\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst MapFuture = React.lazy(() => import('./Map'));\nconst PassengerMaps = React.lazy(() => import('./PassengerMaps'))\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction predictionRequest(userArguments) {\n    try {\n        axios.post('/python/predict', {\n            station: userArguments.boom.station,\n            flow: userArguments.boom.flow,\n            dayprop: userArguments.holiday,\n            weather: userArguments.weather.condition,\n            temperatures: [userArguments.weather.temperature.low, userArguments.weather.temperature.high],\n        })\n            .then(response => {console.log(response)})\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            datePicker: false,\n            argumentPicker: false,\n            activated: \"无\",\n            selectedTime: new Date(store.getState().timeline),\n            flowStats: true,\n            storeState: store.getState(),\n            mapsState: mapsStore.getState(),\n            userArguments: {\n                holiday: undefined,\n                weather: {\n                    enabled: false,\n                    condition: '阴',\n                    temperature: {\n                        low: undefined,\n                        high: undefined\n                    }\n                },\n                boom: {\n                    enabled: false,\n                    station: undefined,\n                    flow: undefined,\n                    type: 0,\n                    failure: false,\n                }\n            }\n        }\n        store.subscribe(() => this.setState({storeState: store.getState()}))\n        mapsStore.subscribe(() => this.setState({mapsState: mapsStore.getState()}))\n    }\n\n    handleOpen(modal) {\n        if (modal === 'datePicker') {this.setState({datePicker: !this.state.datePicker})}\n        if (modal === 'argumentPicker') {this.setState({argumentPicker: !this.state.argumentPicker})}\n    }\n    handleTime(e) {\n        this.setState({selectedTime: e})\n    }\n    handleChange(e, argument) {\n        let newArguments = this.state.userArguments\n        if (argument === 'holiday') {\n            newArguments.holiday = e.target.checked\n        }\n        if (argument === 'boomTick') {\n            newArguments.boom.enabled = e.target.checked\n        }\n        if (argument === 'boomType') {\n            newArguments.boom.type = e.target.value\n        }\n        if (argument === 'boom') {\n            newArguments.boom.station = this.state.stationSpectating\n            newArguments.boom.flow = e\n        }\n        if (argument === 'weatherTick') {\n            newArguments.weather.enabled = e.target.checked\n        }\n        if (argument === 'weatherTemperatureLow') {\n            newArguments.weather.temperature.low = e.target.value\n        }\n        if (argument === 'weatherTemperatureHigh') {\n            newArguments.weather.temperature.high = e.target.value\n        }\n        if (argument === 'weather') {\n            newArguments.weather.condition = e.target.value\n        }\n        if (argument === 'failure') {\n            newArguments.boom.failure = e.target.checked\n        }\n        this.setState({userArguments: newArguments})\n    }\n    handlePredictionUpdate(type) {\n        predictionRequest(this.state.userArguments, type)\n        alert('预测请求已经提交'+this.state.userArguments.boom.flow)\n        this.handleOpen('argumentPicker')\n    }\n    handleTimeUpdate() {\n        store.dispatch({\n            type: 'timeUpdate',\n            time: this.state.selectedTime\n        })\n        mapsStore.dispatch({\n            type: 'refresh'\n        })\n        this.handleOpen('datePicker')\n    }\n    getTripForm() {\n        if (this.state.tripStart === undefined && this.state.tripFinish === undefined) {\n            return <React.Fragment />\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <tr>\n                        <td>进站</td>\n                        <td>{this.state.tripStart}</td>\n                    </tr>\n                    <tr>\n                        <td>出站</td>\n                        <td>{this.state.tripFinish}</td>\n                    </tr>\n                </React.Fragment>\n            )\n        }\n    }\n    startTrip(station) {\n        this.setState({tripStart: station})\n    }\n    finishTrip(station) {\n        this.setState({tripFinish: station})\n    }\n    tripCalculate() {\n        if (this.state.tripStart === this.state.tripFinish) {\n            alert('起点和终点好像在同一站，不计算时间了。')\n            return\n        }\n        const data = {\n            stationin: this.state.tripStart,\n            stationout: this.state.tripFinish,\n            month: this.state.selectedTime.getMonth() + 1,\n            hour: this.state.selectedTime.getHours(),\n            dayprop: (this.state.userArguments.holiday === true) ? 1 : 0\n        }\n        axios.post('/python/dettime', data)\n            .then(response => alert('旅程时间大约为' + response.data.dettime + '分钟'))\n            .catch(error => console.error(error))\n    }\n    getBeginTripButton(start, finish) {\n        if (start !== undefined && finish !== undefined && start !== finish) {\n            return <Button onClick={() => this.tripCalculate()}>开始预测行程</Button>\n        }\n        else {\n            return <React.Fragment />\n        }\n    }\n\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>线路</td>\n                    <td>{this.state.mapsState.lineSpectating}</td>\n                </tr>\n                <tr>\n                    <td>断面客流</td>\n                    <td>{this.state.mapsState.stationSpectating.flow}</td>\n                </tr>\n                <tr>\n                    <td>高峰时段</td>\n                    <td>9:00</td>\n                </tr>\n                {this.getTripForm()}\n            </table>\n        )\n    }\n    stationArguments() {\n        if (this.state.stationSpectating === 'No') {\n            return (\n                <FormLabel component={'legend'}>没有选择站点</FormLabel>\n            )\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <FormLabel component={'legend'}>{this.state.mapsState.stationSpectating.station}</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.userArguments.holiday}\n                                    onChange={(event) => this.handleChange(event, 'failure')}\n                                />\n                            }\n                            label={'故障'}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.userArguments.boom.enabled}\n                                        onChange={(event) => this.handleChange(event, 'boomTick')}\n                                    />\n                                }\n                                label={'突发客流'}\n                            />\n                            <FormGroup row>\n                                <Select\n                                    labelId={'客流类型'}\n                                    id={'客流类型'}\n                                    value={this.state.userArguments.boom.type}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(event) => this.handleChange(event, 'boomType')}\n                                    style={{width: '100%'}}\n                                >\n                                    <MenuItem value={0}>进站</MenuItem>\n                                    <MenuItem value={1}>出站</MenuItem>\n                                    <MenuItem value={2}>进站加</MenuItem>\n                                    <MenuItem value={3}>出站加</MenuItem>\n                                </Select>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Slider\n                                    defaultValue={3000}\n                                    valueLabelDisplay=\"auto\"\n                                    step={10}\n                                    marks\n                                    min={10}\n                                    max={110}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(foo, event) => this.handleChange(event, 'boom')}\n                                />\n                            </FormGroup>\n                        </FormGroup>\n\n                    </FormGroup>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"Layer\"} style={{borderRadius: defaultRoundCorner}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={'MapTimestamp'}>\n                    <span>预览时间线</span>\n                    <span className={this.state.storeState.timeNoGo === true ? '' : 'noGo'}>{this.state.storeState.timeNoGo === true ? '数据可用' : '该时间无数据'}</span>\n                    <br />\n                    <span className={'TimestampDate'}>\n                        {moment(this.state.storeState.timeline).format('MM-DD-YYYY HH:MM')}\n                    </span>\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch\n                        switchOptions={[\"无\", \"热力图\"]}\n                        setState={(e) => (this.setState(e))}\n                        state={this.state}\n                    />\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}数据\n                    </Button>\n                    <div style={{fontSize: '11pt', marginTop: '.5em'}}>更改预览时间</div>\n                    <div style={{display: \"flex\", flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <Button onClick={() => this.handleOpen('datePicker')}>\n                            选择\n                        </Button>\n                        <div style={{width: '.5em'}}/>\n                        <Button onClick={() => store.dispatch({type: 'timeUpdate', live: true})}>\n                            实时\n                        </Button>\n                    </div>\n                    <div style={{fontSize: '11pt', marginTop: '.5em'}}>行程时间预测</div>\n                    <div style={{display: \"flex\", flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <Button onClick={() => this.startTrip(this.state.mapsState.stationSpectating.station)}>起点</Button>\n                        <Button onClick={() => this.finishTrip(this.state.mapsState.stationSpectating.station)}>终点</Button>\n                    </div>\n                    {this.getBeginTripButton(this.state.tripStart, this.state.tripFinish)}\n                    <div style={{fontSize: '11pt', marginTop: '.5em'}}>更改预测参数</div>\n                    <Button onClick={() => this.handleOpen('argumentPicker')}>模拟数据变更</Button>\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.selectedTime}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"primary\"}\n                                        onClick={() => this.handleTimeUpdate(this.state.storeState.time)}\n                                    >\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"default\"}\n                                        onClick={() => this.handleOpen('datePicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.argumentPicker}>\n                        <Fade in={this.state.argumentPicker}>\n                            <Card style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        输入参数\n                                    </Typography>\n                                    <div className={'DualPanel'}>\n                                        <FormControl component={'fieldset'}>\n                                            <FormLabel component={'legend'}>该时间操作</FormLabel>\n                                            <FormGroup row>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.holiday}\n                                                            onChange={this.state}\n                                                        />\n                                                    }\n                                                    label={'放假'}\n                                                />\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weatherTick')}\n                                                        />\n                                                    }\n                                                    label={'变更天气'}\n                                                />\n                                                <FormGroup>\n                                                    <FormControl>\n                                                        <InputLabel id={'天气选择标签'}>\n                                                            天气类型\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"天气选择\"\n                                                            id=\"天气选择\"\n                                                            value={this.state.userArguments.weather.condition}\n                                                            disabled={!this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weather')}\n                                                        >\n                                                            <MenuItem value={'阴'}>阴</MenuItem>\n                                                            <MenuItem value={'晴'}>晴</MenuItem>\n                                                            <MenuItem value={'多云'}>多云</MenuItem>\n                                                            <MenuItem value={'小雨'}>小雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>中雨</MenuItem>\n                                                            <MenuItem value={'大雨'}>大雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>暴雨</MenuItem>\n                                                            <MenuItem value={'雷阵雨'}>雷阵雨</MenuItem>\n                                                        </Select>\n                                                    </FormControl>\n\n                                                    <TextField\n                                                        id={'最低温度输入'}\n                                                        label={'输入最低摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureLow')}\n                                                    />\n                                                    <TextField\n                                                        id={'最高温度输入'}\n                                                        label={'输入最高摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureHigh')}\n                                                    />\n                                                </FormGroup>\n                                            </FormGroup>\n                                        </FormControl>\n                                        <br />\n                                        <FormControl component={'fieldset'}>\n                                            {this.stationArguments()}\n                                        </FormControl>\n                                    </div>\n                                </CardContent>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"} onClick={() => this.handlePredictionUpdate('meow')}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('argumentPicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>地图正在加载……</div>}>\n                        <MapFuture\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                            mode={this.state.activated}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class PassengerMapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {activated: store.getState().passengerMode}\n        store.subscribe(() => {\n            this.setState({activated: store.getState().passengerMode})\n        })\n    }\n    handlePassengerModeChange(e) {\n        store.dispatch({\n            type: 'changePassengerMode',\n            mode: e.activated\n        })\n    }\n\n    render() {\n        return (\n            <div className={'Layer'} style={{borderRadius: defaultRoundCorner}}>\n                <div className=\"MapControllers\" style={{left: 5, right: 'inherit'}}>\n                    <MapSwitch\n                        switchOptions={[\"总客流\", \"出站\", \"进站\"]}\n                        setState={(e) => (this.handlePassengerModeChange(e))}\n                        state={this.state}\n                    />\n                </div>\n\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={'MLPlaceholder'}>乘客画像地图正在加载……</div>}>\n                        <PassengerMaps\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport { MapsBlock } from '../Widgets/MapsBlock';\nimport { mapsStore } from \"../Store\";\n\nconst body = document.body\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8),\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size, mapsState} = this.state\n        return (\n            <div className={\"OverviewGrid\"} key={'pages-index'}>\n                <div className={\"div1\"}>\n                    <Widgets.DashboardOne size={size} data={mapsState.highestFlow}>\n                        客流最高站点\n                    </Widgets.DashboardOne>\n                </div>\n                <div className={\"div2\"}>\n                    <Widgets.GreatLegends type={'straight'} name={'全网客流量指数'} value={mapsState.overallFlow}>\n                        重点客流量\n                    </Widgets.GreatLegends>\n                </div>\n                <div className={\"div3\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.highestDist4}\n                        zoom={0.1}\n                        tint={['#6099DB', '#DC73BC', '#7BDB6B', '#DBD455']}\n                    >\n                        客流高峰区域\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div4\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.lineFlow}\n                        keys={['linename', 'flow']}\n                        tint={['#6BDB9C', '#DBC760', '#5685DB', '#D9734C']}\n                    >\n                        客流高峰线路\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div5\"}>\n                    <MapsBlock\n                        port={{\"height\": size * 5, \"width\": size * 4}}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\nimport {mapsStore} from \"../Store\";\n\nconst body = document.body\n\nexport class LineHeat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            width: body.scrollWidth / 2.2,\n            height: body.scrollHeight / 10,\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {height, width, mapsState} = this.state\n        return(\n            <div className={\"LHGrid\"} key={'pages-line-heat'}>\n                <div className=\"div1\">\n                    <Widgets.SimpleBars\n                        port={{height: height, width: width * 2}}\n                        data={mapsState.lineFlow}\n                        keys={['linename', 'flow']}\n                        tint={['#09B8A3', '#23EB62', '#F0438F', '#EBBF23', '#A1C0F5', '#0977B8', '#B98AF5', '#F7DF34', '#F75A43', '#65A1C2']}\n                        label\n                    >\n                        当前全网线路客流\n                    </Widgets.SimpleBars>\n                </div>\n                <div className=\"div2\">\n                    <Widgets.SimpleTrends\n                        port={{height: height, width: width}}\n                        tooltip\n                        data={{\n                            xAxisMeasurements: 'meow',\n                            lines: [\n                                {\n                                    name: 'wow',\n                                    values: [1, 2, 3]\n                                },\n                                {\n                                    name: 'argh',\n                                    values: [23, 12, 12]\n                                }\n                            ]\n                        }}\n                    />\n                </div>\n                <div className=\"div3\"></div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n                <div className=\"div7\"></div>\n                <div className=\"div8\"></div>\n                <div className=\"div9\"></div>\n                <div className=\"div10\"></div>\n                <div className=\"div11\"></div>\n                <div className=\"div12\"></div>\n                <div className=\"div13\"></div>\n                <div className=\"div14\"></div>\n                <div className=\"div15\"></div>\n                <div className=\"div16\"></div>\n                <div className=\"div17\"></div>\n                <div className=\"div18\"></div>\n                <div className=\"div19\"></div>\n                <div className=\"div20\"></div>\n            </div>\n        )\n    }\n}\n\nexport class HeatTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize = () => {\n        this.setState({\n            size: body.scrollHeight / 5\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return(\n            <div className={\"THGrid\"} key={'pages-timeline-heat'}>\n                <div className=\"div1\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    >\n                        近日客流\n                    </Widgets.Trends>\n                </div>\n                <div className=\"div2\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div3\">\n                    <Widgets.AreaChartTrends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport {PassengerMapsBlock} from \"../Widgets/MapsBlock\";\nimport store, {mapsStore} from \"../Store\";\n\nconst body = document.body\nconst passengerArray=['16岁以下', '16~25', '25~40', '40~60', '60岁以上', '16岁以下', '16~25', '25~40', '40~60', '60岁以上', '16岁以下', '16~25', '25~40', '40~60', '60岁以上']\nconst tintArray=[['#09B8A3', '#23EB62', '#A1C0F5', '#0977B8', '#658EA4'], ['#F5E3D0', '#F5DE2F', '#F58CB2', '#7FDAFA', '#7A5DF9']]\n\nclass PassengerAnalytics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stationInward: mapsStore.getState().ageMapSpectating.inward,\n            stationOutward: mapsStore.getState().ageMapSpectating.outward,\n            activated: store.getState().passengerMode,\n        }\n        mapsStore.subscribe(() => {\n            this.setState({\n                stationInward: mapsStore.getState().ageMapSpectating.inward,\n                stationOutward: mapsStore.getState().ageMapSpectating.outward,\n            })\n            this.forceUpdate()\n        })\n        store.subscribe(() => {\n            this.setState({activated: store.getState().passengerMode})\n        })\n    }\n\n    calculateSize = () => {\n        this.setState({\n            height: body.scrollHeight / 6,\n            width: body.scrollWidth / 6,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 10)\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n        mapsStore.dispatch({type: 'refresh'})\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    arrayCoherence(keys, values, slice) {\n        let newArray = []\n        try {\n            values.map(function (value, index) {\n                if (slice === undefined) {\n                    let newDictionary = {\n                        key: keys[index],\n                        value: value\n                    }\n                    newArray.push(newDictionary)\n                }\n                else if (index >= slice[0] && index <= slice[1]) {\n                    let newDictionary = {\n                        key: keys[index],\n                        value: value\n                    }\n                    newArray.push(newDictionary)\n                }\n                return true\n            })\n        }\n        catch (e) {\n            newArray = [{key: '数据加载中', value: 100}]\n        }\n\n        return newArray\n    }\n    getSlice() {\n        if (this.state.activated === '进站') {\n            return [0, 4]\n        }\n        if (this.state.activated === '出站') {\n            return [5, 9]\n        }\n        if (this.state.activated === '总客流') {\n            return [10, 14]\n        }\n    }\n    getSum(type, data0, data1) {\n        try {\n            if (type === 'inOut') {\n                let inward = 0\n                let outward = 0\n                data0.slice(10, 14).map(function (value) {\n                    inward += value\n                    return true\n                })\n                data1.slice(10, 14).map(function (value) {\n                    outward += value\n                    return true\n                })\n                return [\n                    {key: '进站', value: inward},\n                    {key: '出站', value: outward}\n                ]\n            }\n            if (type === 'inOutBar') {\n                let inward = 0\n                let outward = 0\n                data0.slice(10, 14).map(function (value) {\n                    inward += value\n                    return true\n                })\n                data1.slice(10, 14).map(function (value) {\n                    outward += value\n                    return true\n                })\n                //eslint-ignore-next-line\n                return {'进站': inward, '出站': outward}\n            }\n            if (type === 'gender') {\n                let girls = 0\n                let boys = 0\n                data0.slice(0, 4).map(function (value) {\n                    girls += value\n                    return true\n                })\n                data1.slice(0, 4).map(function (value) {\n                    girls += value\n                    return true\n                })\n                data0.slice(5, 10).map(function (value) {\n                    boys += value\n                    return true\n                })\n                data1.slice(5, 10).map(function (value) {\n                    boys += value\n                    return true\n                })\n                return [\n                    {key: '女性', value: girls},\n                    {key: '男性', value: boys}\n                ]\n            }\n        }\n        catch (e) {}\n        return ({key: '加载中', value: 0})\n    }\n\n    render() {\n        const {height, width, size} = this.state\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                        <PassengerMapsBlock\n                            port={{height: height * 4, width: width * 2}}\n                        />\n                    </div>\n                    <div className=\"div2\">\n                        <Widgets.SimplePieCharts\n                            size={size * 2}\n                            duet\n                            tint={tintArray}\n                            data={this.arrayCoherence(passengerArray, this.state.stationInward, this.getSlice())}\n                            data0={this.getSum('inOut', this.state.stationInward, this.state.stationOutward)}\n                        >\n                            所选站点乘客结构\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div3\">\n                        <Widgets.SimplePieCharts\n                            size={size * 2}\n                            tint={tintArray[0]}\n                            data={this.arrayCoherence(passengerArray, [88, 99, 77, 66, 55, 44, 33, 22, 11, 44, 55, 66, 77, 88, 99, 100], [10, 14])}\n                        >\n                            全网乘客结构\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div4\">\n                        <Widgets.SimplePieCharts\n                            size={size}\n                            data={this.getSum('gender', this.state.stationInward, this.state.stationOutward)}\n                            tint={tintArray[1]}\n                        >\n                            当前站点客流性别比例\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div5\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": width}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                            data={this.getSum('inOutBar', this.state.stationInward, this.state.stationOutward)}\n                            label\n                        >\n                            当前站点进出站客流\n                        </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div6\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                            data={{u:90, p:5}}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div7\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                            data={{u:90, p:5}}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div8\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                            data={{u:90, p:5}}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from \"react\";\nimport \"./style.css\"\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (this.props.type !== undefined) ? this.props.type : \"text\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={'InputFunction'}>\n                <label>\n                    {this.props.children}\n                </label>\n                <input className={'coilsInput'} type={this.state.type} onChange={(event => this.props.handler(event))}/>\n            </div>\n        )\n    }\n}\n\nexport default Input","import React from \"react\";\nimport { Input, Button } from '../Controllers';\nimport { FormGroup, FormLabel, Slider, Button as MaterialButton } from '@material-ui/core'\nimport axios from \"axios\";\nimport './style.css';\nimport store, { setExpiration, clearStorage } from \"../Store\";\nimport { ThemeSwitch } from \"../Controllers/Switch\";\n\nfunction loginRequest(username, password) {\n    try {\n        axios.post('/api/log', {\n            'username': username,\n            'password': password\n        }).then(function (response) {\n            console.log(response.data)\n            alert(response.data.msg)\n            if (response.data.code === 200) {\n                store.dispatch({\n                    type: 'login',\n                    loginState: true,\n                    session: response.data\n                })\n            }\n        })\n    }\n    catch (error) {\n        alert('网络连接出现了一些问题')\n        console.error(error);\n    }\n}\n\nclass CertForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: 1,\n        }\n    }\n    CertChange(type) {\n        let feedbackInfo\n        if (type === 'logout') {\n            feedbackInfo = '注销凭据完成'\n            const action = {\n                type: 'certMan',\n                logout: true\n            }\n            store.dispatch(action)\n        }\n        if (type === 'cache') {\n            feedbackInfo = '保存凭据' + this.state.duration +'天'\n            setExpiration(this.state.duration)\n        }\n        alert(feedbackInfo)\n    }\n    handleSlider = (event, newValue) => {\n        this.setState({duration: newValue})\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <ThemeSwitch/>\n                <div className={'Description'}>\n                    可以按 [K] 快速切换主题\n                </div>\n                <form\n                    style={{marginTop: '2em'}}\n                    onSubmit={() => this.CertChange('cache', this.state.duration)}\n                >\n                    <FormGroup>\n                        <FormLabel style={{color: 'var(--ThemeColor)'}} component={'legend'}>保存凭据时长（天）</FormLabel>\n                        <div style={{margin: '0 auto', width: 'calc(100% - 20px)'}}>\n                            <Slider\n                                defaultValue={1}\n                                valueLabelDisplay=\"auto\"\n                                step={5}\n                                marks\n                                min={1}\n                                max={31}\n                                onChange={this.handleSlider}\n                            />\n                        </div>\n                    </FormGroup>\n                    <div style={{display: \"flex\", flexDirection: 'row'}}>\n                        <Button type={'submit'}>\n                            保存凭据\n                        </Button>\n                        <div style={{width: '.5em'}}/>\n                        <Button onClick={() => this.CertChange('logout')}>\n                            注销\n                        </Button>\n                    </div>\n                    <br />\n                    <MaterialButton\n                        size={'small'}\n                        style={{color: '#F66'}}\n                        onClick={() => clearStorage()}\n                    >\n                        清除本地数据并注销\n                    </MaterialButton>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState(),\n            username: '',\n            password: ''\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n    handleLogin(event) {\n        event.preventDefault()\n        loginRequest(this.state.username, this.state.password)\n    }\n    handleForm(event, type) {\n        if (type === 'username') {\n            this.setState({username: event.target.value})\n        }\n        if (type === 'password') {\n            this.setState({password: event.target.value})\n        }\n    }\n\n    render() {\n        let FormSheet, hello\n        const LoginForm = [\n            <form onSubmit={(e) => this.handleLogin(e)}>\n                <div className={\"AuthForm\"}>\n                    <div>\n                        <Input handler={(e) => {this.handleForm(e, 'username')}}>\n                            用户名称\n                        </Input>\n                        <Input type={\"password\"} handler={(e) => {this.handleForm(e, 'password')}}>\n                            密码\n                        </Input>\n                    </div>\n                    <div className={\"Button\"}>\n                        <Button type={\"submit\"}>\n                            好\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        ]\n\n        if (this.state.store.loginState) {\n            FormSheet = [<CertForm/>]\n            hello = \"认证管理\"\n        }\n        else {\n            FormSheet = LoginForm\n            hello = \"认证\"\n        }\n\n        return (\n            <React.Fragment>\n                <div id={'Amaze'}/>\n                <div id={'ActualCard'}>\n                    <h1>\n                        {hello}\n                    </h1>\n                </div>\n                <div id={'Maze'}/>\n                    <section className={\"AuthCard\"}>\n                        {FormSheet}\n                    </section>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport Overview from \"./Overview\";\nimport { LineHeat, HeatTimeline } from \"./LineHeat\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport Login from \"./Authenticate\";\nimport './index.css';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, {exposedMethods, mapsStore} from \"./Store\";\n\nconst root = document.documentElement\n\nfunction setTheme() {\n    if (store.getState().theme === 'light') {\n        root.style.setProperty('--themeTable', '#E3E3E3')\n        root.style.setProperty('--themeBorder', 'none')\n        root.style.setProperty('--themeColor', '#443')\n        root.style.setProperty('--themeHover', '#220')\n        root.style.setProperty('--themeActive', '#220')\n        root.style.setProperty('--themeLayer', 'rgba(250, 250, 250, 0.8)')\n        root.style.setProperty('--themeFilter', 'screen')\n        root.style.setProperty('--themeDarkFilter', 'brightness(1.17)')\n        root.style.setProperty('--themePure0', 'rgba(255, 255, 255, 1)')\n        root.style.setProperty('--themePure1', 'rgba(255, 255, 255, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(80, 80, 80, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#FFF')\n        root.style.setProperty('--controlBlur', '#553')\n        root.style.setProperty('--dockBorderSize', '1px')\n        root.style.setProperty('--actualFilter', 'rgba(255, 255, 255, .8)')\n    }\n    if (store.getState().theme === 'dark') {\n        root.style.setProperty('--themeTable', '#171717')\n        root.style.setProperty('--themeBorder', '0 0 1.5px #EEE')\n        root.style.setProperty('--themeColor', '#EEE')\n        root.style.setProperty('--themeHover', '#AAB')\n        root.style.setProperty('--themeActive', '#FFF')\n        root.style.setProperty('--themeLayer', 'rgba(53, 53, 53, 0.8)')\n        root.style.setProperty('--themeFilter', 'multiply')\n        root.style.setProperty('--themeDarkFilter', 'brightness(.25)')\n        root.style.setProperty('--themePure0', 'rgba(64, 64, 64, 1)')\n        root.style.setProperty('--themePure1', 'rgba(0, 0, 0, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(255, 255, 255, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#535353')\n        root.style.setProperty('--controlBlur', '#BBC')\n        root.style.setProperty('--dockBorderSize', '2px')\n        root.style.setProperty('--actualFilter', 'rgba(0, 0, 25, .15)')\n\n    }\n}\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {storeState: store.getState()}\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){this.setState({storeState: store.getState()})}\n    componentDidMount() {\n        mapsStore.dispatch({type: 'refresh'})\n    }\n\n    render() {\n        setTheme()\n        let pagesList = []\n        if (this.state.storeState.loginState === true) {\n            pagesList.push(\n                <Switch>\n                    <Route exact path={\"./\"}>\n                        <Redirect to={\"Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"} component={AnimationApp}/>\n                </Switch>\n            )\n        }\n        else {\n            pagesList.push(\n                <Switch>\n                    <Route path={\"*\"}>\n                        <Login />\n                    </Route>\n                </Switch>\n            )\n        }\n        return (\n            <PersistGate store={store} persistor={exposedMethods}>\n                <Router>\n                    {pagesList}\n                </Router>\n            </PersistGate>\n        )\n    }\n}\n\nclass AnimationApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            handling: 0,\n            redirect: undefined\n        }\n    }\n    wary(e) {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        this.setState({redirect: e})\n        this.setState({redirect: undefined})\n    }\n    themeSwitcherWary() {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        store.dispatch({type: 'switchTheme'})\n    }\n\n    componentDidMount() {\n        let done = () => {\n            this.setState({handling: 0})\n        }\n        store.subscribe(() => {\n            setTimeout(done, 500, done)\n        })\n        this.props.history.listen(location => {\n            mapsStore.dispatch({type: 'refresh'})\n            if (this.props.location.pathname !== location.pathname) {\n                setTimeout(done, 500, done)\n            }\n        })\n    }\n    render() {\n        const redirect = {\n            state: this.state.redirect,\n            handling: this.state.handling,\n            set: (e) => this.wary(e),\n            done: () => this.done()\n        }\n        const themeSwitchKey = () => this.themeSwitcherWary()\n\n        function handleShortcutKey(key) {\n            const destination = ['Overview', 'LineHeat', 'HeatTimeline', 'PassengerAnalytics', 'Authenticate']\n            redirect.set(<Redirect to={destination[key - 1]}/>)\n        }\n        // keyboard shortcuts\n        window.addEventListener(\"keyup\", function (e) {\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (e.key !== undefined) {\n                if (e.key === '1') {handleShortcutKey(1)}\n                if (e.key === '2') {handleShortcutKey(2)}\n                if (e.key === '3') {handleShortcutKey(3)}\n                if (e.key === '4') {handleShortcutKey(4)}\n                if (e.key === 'L' || e.key === 'l') {handleShortcutKey(5)}\n                if (e.key === 'K' || e.key === 'k') {themeSwitchKey()}\n                return;\n            }\n            else if (e.code !== undefined) {\n                if (e.code === 'Digit1') {handleShortcutKey(1)}\n                if (e.code === 'Digit2') {handleShortcutKey(2)}\n                if (e.code === 'Digit3') {handleShortcutKey(3)}\n                if (e.code === 'Digit4') {handleShortcutKey(4)}\n                if (e.code === 'KeyL') {handleShortcutKey(5)}\n                if (e.code === 'KeyK') {themeSwitchKey()}\n                return;\n            }\n        })\n\n        return (\n            <React.Fragment>\n                {this.state.redirect}\n                <div className=\"Dock\">\n                    <NavLink key={\"Overview\"} to={\"Overview\"} activeClassName={\"active\"} exact>\n                        <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                    </NavLink>\n                    <NavLink key={\"LineHeat\"} to={\"LineHeat\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>线路分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"HeatTimeline\"} to={\"HeatTimeline\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>时段分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"PassengerAnalytics\"} to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>用户画像<span>3</span></button>\n                    </NavLink>\n                    <NavLink key={\"Authenticate\"} to={\"Authenticate\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>认证与设置<span>L</span></button>\n                    </NavLink>\n                </div>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={this.props.location}\n                        classNames={\"fade\"}\n                        timeout={250}\n                    >\n                        <Switch>\n                            <Route path={`*/Overview`} component={Overview}/>\n                            <Route path={`*/LineHeat`} component={LineHeat}/>\n                            <Route path={`*/HeatTimeline`} component={HeatTimeline}/>\n                            <Route path={`*/PassengerAnalytics`} component={PassengerAnalytics}/>\n                            <Route path={`*/Authenticate`} component={Login}/>\n                            <Route path={`*`}>\n                                <Redirect to={\"Overview\"}/>\n                            </Route>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const nowPlacebo = 'May 29, 2020 22:30:00'\nconst defaultState = {\n    active: \"dashboard\",\n    theme: 'light',\n    loginState: false,\n    sessionData: '',\n    now: new Date(nowPlacebo),\n    timeline: new Date(nowPlacebo),\n    passengerMode: '总客流',\n    timePeriod: '实时',\n    timeNoGo: '数据加载中',\n    flowSpectating: -1,\n}\nconst Store = (state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'login' && action.loginState) {\n        newState.loginState = true\n        newState.sessionData = action.session\n        return newState\n    }\n    if (action.type === 'certMan') {\n        if (action.logout) {\n            return defaultState\n        }\n    }\n    if (action.type === 'switchTheme') {\n        newState.theme = 'light'\n        if (state.theme === 'light') {\n            newState.theme = 'dark'\n        }\n        return newState\n    }\n    if (action.type === 'changePassengerMode') {\n        newState.passengerMode = action.mode\n        return newState\n    }\n    if (action.type === 'timeUpdate') {\n        if (action.live === true) {\n            newState.timePeriod = '实时'\n            newState.timeline = nowPlacebo\n        }\n        else {\n            if (action.time > state.now) {\n                newState.timePeriod = '预测'\n            }\n            else if (action.time < state.now) {\n                newState.timePeriod = '历史'\n            }\n            newState.timeline = action.time\n        }\n        return newState\n    }\n    if (action.type === 'noGo') {\n        newState.timeNoGo = action.value === '成功'\n        return newState\n    }\n    if (action.type === 'clear') {\n        return defaultState\n    }\n    return state\n}\nexport default Store","import store, {refreshDashboard, searchObject} from \"./index\";\n\nconst defaultValue = {\n    initiated: 0,\n    pathData: {},\n    heatData: {},\n    dashboardData: {},\n    lineSpectating: 'No',\n    stationSpectating: {station: '没有选中站点', flow: 0},\n    ageMapSpectating: {station: '没有选中站点', inward: undefined, outward: undefined}\n}\n\nconst Store = (state = defaultValue, action) => {\n    let newMapState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'refresh') {\n        if (!newMapState.initiated) {\n            newMapState.dashboardData = require('../stationaryPlaceholder/dashboard.json')\n            newMapState.pathData = require('../stationaryPlaceholder/paths.json')\n        }\n        refreshDashboard(store.getState().timeline)\n        return newMapState\n    }\n    if (action.type === 'loadDashboard') {\n        newMapState.dashboardData = action.data\n        return newMapState\n    }\n    if (action.type === 'hoverUpdate') {\n        newMapState.lineSpectating = action.line\n        if (action.hoverType === 'station' || action.hoverType === 'path') {\n            newMapState.stationSpectating[action.hoverType] = action.hoverID\n            newMapState.stationSpectating.flow = action.flow\n        }\n        if (action.hoverType === 'age') {\n            newMapState.ageMapSpectating.station = action.hoverID\n            newMapState.ageMapSpectating.inward = searchObject(newMapState.dashboardData.ageMap, 'station', action.hoverID, 'in')\n            newMapState.ageMapSpectating.outward = searchObject(newMapState.dashboardData.ageMap, 'station', action.hoverID, 'out')\n        }\n        console.log(newMapState)\n        return newMapState\n    }\n    if (action.type === 'clear') {\n        return defaultValue\n    }\n    return state\n}\nexport default Store","import { createStore } from \"redux\";\nimport methods from './methods';\nimport mapsUpdater from './mapsUpdater';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { CookieStorage } from 'redux-persist-cookie-storage';\nimport storage from 'redux-persist/lib/storage';\nimport Cookies from 'cookies-js';\nimport axios from \"axios\";\n\nlet expires = 22 * 86400\n\nexport function setExpiration(schoolDays)\n{\n    if (schoolDays === undefined) {\n        schoolDays = 22\n    }\n    expires = schoolDays * 86400;\n}\n\n//组件数据和会话\nconst persistConfig = {\n    key: 'root',\n    storage: new CookieStorage(Cookies, {expiration:\n        {default: expires}\n    })\n}\nconst persistedMethods = persistReducer(persistConfig, methods)\nlet store = createStore(persistedMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport let exposedMethods = persistStore(store)\nexport default store\n\n//地图存储\nconst mapsPersistConfig = {\n    key: 'maps',\n    storage: storage\n}\nconst mapsMethods = persistReducer(mapsPersistConfig, mapsUpdater)\nexport let mapsStore = createStore(mapsMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport let mapsExposedMethods = persistStore(mapsStore)\n\nexport function searchObject(data, searchKey, value, requiredKey) {\n    let result\n    try {\n        data.forEach(function (theObject) {\n            if (theObject[searchKey] === value) {\n                result = theObject[requiredKey]\n            }\n        })\n    }\n    catch(error)\n    {\n        console.error(error)\n        return result\n    }\n\n    return result\n}\nexport function refreshDashboard(timeline) {\n    if (timeline === undefined) {\n        console.log('undefined date')\n        return\n    }\n    const date = new Date(timeline)\n    const data = {\n        year: date.getFullYear().toString(),\n        month: (date.getMonth() + 1).toString(),\n        day: date.getDate().toString(),\n        hour: date.getHours().toString(),\n        minute: date.getMinutes().toString()\n    }\n    console.log('Time update request fired')\n    axios.post('/api/time/json', data)\n        .then(response => {\n            console.log(response.data.result.msg)\n            mapsStore.dispatch({\n                type: 'loadDashboard',\n                data: response.data\n            })\n            store.dispatch({\n                type: 'noGo',\n                value: response.data.result.msg\n            })\n        })\n        .catch(error => {\n            console.error(error)\n        })\n}\nexport function moodyTimeDifference(givenTime) {\n    const moodyHour = givenTime.getHours() + (givenTime.getMinutes() > 30 ? 1 : 0)\n    const moodyMin = givenTime.getMinutes() > 15 && givenTime.getMinutes() <= 45 ? 30 : 0\n    return givenTime.getMonth()+1 + ':' + givenTime.getDate() + ':' + moodyHour + ':' + moodyMin\n}\nexport function clearStorage() {\n    mapsStore.dispatch({type: 'clear'})\n    store.dispatch({type: 'clear'})\n}"],"sourceRoot":""}