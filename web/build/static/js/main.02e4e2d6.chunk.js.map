{"version":3,"sources":["Store/methods.js","Store/mapsUpdater.js","Store/index.js","Controllers/Switch.js","Widgets/widgets.js","Controllers/Button.js","Widgets/MapsBlock.js","Overview/index.js","LineHeat/index.js","PassengerAnalytics/index.js","Controllers/Input.js","Authenticate/index.js","App.js","reportWebVitals.js","index.js"],"names":["defaultState","active","loginState","timeUpToDate","time","Date","lineSpectating","stationSpectating","flowSpectating","peakSpectating","Store","state","action","type","newState","JSON","parse","stringify","alert","logout","line","hoverType","hoverID","defaultValue","stationData","pathData","newMapState","require","expires","setExpiration","schoolDays","undefined","persistConfig","key","storage","CookieStorage","Cookies","expiration","default","persistedMethods","persistReducer","methods","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","exposedMethods","persistStore","mapsPersistConfig","mapsMethods","mapsUpdater","mapsStore","mapsExposedMethods","MapSwitch","props","switchOptions","this","setState","allOptions","optionsController","forEach","perOption","acClass","activated","push","id","onClick","className","enumOptions","React","Component","transformToCentre","position","left","top","transform","linesConstructor","dataArray","tintArray","tooltip","lines","tooltipElement","converted","drawn","map","lineIndex","values","y","x","partPoint","name","Object","assign","dot","r","dataKey","stroke","strokeWidth","data","width","height","style","barConstructor","keys","console","log","barContent","index","fill","Dashboard","rounded","children","value","nameLabel","size","spacing","tint","frame","borderRadius","Fragment","slice","innerRadius","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","uv","pv","amt","port","SimpleTrends","xAxisMeasurement","SimpleBars","propData","sampleData","mockData","warn","propTintArray","AreaChartTrends","margin","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","fillOpacity","MNButtonStyle","backgroundColor","Button","variant","MapFuture","lazy","MapsBlock","datePicker","argumentPicker","selectedTime","flowStats","getState","userArguments","holiday","boom","enabled","station","flow","storeChange","bind","subscribe","modal","e","argument","newArguments","target","checked","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","onChange","label","handleChange","row","Slider","valueLabelDisplay","step","marks","min","max","disabled","dispatch","opacity","userSelect","cursor","getStats","handleOpen","triggerStats","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","utils","MomentUtils","handleTime","CardActions","color","FormControl","stationArguments","fallback","mode","body","document","Index","calculateSize","Math","scrollHeight","scrollWidth","addEventListener","removeEventListener","retrieveData","LineHeat","HeatTimeline","offsetWidth","PassengerAnalytics","Input","CertForm","event","feedbackInfo","option","preventDefault","onSubmit","CertChange","RadioGroup","Radio","Login","FormSheet","hello","LoginForm","App","pagesList","exact","path","to","AnimationApp","persistor","handleShortcutKey","location","replace","defaultPrevented","code","activeClassName","TransitionGroup","CSSTransition","classNames","timeout","Overview","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.02e4e2d6.chunk.js","sourcesContent":["const defaultState = {\n    active: \"dashboard\",\n    loginState: false,\n    timeUpToDate: true,\n    time: new Date(),\n    lineSpectating: 'No',\n    stationSpectating: 'No',\n    flowSpectating: -1,\n    peakSpectating: -1\n}\nconst Store = (state = defaultState, action) => {\n    if (action.type === 'login' && action.loginState) {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.loginState = true\n        alert(\"认证成功了\")\n        return newState\n    }\n    if (action.type === 'certMan') {\n        if (action.logout) {\n            return defaultState\n        }\n    }\n    if (action.type === 'hoverUpdate') {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.lineSpectating = action.line\n        if (action.hoverType === 'station') {\n            newState.stationSpectating = action.hoverID\n        }\n        return newState\n    }\n\n    return state\n}\nexport default Store","const defaultValue = {\n    stationData: {},\n    pathData: {}\n}\nconst Store = (state = defaultValue, action) => {\n    if (action.type === 'refresh') {\n        let newMapState = JSON.parse(JSON.stringify(state))\n        newMapState.stationData = require('../stationaryPlaceholder/stations.json')\n        newMapState.pathData = require('../stationaryPlaceholder/paths.json')\n        return newMapState\n    }\n    return state\n}\nexport default Store","import { createStore } from \"redux\";\nimport methods from './methods';\nimport mapsUpdater from './mapsUpdater';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { CookieStorage } from 'redux-persist-cookie-storage';\nimport storage from 'redux-persist/lib/storage';\nimport Cookies from 'cookies-js';\n\nlet expires = 22 * 86400\n\nexport function setExpiration(schoolDays)\n{\n    if (schoolDays === undefined) {\n        schoolDays = 22\n    }\n    expires = schoolDays * 86400;\n}\n\n//组件数据和会话\nconst persistConfig = {\n    key: 'root',\n    storage: new CookieStorage(Cookies, {expiration:\n        {default: expires}\n    })\n}\nconst persistedMethods = persistReducer(persistConfig, methods)\nlet store = createStore(persistedMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport let exposedMethods = persistStore(store)\nexport default store\n\n//地图存储\nconst mapsPersistConfig = {\n    key: 'maps',\n    storage: storage\n}\nconst mapsMethods = persistReducer(mapsPersistConfig, mapsUpdater)\nexport let mapsStore = createStore(mapsMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport let mapsExposedMethods = persistStore(mapsStore)","import React from \"react\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport './style.css';\nimport {\n    AreaChart, Area,\n    RadialBarChart,\n    RadialBar,\n    PolarAngleAxis,\n    Legend, Tooltip,\n    Cell,\n    LineChart,\n    CartesianGrid,\n    XAxis,\n    YAxis, Line, BarChart, Bar\n} from \"recharts\";\nimport '../Controllers/Switch';\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\nconst defaultRoundCorner = 20;\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\n\nfunction constructData(propData, sampleData) {\n    if (propData !== undefined) {\n        if (propData == null) {\n            console.warn(\"Null data received\")\n        }\n        return propData\n    } else return sampleData\n}\n\nfunction linesConstructor(dataArray, tintArray, state, tooltip) {\n    const lines = dataArray.lines\n    const tooltipElement = tooltip ? [<Tooltip/>] : []\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{r: 3}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={2}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend/>\n            {tooltipElement}\n            {drawn}\n        </LineChart>\n    )\n}\n\nfunction barConstructor(dataArray, tintArray, state) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    console.log(keys)\n    const barContent = keys.map(function (key, index) {\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n            />\n        )\n    })\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [{name: '摸', value: 40}, {name: '到', value: 90}, {name: '飞', value: 60}, {name: '起', value: 70}];\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const size = this.props.size * 2\n        const spacing = size / 8\n        const tint = [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded}\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(0, 1)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(1, 2)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(2, 3)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size / 2.5}\n                    height={size / 2.5}\n                    data={this.state.data.slice(3, 4)}\n                    innerRadius={size / 4.75}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = {name: '鸽子力', value: 80};\n        this.state = {\n            rounded: defaultRoundCorner,\n            data: (this.props.data !== undefined) ? this.props.data : mockData\n        }\n    }\n\n    greatLegend(value) {\n        return (\n            <span>{value}</span>\n        )\n    }\n\n    render() {\n        const tint = \"#137A7F\"\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: this.state.rounded, align: \"center\"}\n        const size = this.props.size\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[this.state.data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ]\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={this.state.data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={2} dot={{r: 3}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={2} dot={{r: 3}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = {\n            xAxisMeasurement: \"XExample\",\n            lines: [\n                {\n                    name: 'One',\n                    values: [\n                        4000,\n                        5000,\n                        3500,\n                        5000\n                    ]\n                },\n                {\n                    name: \"Two\",\n                    values: [\n                        7500,\n                        5560,\n                        2280,\n                        5600\n                    ]\n                },\n            ]\n        }\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data,\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: this.state.rounded\n        }\n        const tint = [\"#EA0\", \"#08A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(this.state.data, tint, port, this.props.tooltip)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = constructData(this.props.data, {\"uv\": 900, \"pv\": 609})\n        this.state = {\n            rounded: defaultRoundCorner,\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        const port = this.props.port\n        const tint = setTintArray(this.props.tint)\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": this.state.rounded\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([this.state.data], tint, port)}\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class AreaChartTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                \"name\": \"Page A\",\n                \"uv\": 4000,\n                \"pv\": 2400,\n                \"amt\": 2400\n            },\n            {\n                \"name\": \"Page B\",\n                \"uv\": 3000,\n                \"pv\": 1398,\n                \"amt\": 2210\n            },\n            {\n                \"name\": \"Page C\",\n                \"uv\": 2000,\n                \"pv\": 9800,\n                \"amt\": 2290\n            },\n            {\n                \"name\": \"Page D\",\n                \"uv\": 2780,\n                \"pv\": 3908,\n                \"amt\": 2000\n            },\n            {\n                \"name\": \"Page E\",\n                \"uv\": 1890,\n                \"pv\": 4800,\n                \"amt\": 2181\n            },\n            {\n                \"name\": \"Page F\",\n                \"uv\": 2390,\n                \"pv\": 3800,\n                \"amt\": 2500\n            },\n            {\n                \"name\": \"Page G\",\n                \"uv\": 3490,\n                \"pv\": 4300,\n                \"amt\": 2100\n            }\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n    render() {\n        return (\n            <AreaChart width={730} height={250} data={this.state.data}\n                       margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n                <defs>\n                    <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                    </linearGradient>\n                    <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                    </linearGradient>\n                </defs>\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n            </AreaChart>\n        )\n    }\n\n}","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: '#FFF'\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n            type: (this.props.type !== undefined) ? this.props.type : \"\"\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick} type={this.state.type}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Suspense } from \"react\";\nimport store, { mapsStore } from \"../Store\";\nimport {\n    Button as MaterialButton,\n    Card, CardActions,\n    CardContent,\n    Checkbox,\n    Fade, FormControl,\n    FormControlLabel,\n    FormGroup,\n    FormLabel,\n    Modal,\n    Slider, Typography\n} from \"@material-ui/core\";\nimport MapSwitch from \"../Controllers/Switch\";\nimport {Button} from \"../Controllers/Button\";\nimport {KeyboardDateTimePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\nconst MapFuture = React.lazy(() => import('./Map'));\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rounded: 20,\n            datePicker: false,\n            argumentPicker: false,\n            activated: \"无\",\n            selectedTime: new Date(),\n            flowStats: true,\n            lineSpectating: store.getState().lineSpectating,\n            stationSpectating: store.getState().stationSpectating,\n            userArguments: {holiday: undefined, boom: {enabled: false, station: undefined, flow: undefined}}\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n\n    handleOpen(modal) {\n        if (modal === 'datePicker') {this.setState({datePicker: !this.state.datePicker})}\n        if (modal === 'argumentPicker') {this.setState({argumentPicker: !this.state.argumentPicker})}\n    }\n    handleTime(e) {\n        this.setState({time: e})\n    }\n    handleChange(e, argument) {\n\n        const defaultBoomFlow = 3000\n\n        let newArguments = this.state.userArguments\n        if (argument === 'holiday') {\n            newArguments.holiday = e.target.checked\n        }\n        if (argument === 'boom') {\n            newArguments.boom.enabled = e.target.checked\n            if (e.target.checked) {\n                newArguments.boom.station = this.state.stationSpectating\n                newArguments.boom.flow = defaultBoomFlow\n            }\n        }\n        this.setState({userArguments: newArguments})\n    }\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>线路</td>\n                    <td>{this.state.lineSpectating}</td>\n                </tr>\n                <tr>\n                    <td>客流量</td>\n                    <td>99</td>\n                </tr>\n                <tr>\n                    <td>高峰时段</td>\n                    <td>9:00</td>\n                </tr>\n            </table>\n        )\n    }\n    stationArguments() {\n        if (this.state.stationSpectating === 'No') {\n            return (\n                <FormLabel component={'legend'}>没有选择站点</FormLabel>\n            )\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <FormLabel component={'legend'}>{this.state.stationSpectating}</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.userArguments.holiday}\n                                    onChange={this.state}\n                                />\n                            }\n                            label={'故障'}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.userArguments.boom.enabled}\n                                        onChange={(e) => this.handleChange(e, 'boom')}\n                                    />\n                                }\n                                label={'突发客流'}\n                            />\n                            <FormGroup row>\n                                <Slider\n                                    defaultValue={3000}\n                                    valueLabelDisplay=\"auto\"\n                                    step={10}\n                                    marks\n                                    min={10}\n                                    max={110}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                />\n                            </FormGroup>\n                        </FormGroup>\n\n                    </FormGroup>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        mapsStore.dispatch({type: 'refresh'})\n        return (\n            <div className={\"Layer\"} style={{borderRadius: this.state.rounded}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch switchOptions={[\"无\", \"热力图\"]} state={this.state}\n                               setState={(e) => (this.setState(e))}\n                    />\n                    <Button onClick={() => this.handleOpen('datePicker')}>\n                        选择日期\n                    </Button>\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}数据\n                    </Button>\n                    {this.state.flowStats ? <Button onClick={() => this.handleOpen('argumentPicker')}>模拟数据变更</Button> : ''}\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.time}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('datePicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.argumentPicker}>\n                        <Fade in={this.state.argumentPicker}>\n                            <Card style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        输入参数\n                                    </Typography>\n                                    <FormControl component={'fieldset'}>\n                                        <FormLabel component={'legend'}>该时间操作</FormLabel>\n                                        <FormGroup row>\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox\n                                                        checked={this.state.userArguments.holiday}\n                                                        onChange={this.state}\n                                                    />\n                                                }\n                                                label={'是假期'}\n                                            />\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox\n                                                        checked={this.state.userArguments.holiday}\n                                                        onChange={this.state}\n                                                    />\n                                                }\n                                                label={'天气'}\n                                            />\n                                        </FormGroup>\n                                    </FormControl>\n                                    <br />\n                                    <FormControl component={'fieldset'}>\n                                        {this.stationArguments()}\n                                    </FormControl>\n\n                                </CardContent>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('argumentPicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>Maps loading...</div>}>\n                        <div style={{transform: 'translate(+7%, +5%)'}}>\n                            <MapFuture\n                                height={this.props.port.height}\n                                width={this.props.port.width}\n                                mode={this.state.activated}\n                            />\n                        </div>\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport { MapsBlock } from '../Widgets/MapsBlock';\n\nconst body = document.body\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n    retrieveData(name) {\n        if (name === 'overall') {\n            return (\n                {\n                    name: '综合压力',\n                    value: 60\n                }\n            )\n        }\n        if (name === 'overloadedStation') {\n            return (\n                {\n                    name: 'Sta99',\n                    value: 99\n                }\n            )\n        }\n        if (name === 'distPressure') {\n            return ([\n                {name: 'dist1', value: 85},\n                {name: 'dist3', value: 83},\n                {name: 'dist5', value: 77},\n                {name: 'dist6', value: 66}\n            ])\n        }\n    }\n\n    render() {\n        const {size} = this.state\n        return (\n                <div className={\"OverviewGrid\"}>\n                    <div className={\"div1\"}>\n                        <MapsBlock\n                            port={{\"height\": size * 4, \"width\": size * 4}}\n                        />\n                    </div>\n                    <div className={\"div2\"}>\n                        <Widgets.DashboardOne size={size} data={this.retrieveData('overall')}/>\n                    </div>\n                    <div className={\"div3\"}>\n                        <Widgets.DashboardOne size={size} data={this.retrieveData('overloadedStation')}/>\n                    </div>\n                    <div className={\"div4\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div5\"}>\n                        <Widgets.DashboardOne size={size}/>\n                    </div>\n                    <div className={\"div6\"}>\n                        <Widgets.Dashboard size={size} data={this.retrieveData('distPressure')}>\n                            客流高峰区域\n                        </Widgets.Dashboard>\n                    </div>\n                    <div className={\"div7\"}>\n                        <Widgets.Dashboard size={size}/>\n                    </div>\n                    <div className={\"div8\"}>\n                        <Widgets.Trends\n                            port={{\"height\": size, \"width\": size * 2}}\n                        >\n                            Trends\n                        </Widgets.Trends>\n                    </div>\n                    <div className={\"div9\"}>\n                        <Widgets.SimpleTrends\n                            port={{\"height\": size, \"width\": size * 3}}\n                            tooltip={true}\n                        >\n                            SimpleTrends\n                        </Widgets.SimpleTrends>\n                    </div>\n                    <div className={\"div10\"}>\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#2196f3\", \"#8bc34a\"]}\n                        >\n                            Simple Bars\n                        </Widgets.SimpleBars>\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\n\nconst body = document.body\n\nexport class LineHeat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        return(\n            <div className={\"LHGrid\"}>\n                <div className=\"div1\"></div>\n                <div className=\"div2\"></div>\n                <div className=\"div3\"></div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n                <div className=\"div7\"></div>\n                <div className=\"div8\"></div>\n                <div className=\"div9\"></div>\n                <div className=\"div10\"></div>\n                <div className=\"div11\"></div>\n                <div className=\"div12\"></div>\n                <div className=\"div13\"></div>\n                <div className=\"div14\"></div>\n                <div className=\"div15\"></div>\n                <div className=\"div16\"></div>\n                <div className=\"div17\"></div>\n                <div className=\"div18\"></div>\n                <div className=\"div19\"></div>\n                <div className=\"div20\"></div>\n            </div>\n        )\n    }\n}\n\nexport class HeatTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 4, body.scrollWidth / 2)\n        })\n        console.log(this.state.size)\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return(\n            <div className={\"THGrid\"}>\n                <div className=\"div1\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.offsetWidth - 60}}\n                    />\n                </div>\n                <div className=\"div2\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.offsetWidth - 60}}\n                    />\n                </div>\n                <div className=\"div3\">\n                    <Widgets.AreaChartTrends/>\n                </div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\n// import * as Widgets from '../Widgets/widgets';\n\nclass PassengerAnalytics extends React.Component {\n    render() {\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                    </div>\n                    <div className=\"div2\"></div>\n                    <div className=\"div3\"></div>\n                    <div className=\"div4\"></div>\n                    <div className=\"div5\"></div>\n                    <div className=\"div6\"></div>\n                    <div className=\"div7\"></div>\n                    <div className=\"div8\"></div>\n                    <div className=\"div9\"></div>\n                    <div className=\"div10\"></div>\n                    <div className=\"div11\"></div>\n                    <div className=\"div12\"></div>\n                    <div className=\"div13\"></div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from \"react\";\nimport \"./style.css\"\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (this.props.type !== undefined) ? this.props.type : \"text\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={'InputFunction'}>\n                <label>\n                    {this.props.children}\n                </label>\n                <input type={this.state.type}/>\n            </div>\n        )\n    }\n}\n\nexport default Input","import React from \"react\";\nimport {Input, Button} from '../Controllers';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport './style.css';\nimport store, { setExpiration } from \"../Store\";\n\nfunction loginRequest(event) {\n    event.preventDefault()\n    store.dispatch({\n        type: 'login',\n        loginState: true\n    })\n}\n\n\n\nclass CertForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'option': ''\n        }\n    }\n    CertChange(event) {\n        let feedbackInfo\n        if (this.state.option === 'logout') {\n            feedbackInfo = '注销凭据完成'\n            const action = {\n                type: 'certMan',\n                logout: (this.state.option === 'logout')\n            }\n            store.dispatch(action)\n        }\n        if (this.state.option === 'cache') {\n            feedbackInfo = '保存凭据'+22+'天'\n            setExpiration()\n        }\n        alert(feedbackInfo)\n        event.preventDefault()\n\n    }\n\n    render() {\n        const handleRadioChange = (event) => {\n            this.setState({'option': event.target.value})\n        };\n        return(\n            <form onSubmit={(event) => this.CertChange(event)}>\n                <RadioGroup name={'manageOption'} value={this.state.option} onChange={handleRadioChange}>\n                    <FormControlLabel value={'logout'} control={<Radio/>} label={\"登出\"}/>\n                    <FormControlLabel value={'cache'} control={<Radio/>} label={\"保存凭据\"}/>\n                </RadioGroup>\n                <Button type={'submit'}>\n                    确定\n                </Button>\n            </form>\n        )\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = store.getState()\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n\n    render() {\n        let FormSheet, hello\n        const LoginForm = [\n            <form onSubmit={(e) => loginRequest(e)}>\n                <div className={\"AuthForm\"}>\n                    <div>\n                        <Input>\n                            用户名称\n                        </Input>\n                        <Input type={\"password\"}>\n                            密码\n                        </Input>\n                    </div>\n                    <div className={\"Button\"}>\n                        <Button type={\"submit\"}>\n                            好\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        ]\n\n        if (this.state.loginState) {\n            FormSheet = [<CertForm/>]\n            hello = \"认证管理\"\n        }\n        else {\n            FormSheet = LoginForm\n            hello = \"认证\"\n        }\n\n        return (\n            <React.Fragment>\n                <div id={'Amaze'}/>\n                <div id={'ActualCard'}>\n                    <h1>\n                        {hello}\n                    </h1>\n                </div>\n                <div id={'Maze'}/>\n                    <section className={\"AuthCard\"}>\n                        {FormSheet}\n                    </section>\n            </React.Fragment>\n\n\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\n\nimport Overview from \"./Overview\";\nimport { LineHeat, HeatTimeline } from \"./LineHeat\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport Login from \"./Authenticate\";\nimport './index.css';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, { exposedMethods } from \"./Store\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = store.getState()\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n\n    render() {\n        let pagesList = []\n        if (this.state.loginState === true) {\n            pagesList.push(\n                <Switch>\n                    <Route exact path={\"./\"}>\n                        <Redirect to={\"Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"} component={AnimationApp}/>\n                </Switch>)\n        }\n        else {\n            pagesList.push(\n                <Switch>\n                    <Route path={\"*\"}>\n                        <Login />\n                    </Route>\n                </Switch>\n            )\n        }\n        return (\n            <PersistGate store={store} persistor={exposedMethods}>\n                <Router>\n                    {pagesList}\n                </Router>\n            </PersistGate>\n        )\n    }\n}\n\nclass AnimationApp extends React.Component {\n    render() {\n        // keyboard shortcuts\n        window.addEventListener(\"keydown\", function (e) {\n            if (e.defaultPrevented) {\n                return;\n            }\n            function handleShortcutKey(key) {\n                const destination = ['Overview', 'LineHeat', 'HeatTimeline', 'PassengerAnalytics', 'Authenticate']\n                window.location.replace('./' + destination[key - 1])\n            }\n            if (e.key !== undefined) {\n                if (e.key === '1') {handleShortcutKey(1)}\n                if (e.key === '2') {handleShortcutKey(2)}\n                if (e.key === '3') {handleShortcutKey(3)}\n                if (e.key === '4') {handleShortcutKey(4)}\n                if (e.key === 'L' || e.key === 'l') {handleShortcutKey(5)}\n            }\n            else if (e.code !== undefined) {\n                if (e.code === 'Digit1') {handleShortcutKey(1)}\n                if (e.code === 'Digit2') {handleShortcutKey(2)}\n                if (e.code === 'Digit3') {handleShortcutKey(3)}\n                if (e.code === 'Digit4') {handleShortcutKey(4)}\n                if (e.code === 'KeyL') {handleShortcutKey(5)}\n            }\n        })\n\n        return (\n            <React.Fragment>\n                <div className=\"Dock\">\n                    <NavLink to={\"Overview\"} activeClassName={\"active\"} exact>\n                        <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                    </NavLink>\n                    <NavLink to={\"LineHeat\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>线路分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink to={\"HeatTimeline\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>时段分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>客流分析<span>3</span></button>\n                    </NavLink>\n                    <NavLink to={\"Authenticate\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>认证<span>L</span></button>\n                    </NavLink>\n                </div>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={this.props.location}\n                        classNames={\"fade\"}\n                        timeout={250}\n                    >\n                        <Switch>\n                            <Route path={`*/Overview`} component={Overview}/>\n                            <Route path={`*/LineHeat`} component={LineHeat}/>\n                            <Route path={`*/HeatTimeline`} component={HeatTimeline}/>\n                            <Route path={`*/PassengerAnalytics`} component={PassengerAnalytics}/>\n                            <Route path={`*/Authenticate`} component={Login}/>\n                            <Route path={`*`}>\n                                <Redirect to={\"Overview\"}/>\n                            </Route>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}