{"version":3,"sources":["Controllers/Switch.js","Widgets/widgets.js","Controllers/Button.js","Widgets/MapsBlock.js","Overview/index.js","LineHeat/index.js","PassengerAnalytics/index.js","Controllers/Input.js","Authenticate/index.js","App.js","reportWebVitals.js","index.js","Store/methods.js","Store/mapsUpdater.js","Store/index.js"],"names":["MapSwitch","props","state","switchOptions","this","setState","allOptions","optionsController","index","forEach","perOption","acClass","activated","push","id","onClick","className","style","enumOptions","React","Component","ThemeSwitch","themeNames","store","getState","theme","dispatch","type","value","Fragment","position","height","transformToCentre","left","top","transform","defaultRoundCorner","makeAvailable","thing","undefined","fixDictionaryKeys","data","theKeys","zoom","emptyData","zoomSet","theKeysSet","map","e","linesConstructor","dataArray","tintArray","tooltip","axis","lines","tooltipElement","converted","drawn","centreStyle","bottom","line","lineIndex","values","y","x","partPoint","name","Object","assign","dot","strokeWidth","dataKey","stroke","width","tickLine","barConstructor","label","keys","fixedHeight","barContent","key","labelSet","fill","isAnimationActive","colouredPieConstructor","tint","entry","length","Dashboard","nameLabel","size","innerRadius","frame","borderRadius","valueKey","Math","round","children","slice","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","content","payload","right","DashboardOne","formatter","greatLegend","Trends","pv","amt","uv","port","r","SimpleTrends","SimpleBars","propTintArray","dataToConstruct","newDictionary","makeDictionaryPairs","AreaChartTrends","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","fillOpacity","GreatLegends","error","inside","getFromData","makeEmpty","SimplePieCharts","result","duetFrame","display","flexDirection","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","outerRadius","percent","radius","cos","sin","textAnchor","dominantBaseline","mixBlendMode","toFixed","data0","isItZero","duet","nameKey","labelLine","layout","MNButtonStyle","backgroundColor","color","Button","disabled","variant","MapFuture","lazy","PassengerMaps","MapsBlock","datePicker","argumentPicker","selectedTime","Date","timeline","flowStats","storeState","mapsState","mapsStore","userArguments","time","holiday","weather","enabled","condition","temperature","low","high","boom","station","flow","failure","subscribe","modal","argument","newArguments","target","checked","stationSpectating","moment","format","dayprop","temperatures","axios","post","then","response","console","log","predictionRequest","alert","handleOpen","tripStart","tripFinish","stationin","stationout","month","getMonth","hour","getHours","abs","dettime","catch","start","finish","tripCalculate","timeArray","dashboardData","highestTime","replace","match","lineSpectating","patchZero","getTripForm","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","onChange","event","handleChange","row","Select","labelId","MenuItem","Slider","defaultValue","valueLabelDisplay","step","marks","min","max","foo","opacity","userSelect","cursor","getStats","timeNoGo","triggerStats","fontSize","marginTop","justifyContent","live","startTrip","finishTrip","getBeginTripButton","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","margin","utils","MomentUtils","handleTime","CardActions","handleTimeUpdate","FormControl","InputLabel","TextField","InputLabelProps","shrink","stationArguments","handlePredictionUpdate","fallback","mode","PassengerMapsBlock","passengerMode","handlePassengerModeChange","body","document","Index","calculateSize","scrollHeight","scrollWidth","window","addEventListener","removeEventListener","highestFlow","overallFlow","highestDist4","lineFlow","LineHeat","xAxisMeasurements","HeatTimeline","timelineData","sevenFlow","xAxisMeasurement","passengerArray","PassengerAnalytics","stationInward","ageMapSpectating","inward","stationOutward","outward","forceUpdate","data1","girls","boys","arrayCoherence","getSlice","getSum","Input","handler","CertForm","handleSlider","newValue","duration","feedbackInfo","logout","setExpiration","onSubmit","CertChange","clearStorage","Login","username","password","storeChange","bind","preventDefault","msg","code","loginState","session","loginRequest","FormSheet","hello","LoginForm","handleLogin","handleForm","root","documentElement","App","setProperty","pagesList","exact","path","to","AnimationApp","persistor","exposedMethods","handling","redirect","done","setTimeout","history","listen","location","pathname","wary","themeSwitchKey","themeSwitcherWary","handleShortcutKey","defaultPrevented","activeClassName","TransitionGroup","CSSTransition","classNames","timeout","Overview","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","nowPlacebo","defaultState","active","sessionData","now","timePeriod","flowSpectating","Store","action","newState","JSON","parse","stringify","initiated","pathData","heatData","newMapState","require","refreshDashboard","hoverType","hoverID","searchObject","ageMap","expires","schoolDays","persistConfig","storage","CookieStorage","Cookies","expiration","default","persistedMethods","persistReducer","methods","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistStore","mapsPersistConfig","mapsMethods","mapsUpdater","mapsExposedMethods","searchKey","requiredKey","theObject","date","year","getFullYear","toString","day","getDate","minute","getMinutes","newArray","str","substring"],"mappings":"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","file":"static/js/main.e467967b.chunk.js","sourcesContent":["import React from \"react\";\nimport store from \"../Store\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        let index = 0\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n                style={this.props.style}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport class ThemeSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState()\n        }\n    }\n    themeNames = ['深色', '浅色']\n    enumOptions() {\n        let optionsController = []\n        let index = 0\n        this.themeNames.forEach(\n            function (perOption) {\n                const {theme} = store.getState()\n                const themeOptions = ['dark', 'light']\n                let acClass = \"SwitchTick\"\n                if (theme === themeOptions[index]) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => {\n                            store.dispatch({\n                                type: 'switchTheme'\n                            })\n                        }}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n    dispatchTheme(value) {\n        store.dispatch({\n            type: 'switchTheme',\n            theme: value\n        })\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <div\n                    id={'controller-theme-switch'}\n                    className={\"SwitchBase\"}\n                    style={{position: 'absolute'}}\n                >\n                    {this.enumOptions()}\n                </div>\n                <div style={{height: 'calc(11pt + 30px)'}}/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport './style.css';\nimport {\n    PolarAngleAxis, XAxis, YAxis,\n    AreaChart, Area,\n    RadialBarChart, RadialBar,\n    LineChart, Line,\n    PieChart, Pie,\n    BarChart, Bar,\n    Legend, Tooltip,\n    Cell, CartesianGrid,\n    LabelList\n} from \"recharts\";\nimport '../Controllers/Switch';\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\nexport const defaultRoundCorner = 20;\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\nexport function makeAvailable(thing) {\n    if (thing !== undefined) {return thing}\n    return (<React.Fragment/>)\n}\nexport function fixDictionaryKeys(data, theKeys, zoom) {\n    let emptyData = [{}, {}, {}, {}]\n    const zoomSet = zoom === undefined ? 1 : zoom\n    const theKeysSet = theKeys === undefined ? ['name', 'value'] : theKeys\n    try {\n        data.map(function (value, index) {\n            emptyData[index] = {'name': value[theKeysSet[0]], 'value': value[theKeysSet[1]] * zoomSet}\n            return emptyData\n        }, emptyData, theKeysSet, zoomSet)\n    }\n    catch (e) {}\n    return emptyData\n}\nfunction makeDictionaryPairs(data, theKeys) {\n    let newDictionary = {}\n    try {\n        data.map(function (value) {\n            const key = value[theKeys[0]]\n            newDictionary[key] = value[theKeys[1]]\n            return true\n        }, theKeys)\n    }\n    catch (e) {}\n    return newDictionary\n}\nfunction linesConstructor(dataArray, tintArray, state, tooltip, axis) {\n    const lines = dataArray.lines\n    const tooltipElement = tooltip ? [<Tooltip />] : []\n    let converted = []\n    let drawn = []\n    let centreStyle = transformToCentre\n    if (axis === true) {\n        centreStyle = {position: 'absolute', bottom: 10, left: '50%', transform: 'translateX(-50%)'}\n    }\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{strokeWidth: 3}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={2}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={centreStyle}\n        >\n\n            {axis ? <CartesianGrid /> : <React.Fragment />}\n            {axis ? <YAxis tickLine={false}/> : <React.Fragment />}\n            {axis ? <XAxis tickLine={false}/> : <React.Fragment />}\n            {tooltipElement}\n            {drawn}\n            <Legend />\n        </LineChart>\n    )\n}\nfunction barConstructor(dataArray, tintArray, state, label, axis) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    const wrapperStyle = {position: 'absolute', bottom: 0, left: '50%', transform: 'translateX(-50%)'}\n    const fixedHeight = label ? state.height - 10 : state.height\n    const barContent = keys.map(function (key, index) {\n        let labelSet = []\n        if (label) {\n            labelSet = [<LabelList dataKey={key} position=\"top\" style={{fill: 'var(--themeColor)'}}/>]\n        }\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n                isAnimationActive={false}\n            >\n                {labelSet}\n            </Bar>\n        )\n    }, label)\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={fixedHeight}\n            style={wrapperStyle}\n        >\n            {axis ? <CartesianGrid /> : <React.Fragment />}\n            {axis ? <YAxis tickLine={false}/> : <React.Fragment />}\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\nfunction colouredPieConstructor(data, tint) {\n    try {\n        return data.map((entry, index) => <Cell fill={tint[index % tint.length]}/>)\n    }\n    catch (e) {}\n\n}\n\nexport class Dashboard extends React.Component {\n    render() {\n        const data = fixDictionaryKeys(this.props.data, this.props.keys, this.props.zoom)\n        const size = this.props.size * 1.25\n        const innerRadius = size / 3.75\n        const spacing = 0\n        const tint = this.props.tint === undefined ? [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"] : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner}\n        const valueKey = this.props.keys === undefined ? 'value' : this.props.keys[1]\n        const values = this.props.data.map(function (entry) {\n            return Math.round(entry[valueKey] * 100) / 100\n        })\n        const renderLegend0 = (props) => {\n            const { payload } = props;\n            return (\n                <div>\n                    {\n                        payload.map((entry) => (\n                            <div className={'CircleLegend'}>\n                                {entry.value}\n                                <br />\n                                <span>{values[0]}</span>\n                            </div>\n                        ), values)\n                    }\n                </div>\n            );\n        }\n        const renderLegend1 = (props) => {\n            const { payload } = props;\n            return (\n                <div>\n                    {\n                        payload.map((entry) => (\n                            <div className={'CircleLegend'}>\n                                {entry.value}\n                                <br />\n                                <span>{values[1]}</span>\n                            </div>\n                        ), values)\n                    }\n                </div>\n            );\n        }\n        const renderLegend2 = (props) => {\n            const { payload } = props;\n            return (\n                <div>\n                    {\n                        payload.map((entry) => (\n                            <div className={'CircleLegend'}>\n                                {entry.value}\n                                <br />\n                                <span>{values[2]}</span>\n                            </div>\n                        ), values)\n                    }\n                </div>\n            );\n        }\n        const renderLegend3 = (props) => {\n            const { payload } = props;\n            return (\n                <div>\n                    {\n                        payload.map((entry) => (\n                            <div className={'CircleLegend'}>\n                                {entry.value}\n                                <br />\n                                <span>{values[3]}</span>\n                            </div>\n                        ), values)\n                    }\n                </div>\n            );\n        }\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(0, 1)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        content={renderLegend0}\n                    />\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(1, 2)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        content={renderLegend1}\n                    />\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(2, 3)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        content={renderLegend2}\n                    />\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(3, 4)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        content={renderLegend3}\n                    />\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    greatLegend(value, ) {\n        return (<span>{value}</span>)\n    }\n\n    render() {\n        const tint = this.props.tint === undefined ? \"#137A7F\" : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner, align: \"center\"}\n        const size = this.props.size\n        const value = Math.round(this.props.data.value * 100) / 100\n        const renderLegend = (props) => {\n            const { payload } = props;\n            return (\n                <div>\n                    {\n                        payload.map((entry) => (\n                            <div className={'CircleLegend'}>\n                                {entry.value}\n                                <br />\n                                <span>{value}</span>\n                            </div>\n                        ), value)\n                    }\n                </div>\n            );\n        }\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[this.props.data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        formatter={this.greatLegend}\n                        content={renderLegend}\n                    />\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                name: 'Page A', '1号线': 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {borderRadius: defaultRoundCorner}\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={this.state.data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={2} dot={{r: 3}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={2} dot={{r: 3}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: defaultRoundCorner\n        }\n        const tint = this.props.tint === undefined ? [\"#EA0\", \"#08A\"] : this.props.tint\n        let nameLabel = makeAvailable(this.props.children)\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(this.props.data, tint, port, this.props.tooltip, this.props.axis)}\n                <label className={'widgetLabel'}>\n                    {nameLabel}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    render() {\n        const dataToConstruct = this.props.keys === undefined ? this.props.data : makeDictionaryPairs(this.props.data, this.props.keys)\n        const tint = setTintArray(this.props.tint)\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"borderRadius\": defaultRoundCorner\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([dataToConstruct], tint, this.props.port, this.props.label, this.props.axis)}\n                <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n            </div>\n        )\n    }\n}\n\nexport class AreaChartTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                \"name\": \"Page A\",\n                \"uv\": 4000,\n                \"pv\": 2400,\n                \"amt\": 2400\n            },\n            {\n                \"name\": \"Page B\",\n                \"uv\": 3000,\n                \"pv\": 1398,\n                \"amt\": 2210\n            },\n            {\n                \"name\": \"Page C\",\n                \"uv\": 2000,\n                \"pv\": 9800,\n                \"amt\": 2290\n            },\n            {\n                \"name\": \"Page D\",\n                \"uv\": 2780,\n                \"pv\": 3908,\n                \"amt\": 2000\n            },\n            {\n                \"name\": \"Page E\",\n                \"uv\": 1890,\n                \"pv\": 4800,\n                \"amt\": 2181\n            },\n            {\n                \"name\": \"Page F\",\n                \"uv\": 2390,\n                \"pv\": 3800,\n                \"amt\": 2500\n            },\n            {\n                \"name\": \"Page G\",\n                \"uv\": 3490,\n                \"pv\": 4300,\n                \"amt\": 2100\n            }\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: defaultRoundCorner\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <AreaChart\n                    width={port.width}\n                    height={port.height}\n                    data={this.state.data}\n                    style={transformToCentre}\n                >\n                    <defs>\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                    <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                </AreaChart>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class GreatLegends extends React.Component {\n    getFromData(data, index, key) {\n        try {return data[index][key]}\n        catch (error) {}\n        return undefined\n    }\n    makeEmpty(inside) {\n        return (inside === null || inside === undefined) ? '--' : inside\n    }\n    render() {\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": defaultRoundCorner\n        }\n        if (this.props.type === 'array')\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <div className={'GLContainer'}>\n                    <div className={'GLName'}>\n                        {this.getFromData(this.props.data, this.props.index, this.props.keys[0])}\n                    </div>\n                    <div className={'GLValue'}>\n                        {this.makeEmpty(this.getFromData(this.props.data, this.props.index, this.props.keys[1]))}\n                    </div>\n                </div>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n        if (this.props.type === 'straight') {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div className={'GLContainer'}>\n                        <div className=\"GLName\">\n                            {this.props.name}\n                        </div>\n                        <div className=\"GLValue\">\n                            {this.makeEmpty(this.props.value)}\n                        </div>\n                    </div>\n                    <label className={'widgetLabel'}>\n                        {makeAvailable(this.props.children)}\n                    </label>\n                </div>\n            )\n        }\n        return (<React.Fragment/>)\n    }\n}\n\nexport class SimplePieCharts extends React.Component {\n    isItZero(data) {\n        let result = false\n        try {\n            data.map(function (data) {\n                if (data.value > 0) {\n                    result = true\n                    return true\n                }\n                return true\n            })\n            return result\n        }\n        catch (e) {}\n        return result\n    }\n\n    render() {\n        const frame = {\n            width: \"100%\",\n            height: \"100%\",\n            borderRadius: defaultRoundCorner,\n        }\n        const duetFrame = {\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            borderRadius: defaultRoundCorner,\n            display: 'flex',\n            flexDirection: 'row'\n        }\n        const RADIAN = Math.PI / 180;\n        const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\n            const radius = innerRadius + (outerRadius - innerRadius) * 0.6;\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n            if (percent < .01) {\n                return <React.Fragment />\n            }\n            return (\n                <text x={x} y={y} fill=\"#777\" textAnchor={'middle'} dominantBaseline=\"central\" style={{mixBlendMode: 'difference'}}>\n                    {`${(percent * 100).toFixed(0)}%`}\n                </text>\n            )\n        }\n        const data = this.props.data\n        const data0 = this.props.data0\n        if (this.isItZero(data) === false) {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div style={transformToCentre}>当前情况无客流</div>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n        if (this.props.duet === true) {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div style={duetFrame}>\n                        <PieChart\n                            width={this.props.size}\n                            height={this.props.size}\n                        >\n                            <Pie\n                                data={data}\n                                nameKey={'key'}\n                                dataKey={'value'}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                            >\n                                {colouredPieConstructor(data, this.props.tint[0])}\n                            </Pie>\n                                <Legend />\n                        </PieChart>\n                        <PieChart\n                            width={this.props.size}\n                            height={this.props.size}\n                        >\n                            <Pie\n                                data={data0}\n                                nameKey={'key'}\n                                dataKey={'value'}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                            >\n                                {colouredPieConstructor(data, this.props.tint[1])}\n                            </Pie>\n                            <Legend />\n                        </PieChart>\n                    </div>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <PieChart\n                        width={this.props.size + 50}\n                        height={this.props.size + 50}\n                        style={transformToCentre}\n                    >\n                        <Pie\n                            data={data}\n                            nameKey={'key'}\n                            dataKey={'value'}\n                            labelLine={false}\n                            label={renderCustomizedLabel}\n                            isAnimationActive={false}\n                        >\n                            {colouredPieConstructor(data, this.props.tint)}\n                        </Pie>\n                        <Legend layout={'vertical'} align={'right'} verticalAlign={'middle'}/>\n                    </PieChart>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n    }\n}","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: 'var(--themeButtonBackground)',\n    color: 'var(--themeColor)',\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n            type: (this.props.type !== undefined) ? this.props.type : \"\",\n            disabled: (this.props.disabled === true),\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick} type={this.state.type} disabled={this.state.disabled}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Suspense } from \"react\";\nimport store, {mapsStore, patchZero} from \"../Store\";\nimport {\n    Button as MaterialButton,\n    Card, CardActions, CardContent, Typography,\n    FormControl, FormControlLabel, FormGroup, FormLabel,\n    Fade, Modal,\n    Checkbox, Slider, Select, MenuItem, TextField, InputLabel,\n} from \"@material-ui/core\";\nimport MapSwitch from \"../Controllers/Switch\";\nimport { Button } from \"../Controllers/Button\";\nimport { defaultRoundCorner } from \"./widgets\";\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst MapFuture = React.lazy(() => import('./Map'));\nconst PassengerMaps = React.lazy(() => import('./PassengerMaps'))\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction predictionRequest(userArguments) {\n    const timeConstructed = moment(userArguments.time).format('MM:DD:hh:mm')\n    const data = {\n        time: timeConstructed,\n        station: {\n            name: userArguments.boom.station,\n            flow: userArguments.boom.flow === undefined || userArguments.boom.type === undefined ? undefined : [userArguments.boom.flow, userArguments.boom.type],\n        },\n        dayprop: userArguments.holiday,\n        weather: userArguments.weather.condition,\n        temperatures: [userArguments.weather.temperature.low, userArguments.weather.temperature.high],\n    }\n    try {\n        axios.post('/python/predict', data)\n            .then(response => {console.log(response)})\n    }\n    catch (error) {\n        console.error(error);\n    }\n    console.log(data)\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            datePicker: false,\n            argumentPicker: false,\n            activated: \"无\",\n            selectedTime: new Date(store.getState().timeline),\n            flowStats: true,\n            storeState: store.getState(),\n            mapsState: mapsStore.getState(),\n            userArguments: {\n                time: store.getState().timeline,\n                holiday: undefined,\n                weather: {\n                    enabled: false,\n                    condition: '阴',\n                    temperature: {\n                        low: undefined,\n                        high: undefined\n                    }\n                },\n                boom: {\n                    enabled: false,\n                    station: undefined,\n                    flow: undefined,\n                    type: 0,\n                    failure: false,\n                }\n            }\n        }\n        store.subscribe(() => this.setState({storeState: store.getState()}))\n        mapsStore.subscribe(() => this.setState({mapsState: mapsStore.getState()}))\n    }\n\n    handleOpen(modal) {\n        if (modal === 'datePicker') {this.setState({datePicker: !this.state.datePicker})}\n        if (modal === 'argumentPicker') {this.setState({argumentPicker: !this.state.argumentPicker})}\n    }\n    handleTime(e) {\n        this.setState({selectedTime: e})\n    }\n    handleChange(e, argument) {\n        let newArguments = this.state.userArguments\n        if (argument === 'holiday') {\n            newArguments.holiday = e.target.checked\n        }\n        if (argument === 'boomTick') {\n            newArguments.boom.enabled = e.target.checked\n        }\n        if (argument === 'boomType') {\n            newArguments.boom.type = e.target.value\n        }\n        if (argument === 'boom') {\n            newArguments.boom.station = this.state.stationSpectating\n            newArguments.boom.flow = e\n        }\n        if (argument === 'weatherTick') {\n            newArguments.weather.enabled = e.target.checked\n        }\n        if (argument === 'weatherTemperatureLow') {\n            newArguments.weather.temperature.low = e.target.value\n        }\n        if (argument === 'weatherTemperatureHigh') {\n            newArguments.weather.temperature.high = e.target.value\n        }\n        if (argument === 'weather') {\n            newArguments.weather.condition = e.target.value\n        }\n        if (argument === 'failure') {\n            newArguments.boom.failure = e.target.checked\n        }\n        this.setState({userArguments: newArguments})\n    }\n    handlePredictionUpdate(type) {\n        predictionRequest(this.state.userArguments, type)\n        alert('预测请求已经提交')\n        this.handleOpen('argumentPicker')\n    }\n    handleTimeUpdate() {\n        store.dispatch({\n            type: 'timeUpdate',\n            time: this.state.selectedTime\n        })\n        mapsStore.dispatch({\n            type: 'refresh'\n        })\n        this.handleOpen('datePicker')\n    }\n    getTripForm() {\n        if (this.state.tripStart === undefined && this.state.tripFinish === undefined) {\n            return <React.Fragment />\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <tr>\n                        <td>进站</td>\n                        <td>{this.state.tripStart}</td>\n                    </tr>\n                    <tr>\n                        <td>出站</td>\n                        <td>{this.state.tripFinish}</td>\n                    </tr>\n                </React.Fragment>\n            )\n        }\n    }\n    startTrip(station) {\n        this.setState({tripStart: station})\n    }\n    finishTrip(station) {\n        this.setState({tripFinish: station})\n    }\n    tripCalculate() {\n        if (this.state.tripStart === this.state.tripFinish) {\n            alert('起点和终点好像在同一站，不计算时间了。')\n            return\n        }\n        const timeline = new Date(this.state.storeState.timeline)\n        const data = {\n            stationin: this.state.tripStart,\n            stationout: this.state.tripFinish,\n            month: timeline.getMonth() + 1,\n            hour: timeline.getHours(),\n            dayprop: (this.state.userArguments.holiday === true) ? 1 : 0\n        }\n        console.log(data)\n        axios.post('/python/dettime', data)\n            .then(response => alert('旅程时间大约为' + Math.abs(response.data.dettime) + '分钟'))\n            .catch(error => console.error(error))\n    }\n    getBeginTripButton(start, finish) {\n        if (start !== undefined && finish !== undefined && start !== finish) {\n            return <Button onClick={() => this.tripCalculate()}>开始预测行程</Button>\n        }\n        else {\n            return <React.Fragment />\n        }\n    }\n\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        const timeArray = [this.state.mapsState.dashboardData.highestTime.replace(/:[0-9]$/, '').match(/[0-9]+$/), this.state.mapsState.dashboardData.highestTime.match(/[0-9]+$/)]\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>站点</td>\n                    <td>{this.state.mapsState.stationSpectating.station}</td>\n                </tr>\n                <tr>\n                    <td>线路</td>\n                    <td>{this.state.mapsState.lineSpectating}</td>\n                </tr>\n                <tr>\n                    <td>断面客流</td>\n                    <td>{this.state.mapsState.stationSpectating.flow}</td>\n                </tr>\n                <tr>\n                    <td>高峰时段</td>\n                    <td>{patchZero(timeArray[0], 2)+':'+patchZero(timeArray[1], 2)}</td>\n                </tr>\n                {this.getTripForm()}\n            </table>\n        )\n    }\n    stationArguments() {\n        if (this.state.stationSpectating === 'No') {\n            return (\n                <FormLabel component={'legend'}>没有选择站点</FormLabel>\n            )\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <FormLabel component={'legend'}>{this.state.mapsState.stationSpectating.station}</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.userArguments.holiday}\n                                    onChange={(event) => this.handleChange(event, 'failure')}\n                                />\n                            }\n                            label={'故障'}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.userArguments.boom.enabled}\n                                        onChange={(event) => this.handleChange(event, 'boomTick')}\n                                    />\n                                }\n                                label={'突发客流'}\n                            />\n                            <FormGroup row>\n                                <Select\n                                    labelId={'客流类型'}\n                                    id={'客流类型'}\n                                    value={this.state.userArguments.boom.type}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(event) => this.handleChange(event, 'boomType')}\n                                    style={{width: '100%'}}\n                                >\n                                    <MenuItem value={0}>进站</MenuItem>\n                                    <MenuItem value={1}>出站</MenuItem>\n                                    <MenuItem value={2}>进站加</MenuItem>\n                                    <MenuItem value={3}>出站加</MenuItem>\n                                </Select>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Slider\n                                    defaultValue={3000}\n                                    valueLabelDisplay=\"auto\"\n                                    step={10}\n                                    marks\n                                    min={10}\n                                    max={110}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(foo, event) => this.handleChange(event, 'boom')}\n                                />\n                            </FormGroup>\n                        </FormGroup>\n\n                    </FormGroup>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"Layer\"} style={{borderRadius: defaultRoundCorner}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={'MapTimestamp'}>\n                    <span>预览时间线</span>\n                    <span className={this.state.storeState.timeNoGo === true ? '' : 'noGo'}>{this.state.storeState.timeNoGo === true ? '数据可用' : '该时间无数据'}</span>\n                    <br />\n                    <span className={'TimestampDate'}>\n                        {moment(this.state.storeState.timeline).format('MM-DD-YYYY HH:MM')}\n                    </span>\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch\n                        switchOptions={[\"无\", \"热力图\"]}\n                        setState={(e) => (this.setState(e))}\n                        state={this.state}\n                    />\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}数据\n                    </Button>\n                    <div style={{fontSize: '11pt', marginTop: '.5em'}}>更改预览时间</div>\n                    <div style={{display: \"flex\", flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <Button onClick={() => this.handleOpen('datePicker')}>\n                            选择\n                        </Button>\n                        <div style={{width: '.5em'}}/>\n                        <Button onClick={() => store.dispatch({type: 'timeUpdate', live: true})}>\n                            实时\n                        </Button>\n                    </div>\n                    <div style={{fontSize: '11pt', marginTop: '.5em'}}>行程时间预测</div>\n                    <div style={{display: \"flex\", flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <Button onClick={() => this.startTrip(this.state.mapsState.stationSpectating.station)}>起点</Button>\n                        <Button onClick={() => this.finishTrip(this.state.mapsState.stationSpectating.station)}>终点</Button>\n                    </div>\n                    {this.getBeginTripButton(this.state.tripStart, this.state.tripFinish)}\n                    <div style={{fontSize: '11pt', marginTop: '.5em'}}>更改预测参数</div>\n                    <Button onClick={() => this.handleOpen('argumentPicker')}>模拟数据变更</Button>\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.selectedTime}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"primary\"}\n                                        onClick={() => this.handleTimeUpdate(this.state.storeState.time)}\n                                    >\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"default\"}\n                                        onClick={() => this.handleOpen('datePicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.argumentPicker}>\n                        <Fade in={this.state.argumentPicker}>\n                            <Card style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        输入参数\n                                    </Typography>\n                                    <div className={'DualPanel'}>\n                                        <FormControl component={'fieldset'}>\n                                            <FormLabel component={'legend'}>该时间操作</FormLabel>\n                                            <FormGroup row>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.holiday}\n                                                            onChange={this.state}\n                                                        />\n                                                    }\n                                                    label={'放假'}\n                                                />\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weatherTick')}\n                                                        />\n                                                    }\n                                                    label={'变更天气'}\n                                                />\n                                                <FormGroup>\n                                                    <FormControl>\n                                                        <InputLabel id={'天气选择标签'}>\n                                                            天气类型\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"天气选择\"\n                                                            id=\"天气选择\"\n                                                            value={this.state.userArguments.weather.condition}\n                                                            disabled={!this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weather')}\n                                                        >\n                                                            <MenuItem value={'阴'}>阴</MenuItem>\n                                                            <MenuItem value={'晴'}>晴</MenuItem>\n                                                            <MenuItem value={'多云'}>多云</MenuItem>\n                                                            <MenuItem value={'小雨'}>小雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>中雨</MenuItem>\n                                                            <MenuItem value={'大雨'}>大雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>暴雨</MenuItem>\n                                                            <MenuItem value={'雷阵雨'}>雷阵雨</MenuItem>\n                                                        </Select>\n                                                    </FormControl>\n\n                                                    <TextField\n                                                        id={'最低温度输入'}\n                                                        label={'输入最低摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureLow')}\n                                                    />\n                                                    <TextField\n                                                        id={'最高温度输入'}\n                                                        label={'输入最高摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureHigh')}\n                                                    />\n                                                </FormGroup>\n                                            </FormGroup>\n                                        </FormControl>\n                                        <br />\n                                        <FormControl component={'fieldset'}>\n                                            {this.stationArguments()}\n                                        </FormControl>\n                                    </div>\n                                </CardContent>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"} onClick={() => this.handlePredictionUpdate('meow')}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('argumentPicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>地图正在加载……</div>}>\n                        <MapFuture\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                            mode={this.state.activated}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class PassengerMapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {activated: store.getState().passengerMode}\n        store.subscribe(() => {\n            this.setState({activated: store.getState().passengerMode})\n        })\n    }\n    handlePassengerModeChange(e) {\n        store.dispatch({\n            type: 'changePassengerMode',\n            mode: e.activated\n        })\n    }\n\n    render() {\n        return (\n            <div className={'Layer'} style={{borderRadius: defaultRoundCorner}}>\n                <div className=\"MapControllers\" style={{left: 5, right: 'inherit'}}>\n                    <MapSwitch\n                        switchOptions={[\"总客流\", \"出站\", \"进站\"]}\n                        setState={(e) => (this.handlePassengerModeChange(e))}\n                        state={this.state}\n                    />\n                </div>\n\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={'MLPlaceholder'}>乘客画像地图正在加载……</div>}>\n                        <PassengerMaps\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport { MapsBlock } from '../Widgets/MapsBlock';\nimport { mapsStore } from \"../Store\";\n\nconst body = document.body\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8),\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size, mapsState} = this.state\n        return (\n            <div className={\"OverviewGrid\"} key={'pages-index'}>\n                <div className={\"div1\"}>\n                    <Widgets.DashboardOne size={size} data={mapsState.highestFlow}>\n                        客流最高站点\n                    </Widgets.DashboardOne>\n                </div>\n                <div className={\"div2\"}>\n                    <Widgets.GreatLegends type={'straight'} name={'全网客流量指数'} value={mapsState.overallFlow}>\n                        重点客流量\n                    </Widgets.GreatLegends>\n                </div>\n                <div className={\"div3\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.highestDist4}\n                        zoom={0.1}\n                        tint={['#6099DB', '#DC73BC', '#7BDB6B', '#DBD455']}\n                    >\n                        客流高峰区域\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div4\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.lineFlow}\n                        keys={['linename', 'flow']}\n                        tint={['#6BDB9C', '#DBC760', '#5685DB', '#D9734C']}\n                    >\n                        客流高峰线路\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div5\"}>\n                    <MapsBlock\n                        port={{\"height\": size * 5, \"width\": size * 4}}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\nimport store, {mapsStore} from \"../Store\";\nimport {fixDictionaryKeys} from \"../Widgets/widgets\";\n\nconst body = document.body\n\nfunction getLineTimelines(timelineData) {\n    let result = {\n        xAxisMeasurements: '日',\n        lines:\n            fixDictionaryKeys(timelineData, ['name', 'values'])\n    }\n    console.log(result)\n    return result\n}\n\nexport class LineHeat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            height: body.scrollHeight / 5,\n            width: body.scrollWidth / 2.2,\n            size: Math.min(body.scrollHeight / 5, body.scrollWidth / 3)\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {height, width, mapsState} = this.state\n        return(\n            <div className={\"LHGrid\"} key={'pages-line-heat'}>\n                <div className=\"div1\">\n                    <Widgets.SimpleBars\n                        port={{height: height, width: width * 2}}\n                        data={mapsState.lineFlow}\n                        keys={['linename', 'flow']}\n                        tint={['#09B8A3', '#23EB62', '#F0438F', '#EBBF23', '#A1C0F5', '#0977B8', '#B98AF5', '#F7DF34', '#F75A43', '#65A1C2']}\n                        label\n                        axis\n                    >\n                        当前全网线路客流\n                    </Widgets.SimpleBars>\n                </div>\n                <div className=\"div2\">\n                    <Widgets.SimpleTrends\n                        port={{height: height, width: width * 2}}\n                        data={{\n                            xAxisMeasurements: 'meow',\n                            lines: [\n                                {\n                                    name: 'wow',\n                                    values: [1, 2, 3]\n                                },\n                                {\n                                    name: 'argh',\n                                    values: [23, 12, 12]\n                                }\n                            ]\n                        }}\n                        tooltip\n                        axis\n                    />\n                </div>\n                <div className=\"div3\"></div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n            </div>\n        )\n    }\n}\n\nexport class HeatTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            storeState: store.getState(),\n            timelineData: mapsStore.getState().dashboardData.sevenFlow\n        }\n        store.subscribe(() => this.setState({storeState: store.getState()}))\n        mapsStore.subscribe(() => this.setState({timelineData: mapsStore.getState().dashboardData.sevenFlow}))\n    }\n    calculateSize = () => {\n        this.setState({\n            width: body.scrollWidth / 2.2,\n            height: body.scrollHeight / 10,\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n        mapsStore.dispatch({type: 'refresh'})\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const { height, width } = this.state\n        const testData = {\n            xAxisMeasurement: '日',\n            lines: [{\n                name: '1号线', values: [1, 2, 3, 4, 5, 6]\n            }]\n        }\n        return(\n            <div className={\"THGrid\"} key={'pages-timeline-heat'}>\n                <div className=\"div1\">\n                    <Widgets.SimpleTrends\n                        port={{'height':  height, 'width': width * 2}}\n                        data={testData}\n                        tooltip\n                        axis\n                    >\n                        近日客流量时间分布\n                    </Widgets.SimpleTrends>\n                </div>\n                <div className=\"div2\">\n                    <Widgets.Trends\n                        port={{'height': height, 'width': width}}\n                    />\n                </div>\n                <div className=\"div3\">\n                    <Widgets.AreaChartTrends\n                        port={{'height': height, 'width': width}}\n                    />\n                </div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n                <div className=\"div7\"></div>\n                <div className=\"div8\"></div>\n                <div className=\"div9\"></div>\n                <div className=\"div10\"></div>\n                <div className=\"div11\"></div>\n                <div className=\"div12\"></div>\n                <div className=\"div13\"></div>\n                <div className=\"div14\"></div>\n                <div className=\"div15\"></div>\n                <div className=\"div16\"></div>\n                <div className=\"div17\"></div>\n                <div className=\"div18\"></div>\n                <div className=\"div19\"></div>\n                <div className=\"div20\"></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport {PassengerMapsBlock} from \"../Widgets/MapsBlock\";\nimport store, {mapsStore, arrayCoherence} from \"../Store\";\n\nconst body = document.body\nconst passengerArray=['16岁以下', '16~25', '25~40', '40~60', '60岁以上', '16岁以下', '16~25', '25~40', '40~60', '60岁以上', '16岁以下', '16~25', '25~40', '40~60', '60岁以上']\nconst tintArray=[['#09B8A3', '#23EB62', '#A1C0F5', '#0977B8', '#658EA4'], ['#F5E3D0', '#F5DE2F', '#F58CB2', '#7FDAFA', '#7A5DF9']]\n\nclass PassengerAnalytics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stationInward: mapsStore.getState().ageMapSpectating.inward,\n            stationOutward: mapsStore.getState().ageMapSpectating.outward,\n            activated: store.getState().passengerMode,\n        }\n        mapsStore.subscribe(() => {\n            this.setState({\n                stationInward: mapsStore.getState().ageMapSpectating.inward,\n                stationOutward: mapsStore.getState().ageMapSpectating.outward,\n            })\n            this.forceUpdate()\n        })\n        store.subscribe(() => {\n            this.setState({activated: store.getState().passengerMode})\n        })\n    }\n\n    calculateSize = () => {\n        this.setState({\n            height: body.scrollHeight / 6,\n            width: body.scrollWidth / 6,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 10)\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n        mapsStore.dispatch({type: 'refresh'})\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    getSlice() {\n        if (this.state.activated === '进站') {\n            return [0, 4]\n        }\n        if (this.state.activated === '出站') {\n            return [5, 9]\n        }\n        if (this.state.activated === '总客流') {\n            return [10, 14]\n        }\n    }\n    getSum(type, data0, data1) {\n        try {\n            if (type === 'inOut') {\n                let inward = 0\n                let outward = 0\n                data0.slice(10, 14).map(function (value) {\n                    inward += value\n                    return true\n                })\n                data1.slice(10, 14).map(function (value) {\n                    outward += value\n                    return true\n                })\n                return [\n                    {key: '进站', value: inward},\n                    {key: '出站', value: outward}\n                ]\n            }\n            if (type === 'inOutBar') {\n                let inward = 0\n                let outward = 0\n                data0.slice(10, 14).map(function (value) {\n                    inward += value\n                    return true\n                })\n                data1.slice(10, 14).map(function (value) {\n                    outward += value\n                    return true\n                })\n                //eslint-ignore-next-line\n                return {'进站': inward, '出站': outward}\n            }\n            if (type === 'gender') {\n                let girls = 0\n                let boys = 0\n                data0.slice(0, 4).map(function (value) {\n                    girls += value\n                    return true\n                })\n                data1.slice(0, 4).map(function (value) {\n                    girls += value\n                    return true\n                })\n                data0.slice(5, 10).map(function (value) {\n                    boys += value\n                    return true\n                })\n                data1.slice(5, 10).map(function (value) {\n                    boys += value\n                    return true\n                })\n                return [\n                    {key: '女性', value: girls},\n                    {key: '男性', value: boys}\n                ]\n            }\n        }\n        catch (e) {}\n        return ({key: '加载中', value: 0})\n    }\n\n    render() {\n        const {height, width, size} = this.state\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                        <PassengerMapsBlock\n                            port={{height: height * 4, width: width * 2}}\n                        />\n                    </div>\n                    <div className=\"div2\">\n                        <Widgets.SimplePieCharts\n                            size={size * 2}\n                            duet\n                            tint={tintArray}\n                            data={arrayCoherence(passengerArray, this.state.stationInward, this.getSlice())}\n                            data0={this.getSum('inOut', this.state.stationInward, this.state.stationOutward)}\n                        >\n                            所选站点乘客结构\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div3\">\n                        <Widgets.SimplePieCharts\n                            size={size * 2}\n                            tint={tintArray[0]}\n                            data={arrayCoherence(passengerArray, [88, 99, 77, 66, 55, 44, 33, 22, 11, 44, 55, 66, 77, 88, 99, 100], [10, 14])}\n                        >\n                            全网乘客结构\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div4\">\n                        <Widgets.SimplePieCharts\n                            size={size}\n                            data={this.getSum('gender', this.state.stationInward, this.state.stationOutward)}\n                            tint={tintArray[1]}\n                        >\n                            当前站点客流性别比例\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div5\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": width}}\n                            tint={[\"#FAA45A\", \"#FA5A9F\"]}\n                            data={this.getSum('inOutBar', this.state.stationInward, this.state.stationOutward)}\n                            label\n                        >\n                            当前站点进出站客流\n                        </Widgets.SimpleBars>\n                    </div>\n                    <div className=\"div6\">\n                        <Widgets.SimpleBars\n                            port={{\"height\": size, \"width\": size * 2}}\n                            tint={[\"#5CD0FF\", \"#98FA8A\"]}\n                            data={{'女性':55, '男性':50}}\n                        >\n                            全网乘客性别比例\n                        </Widgets.SimpleBars>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from \"react\";\nimport \"./style.css\"\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (this.props.type !== undefined) ? this.props.type : \"text\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={'InputFunction'}>\n                <label>\n                    {this.props.children}\n                </label>\n                <input className={'coilsInput'} type={this.state.type} onChange={(event => this.props.handler(event))}/>\n            </div>\n        )\n    }\n}\n\nexport default Input","import React from \"react\";\nimport { Input, Button } from '../Controllers';\nimport { FormGroup, FormLabel, Slider, Button as MaterialButton } from '@material-ui/core'\nimport axios from \"axios\";\nimport './style.css';\nimport store, { setExpiration, clearStorage } from \"../Store\";\nimport { ThemeSwitch } from \"../Controllers/Switch\";\n\nfunction loginRequest(username, password) {\n    try {\n        axios.post('/api/log', {\n            'username': username,\n            'password': password\n        }).then(function (response) {\n            console.log(response.data)\n            alert(response.data.msg)\n            if (response.data.code === 200) {\n                store.dispatch({\n                    type: 'login',\n                    loginState: true,\n                    session: response.data\n                })\n            }\n        })\n    }\n    catch (error) {\n        alert('网络连接出现了一些问题')\n        console.error(error);\n    }\n}\n\nclass CertForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: 1,\n        }\n    }\n    CertChange(type) {\n        let feedbackInfo\n        if (type === 'logout') {\n            feedbackInfo = '注销凭据完成'\n            const action = {\n                type: 'certMan',\n                logout: true\n            }\n            store.dispatch(action)\n        }\n        if (type === 'cache') {\n            feedbackInfo = '保存凭据' + this.state.duration +'天'\n            setExpiration(this.state.duration)\n        }\n        alert(feedbackInfo)\n    }\n    handleSlider = (event, newValue) => {\n        this.setState({duration: newValue})\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <ThemeSwitch/>\n                <div className={'Description'}>\n                    可以按 [K] 快速切换主题\n                </div>\n                <form\n                    style={{marginTop: '2em'}}\n                    onSubmit={() => this.CertChange('cache', this.state.duration)}\n                >\n                    <FormGroup>\n                        <FormLabel style={{color: 'var(--ThemeColor)'}} component={'legend'}>保存凭据时长（天）</FormLabel>\n                        <div style={{margin: '0 auto', width: 'calc(100% - 20px)'}}>\n                            <Slider\n                                defaultValue={1}\n                                valueLabelDisplay=\"auto\"\n                                step={5}\n                                marks\n                                min={1}\n                                max={31}\n                                onChange={this.handleSlider}\n                            />\n                        </div>\n                    </FormGroup>\n                    <div style={{display: \"flex\", flexDirection: 'row'}}>\n                        <Button type={'submit'}>\n                            保存凭据\n                        </Button>\n                        <div style={{width: '.5em'}}/>\n                        <Button onClick={() => this.CertChange('logout')}>\n                            注销\n                        </Button>\n                    </div>\n                    <br />\n                    <MaterialButton\n                        size={'small'}\n                        style={{color: '#F66'}}\n                        onClick={() => clearStorage()}\n                    >\n                        清除本地数据并注销\n                    </MaterialButton>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState(),\n            username: '',\n            password: ''\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n    handleLogin(event) {\n        event.preventDefault()\n        loginRequest(this.state.username, this.state.password)\n    }\n    handleForm(event, type) {\n        if (type === 'username') {\n            this.setState({username: event.target.value})\n        }\n        if (type === 'password') {\n            this.setState({password: event.target.value})\n        }\n    }\n\n    render() {\n        let FormSheet, hello\n        const LoginForm = [\n            <form onSubmit={(e) => this.handleLogin(e)}>\n                <div className={\"AuthForm\"}>\n                    <div>\n                        <Input handler={(e) => {this.handleForm(e, 'username')}}>\n                            用户名称\n                        </Input>\n                        <Input type={\"password\"} handler={(e) => {this.handleForm(e, 'password')}}>\n                            密码\n                        </Input>\n                    </div>\n                    <div className={\"Button\"}>\n                        <Button type={\"submit\"}>\n                            好\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        ]\n\n        if (this.state.store.loginState) {\n            FormSheet = [<CertForm/>]\n            hello = \"认证管理\"\n        }\n        else {\n            FormSheet = LoginForm\n            hello = \"认证\"\n        }\n\n        return (\n            <React.Fragment>\n                <div id={'Amaze'}/>\n                <div id={'ActualCard'}>\n                    <h1>\n                        {hello}\n                    </h1>\n                </div>\n                <div id={'Maze'}/>\n                    <section className={\"AuthCard\"}>\n                        {FormSheet}\n                    </section>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport Overview from \"./Overview\";\nimport { LineHeat, HeatTimeline } from \"./LineHeat\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport Login from \"./Authenticate\";\nimport './index.css';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, {exposedMethods, mapsStore} from \"./Store\";\n\nconst root = document.documentElement\n\nfunction setTheme() {\n    if (store.getState().theme === 'light') {\n        root.style.setProperty('--themeTable', '#E3E3E3')\n        root.style.setProperty('--themeBorder', 'none')\n        root.style.setProperty('--themeColor', '#443')\n        root.style.setProperty('--themeHover', '#220')\n        root.style.setProperty('--themeActive', '#220')\n        root.style.setProperty('--themeLayer', 'rgba(250, 250, 250, 0.8)')\n        root.style.setProperty('--themeFilter', 'screen')\n        root.style.setProperty('--themeDarkFilter', 'brightness(1.17)')\n        root.style.setProperty('--themePure0', 'rgba(255, 255, 255, 1)')\n        root.style.setProperty('--themePure1', 'rgba(255, 255, 255, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(80, 80, 80, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#FFF')\n        root.style.setProperty('--controlBlur', '#553')\n        root.style.setProperty('--dockBorderSize', '1px')\n        root.style.setProperty('--actualFilter', 'rgba(255, 255, 255, .8)')\n    }\n    if (store.getState().theme === 'dark') {\n        root.style.setProperty('--themeTable', '#171717')\n        root.style.setProperty('--themeBorder', '0 0 1.5px #EEE')\n        root.style.setProperty('--themeColor', '#EEE')\n        root.style.setProperty('--themeHover', '#AAB')\n        root.style.setProperty('--themeActive', '#FFF')\n        root.style.setProperty('--themeLayer', 'rgba(53, 53, 53, 0.8)')\n        root.style.setProperty('--themeFilter', 'luminosity')\n        root.style.setProperty('--themeDarkFilter', 'brightness(.25)')\n        root.style.setProperty('--themePure0', 'rgba(64, 64, 64, 1)')\n        root.style.setProperty('--themePure1', 'rgba(0, 0, 0, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(255, 255, 255, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#535353')\n        root.style.setProperty('--controlBlur', '#BBC')\n        root.style.setProperty('--dockBorderSize', '2px')\n        root.style.setProperty('--actualFilter', 'rgba(0, 0, 25, .15)')\n\n    }\n}\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {storeState: store.getState()}\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){this.setState({storeState: store.getState()})}\n    componentDidMount() {\n        mapsStore.dispatch({type: 'refresh'})\n    }\n\n    render() {\n        setTheme()\n        let pagesList = []\n        if (this.state.storeState.loginState === true) {\n            pagesList.push(\n                <Switch>\n                    <Route exact path={\"./\"}>\n                        <Redirect to={\"Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"} component={AnimationApp}/>\n                </Switch>\n            )\n        }\n        else {\n            pagesList.push(\n                <Switch>\n                    <Route path={\"*\"}>\n                        <Login />\n                    </Route>\n                </Switch>\n            )\n        }\n        return (\n            <PersistGate store={store} persistor={exposedMethods}>\n                <Router>\n                    {pagesList}\n                </Router>\n            </PersistGate>\n        )\n    }\n}\n\nclass AnimationApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            handling: 0,\n            redirect: undefined\n        }\n    }\n    wary(e) {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        this.setState({redirect: e})\n        this.setState({redirect: undefined})\n    }\n    themeSwitcherWary() {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        store.dispatch({type: 'switchTheme'})\n    }\n\n    componentDidMount() {\n        let done = () => {\n            this.setState({handling: 0})\n        }\n        store.subscribe(() => {\n            setTimeout(done, 500, done)\n        })\n        this.props.history.listen(location => {\n            mapsStore.dispatch({type: 'refresh'})\n            if (this.props.location.pathname !== location.pathname) {\n                setTimeout(done, 500, done)\n            }\n        })\n    }\n    render() {\n        const redirect = {\n            state: this.state.redirect,\n            handling: this.state.handling,\n            set: (e) => this.wary(e),\n            done: () => this.done()\n        }\n        const themeSwitchKey = () => this.themeSwitcherWary()\n\n        function handleShortcutKey(key) {\n            const destination = ['Overview', 'LineHeat', 'HeatTimeline', 'PassengerAnalytics', 'Authenticate']\n            redirect.set(<Redirect to={destination[key - 1]}/>)\n        }\n        // keyboard shortcuts\n        window.addEventListener(\"keyup\", function (e) {\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (e.key !== undefined) {\n                if (e.key === '1') {handleShortcutKey(1)}\n                if (e.key === '2') {handleShortcutKey(2)}\n                if (e.key === '3') {handleShortcutKey(3)}\n                if (e.key === '4') {handleShortcutKey(4)}\n                if (e.key === 'L' || e.key === 'l') {handleShortcutKey(5)}\n                if (e.key === 'K' || e.key === 'k') {themeSwitchKey()}\n            }\n            else if (e.code !== undefined) {\n                if (e.code === 'Digit1') {handleShortcutKey(1)}\n                if (e.code === 'Digit2') {handleShortcutKey(2)}\n                if (e.code === 'Digit3') {handleShortcutKey(3)}\n                if (e.code === 'Digit4') {handleShortcutKey(4)}\n                if (e.code === 'KeyL') {handleShortcutKey(5)}\n                if (e.code === 'KeyK') {themeSwitchKey()}\n            }\n        })\n\n        return (\n            <React.Fragment>\n                {this.state.redirect}\n                <div className=\"Dock\">\n                    <NavLink key={\"Overview\"} to={\"Overview\"} activeClassName={\"active\"} exact>\n                        <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                    </NavLink>\n                    <NavLink key={\"LineHeat\"} to={\"LineHeat\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>线路分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"HeatTimeline\"} to={\"HeatTimeline\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>时段分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"PassengerAnalytics\"} to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>用户画像<span>3</span></button>\n                    </NavLink>\n                    <NavLink key={\"Authenticate\"} to={\"Authenticate\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>认证与设置<span>L</span></button>\n                    </NavLink>\n                </div>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={this.props.location}\n                        classNames={\"fade\"}\n                        timeout={250}\n                    >\n                        <Switch>\n                            <Route path={`*/Overview`} component={Overview}/>\n                            <Route path={`*/LineHeat`} component={LineHeat}/>\n                            <Route path={`*/HeatTimeline`} component={HeatTimeline}/>\n                            <Route path={`*/PassengerAnalytics`} component={PassengerAnalytics}/>\n                            <Route path={`*/Authenticate`} component={Login}/>\n                            <Route path={`*`}>\n                                <Redirect to={\"Overview\"}/>\n                            </Route>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const nowPlacebo = 'May 29, 2020 22:30:00'\nconst defaultState = {\n    active: \"dashboard\",\n    theme: 'light',\n    loginState: false,\n    sessionData: '',\n    now: new Date(nowPlacebo),\n    timeline: new Date(nowPlacebo),\n    passengerMode: '总客流',\n    timePeriod: '实时',\n    timeNoGo: '数据加载中',\n    flowSpectating: -1,\n}\nconst Store = (state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'login' && action.loginState) {\n        newState.loginState = true\n        newState.sessionData = action.session\n        return newState\n    }\n    if (action.type === 'certMan') {\n        if (action.logout) {\n            return defaultState\n        }\n    }\n    if (action.type === 'switchTheme') {\n        newState.theme = 'light'\n        if (state.theme === 'light') {\n            newState.theme = 'dark'\n        }\n        return newState\n    }\n    if (action.type === 'changePassengerMode') {\n        newState.passengerMode = action.mode\n        return newState\n    }\n    if (action.type === 'timeUpdate') {\n        if (action.live === true) {\n            newState.timePeriod = '实时'\n            newState.timeline = nowPlacebo\n        }\n        else {\n            if (action.time > state.now) {\n                newState.timePeriod = '预测'\n            }\n            else if (action.time < state.now) {\n                newState.timePeriod = '历史'\n            }\n            newState.timeline = action.time\n        }\n        return newState\n    }\n    if (action.type === 'noGo') {\n        newState.timeNoGo = action.value === '成功'\n        return newState\n    }\n    if (action.type === 'clear') {\n        return defaultState\n    }\n    return state\n}\nexport default Store","import store, {refreshDashboard, searchObject} from \"./index\";\n\nconst defaultValue = {\n    initiated: 0,\n    pathData: {},\n    heatData: {},\n    dashboardData: {},\n    lineSpectating: 'No',\n    stationSpectating: {station: '没有选中站点', flow: 0},\n    ageMapSpectating: {station: '没有选中站点', inward: undefined, outward: undefined}\n}\n\nconst Store = (state = defaultValue, action) => {\n    let newMapState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'refresh') {\n        if (!newMapState.initiated) {\n            newMapState.dashboardData = require('../stationaryPlaceholder/dashboard.json')\n            newMapState.pathData = require('../stationaryPlaceholder/paths.json')\n        }\n        refreshDashboard(store.getState().timeline)\n        return newMapState\n    }\n    if (action.type === 'loadDashboard') {\n        newMapState.dashboardData = action.data\n        return newMapState\n    }\n    if (action.type === 'hoverUpdate') {\n        newMapState.lineSpectating = action.line\n        if (action.hoverType === 'station' || action.hoverType === 'path') {\n            newMapState.stationSpectating[action.hoverType] = action.hoverID\n            newMapState.stationSpectating.flow = action.flow\n        }\n        if (action.hoverType === 'age') {\n            newMapState.ageMapSpectating.station = action.hoverID\n            newMapState.ageMapSpectating.inward = searchObject(newMapState.dashboardData.ageMap, 'station', action.hoverID, 'in')\n            newMapState.ageMapSpectating.outward = searchObject(newMapState.dashboardData.ageMap, 'station', action.hoverID, 'out')\n        }\n        console.log(newMapState)\n        return newMapState\n    }\n    if (action.type === 'clear') {\n        return defaultValue\n    }\n    return state\n}\nexport default Store","import { createStore } from \"redux\";\nimport methods from './methods';\nimport mapsUpdater from './mapsUpdater';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { CookieStorage } from 'redux-persist-cookie-storage';\nimport storage from 'redux-persist/lib/storage';\nimport Cookies from 'cookies-js';\nimport axios from \"axios\";\n\nlet expires = 22 * 86400\n\nexport function setExpiration(schoolDays)\n{\n    if (schoolDays === undefined) {\n        schoolDays = 22\n    }\n    expires = schoolDays * 86400;\n}\n\n//组件数据和会话\nconst persistConfig = {\n    key: 'root',\n    storage: new CookieStorage(Cookies, {expiration:\n        {default: expires}\n    })\n}\nconst persistedMethods = persistReducer(persistConfig, methods)\nlet store = createStore(persistedMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport let exposedMethods = persistStore(store)\nexport default store\n\n//地图存储\nconst mapsPersistConfig = {\n    key: 'maps',\n    storage: storage\n}\nconst mapsMethods = persistReducer(mapsPersistConfig, mapsUpdater)\nexport let mapsStore = createStore(mapsMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport let mapsExposedMethods = persistStore(mapsStore)\n\nexport function searchObject(data, searchKey, value, requiredKey) {\n    let result\n    try {\n        data.forEach(function (theObject) {\n            if (theObject[searchKey] === value) {\n                result = theObject[requiredKey]\n            }\n        })\n    }\n    catch(error)\n    {\n        console.error(error)\n        return result\n    }\n\n    return result\n}\nexport function refreshDashboard(timeline) {\n    if (timeline === undefined) {\n        console.log('undefined date')\n        return\n    }\n    const date = new Date(timeline)\n    const data = {\n        year: date.getFullYear().toString(),\n        month: (date.getMonth() + 1).toString(),\n        day: date.getDate().toString(),\n        hour: date.getHours().toString(),\n        minute: date.getMinutes().toString()\n    }\n    console.log('Time update request fired')\n    axios.post('/api/time/json', data)\n        .then(response => {\n            console.log(response.data.result.msg)\n            mapsStore.dispatch({\n                type: 'loadDashboard',\n                data: response.data\n            })\n            store.dispatch({\n                type: 'noGo',\n                value: response.data.result.msg\n            })\n        })\n        .catch(error => {\n            console.error(error)\n        })\n}\nexport function moodyTimeDifference(givenTime) {\n    const moodyHour = givenTime.getHours() + (givenTime.getMinutes() > 30 ? 1 : 0)\n    const moodyMin = givenTime.getMinutes() > 15 && givenTime.getMinutes() <= 45 ? 30 : 0\n    return givenTime.getMonth()+1 + ':' + givenTime.getDate() + ':' + moodyHour + ':' + moodyMin\n}\nexport function clearStorage() {\n    mapsStore.dispatch({type: 'clear'})\n    store.dispatch({type: 'clear'})\n}\nexport function arrayCoherence(keys, values, slice) {\n    let newArray = []\n    try {\n        values.map(function (value, index) {\n            if (slice === undefined) {\n                let newDictionary = {\n                    key: keys[index],\n                    value: value\n                }\n                newArray.push(newDictionary)\n            }\n            else if (index >= slice[0] && index <= slice[1]) {\n                let newDictionary = {\n                    key: keys[index],\n                    value: value\n                }\n                newArray.push(newDictionary)\n            }\n            return true\n        })\n    }\n    catch (e) {\n        newArray = [{key: '数据加载中', value: 100}]\n    }\n\n    return newArray\n}\nexport function patchZero(str, target){\n    str ='00000'+str;\n    return str.substring(str.length-target,str.length);\n}"],"sourceRoot":""}