{"version":3,"sources":["Store/methods.js","Store/mapsUpdater.js","Store/index.js","Controllers/Switch.js","Widgets/widgets.js","Controllers/Button.js","Widgets/MapsBlock.js","Overview/index.js","LineHeat/index.js","PassengerAnalytics/index.js","Controllers/Input.js","Authenticate/index.js","App.js","reportWebVitals.js","index.js"],"names":["nowPlacebo","defaultState","active","theme","loginState","sessionData","now","Date","timeline","timePeriod","timeNoGo","flowSpectating","Store","state","action","newState","JSON","parse","stringify","type","session","logout","live","time","value","defaultValue","initiated","stationData","pathData","heatData","dashboardData","lineSpectating","stationSpectating","station","flow","newMapState","require","refreshDashboard","store","getState","undefined","data","line","hoverType","hoverID","console","log","expires","setExpiration","schoolDays","persistConfig","key","storage","CookieStorage","Cookies","expiration","default","persistedMethods","persistReducer","methods","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","exposedMethods","persistStore","mapsPersistConfig","mapsMethods","mapsUpdater","mapsStore","mapsExposedMethods","date","year","getFullYear","toString","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","axios","post","then","response","result","msg","dispatch","catch","error","clearStorage","MapSwitch","props","switchOptions","this","setState","allOptions","optionsController","index","forEach","perOption","acClass","activated","push","id","onClick","className","enumOptions","React","Component","ThemeSwitch","themeNames","Fragment","style","position","height","transformToCentre","left","top","transform","defaultRoundCorner","makeAvailable","thing","fixDictionaryKeys","theKeys","zoom","emptyData","zoomSet","theKeysSet","map","e","linesConstructor","dataArray","tintArray","tooltip","lines","tooltipElement","converted","drawn","lineIndex","values","y","x","partPoint","name","Object","assign","dot","r","dataKey","stroke","strokeWidth","width","barConstructor","label","keys","barContent","labelSet","fill","isAnimationActive","Dashboard","nameLabel","size","innerRadius","tint","frame","borderRadius","children","slice","domain","angleAxisId","tick","minAngle","cornerRadius","background","verticalAlign","align","iconSize","wrapperStyle","right","bottom","DashboardOne","formatter","greatLegend","Trends","uv","pv","amt","port","SimpleBars","render","propTintArray","dataToConstruct","newDictionary","makeDictionaryPairs","AreaChartTrends","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","fillOpacity","GreatLegends","inside","getFromData","makeEmpty","SimplePieCharts","duetFrame","display","flexDirection","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","outerRadius","percent","radius","cos","sin","textAnchor","dominantBaseline","toFixed","duet","nameKey","labelLine","entry","length","MNButtonStyle","backgroundColor","color","Button","disabled","variant","MapFuture","lazy","PassengerMaps","MapsBlock","datePicker","argumentPicker","selectedTime","flowStats","storeState","mapsState","userArguments","holiday","weather","enabled","condition","temperature","low","high","boom","failure","subscribe","modal","argument","newArguments","target","checked","dayprop","temperatures","predictionRequest","alert","handleOpen","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","onChange","event","handleChange","row","Select","labelId","MenuItem","Slider","valueLabelDisplay","step","marks","min","max","foo","opacity","userSelect","cursor","getStats","moment","format","justifyContent","triggerStats","Modal","open","Fade","in","Card","CardContent","Typography","gutterBottom","margin","utils","MomentUtils","handleTime","CardActions","handleTimeUpdate","FormControl","InputLabel","TextField","marginTop","InputLabelProps","shrink","stationArguments","handlePredictionUpdate","fallback","mode","PassengerMapsBlock","body","document","Index","calculateSize","scrollHeight","scrollWidth","addEventListener","removeEventListener","highestFlow","overallFlow","highestDist4","lineFlow","LineHeat","Suspense","HeatTimeline","PassengerAnalytics","newArray","ArrayCoherence","data0","Input","handler","CertForm","handleSlider","newValue","duration","feedbackInfo","onSubmit","CertChange","Login","username","password","storeChange","bind","preventDefault","code","loginRequest","FormSheet","hello","LoginForm","handleLogin","handleForm","root","documentElement","App","setProperty","pagesList","exact","path","to","AnimationApp","persistor","handling","redirect","done","setTimeout","history","listen","location","pathname","wary","themeSwitchKey","themeSwitcherWary","handleShortcutKey","defaultPrevented","activeClassName","TransitionGroup","CSSTransition","classNames","timeout","Overview","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.83fe0748.chunk.js","sourcesContent":["const nowPlacebo = 'May 29, 2020 22:30:00'\nconst defaultState = {\n    active: \"dashboard\",\n    theme: 'light',\n    loginState: false,\n    sessionData: '',\n    now: new Date(nowPlacebo),\n    timeline: new Date(nowPlacebo),\n    timePeriod: '实时',\n    timeNoGo: '数据加载中',\n    flowSpectating: -1,\n}\nconst Store = (state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'login' && action.loginState) {\n        newState.loginState = true\n        newState.sessionData = action.session\n        return newState\n    }\n    if (action.type === 'certMan') {\n        if (action.logout) {\n            return defaultState\n        }\n    }\n    if (action.type === 'switchTheme') {\n        newState.theme = 'light'\n        if (state.theme === 'light') {\n            newState.theme = 'dark'\n        }\n        return newState\n    }\n    if (action.type === 'timeUpdate') {\n        if (action.live === true) {\n            newState.timePeriod = '实时'\n            newState.timeline = nowPlacebo\n        }\n        else {\n            if (action.time > state.now) {\n                newState.timePeriod = '预测'\n            }\n            else if (action.time < state.now) {\n                newState.timePeriod = '历史'\n            }\n            newState.timeline = action.time\n        }\n        return newState\n    }\n    if (action.type === 'noGo') {\n        newState.timeNoGo = action.value === '成功'\n        return newState\n    }\n    if (action.type === 'clear') {\n        return defaultState\n    }\n    return state\n}\nexport default Store","import store, {refreshDashboard} from \"./index\";\n\nconst defaultValue = {\n    initiated: 0,\n    stationData: {},\n    pathData: {},\n    heatData: {},\n    dashboardData: {},\n    lineSpectating: 'No',\n    stationSpectating: {station: '没有选中站点', flow: 0},\n}\n\nconst Store = (state = defaultValue, action) => {\n    let newMapState = JSON.parse(JSON.stringify(state))\n    if (action.type === 'refresh') {\n        if (!newMapState.initiated) {\n            newMapState.dashboardData = require('../stationaryPlaceholder/dashboard.json')\n            newMapState.stationData = require('../stationaryPlaceholder/stations.json')\n            newMapState.pathData = require('../stationaryPlaceholder/paths.json')\n        }\n        refreshDashboard(store.getState().timeline)\n        return newMapState\n    }\n    if (action.type === 'push') {\n        if (action.stationData !== undefined) {newMapState.stationData = action.stationData}\n        if (action.pathData !== undefined) {newMapState.pathData = action.pathData}\n        if (action.heatData !== undefined) {newMapState.heatData = action.heatData}\n        return newMapState\n    }\n    if (action.type === 'loadDashboard') {\n        newMapState.dashboardData = action.data\n        return newMapState\n    }\n    if (action.type === 'hoverUpdate') {\n        newMapState.lineSpectating = action.line\n        if (action.hoverType === 'station' || action.hoverType === 'path') {\n            newMapState.stationSpectating[action.hoverType] = action.hoverID\n            newMapState.stationSpectating.flow = action.flow\n            console.log(newMapState.stationSpectating.flow)\n        }\n\n        return newMapState\n    }\n    if (action.type === 'clear') {\n        return defaultValue\n    }\n    return state\n}\nexport default Store","import { createStore } from \"redux\";\nimport methods from './methods';\nimport mapsUpdater from './mapsUpdater';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { CookieStorage } from 'redux-persist-cookie-storage';\nimport storage from 'redux-persist/lib/storage';\nimport Cookies from 'cookies-js';\nimport axios from \"axios\";\n\nlet expires = 22 * 86400\n\nexport function setExpiration(schoolDays)\n{\n    if (schoolDays === undefined) {\n        schoolDays = 22\n    }\n    expires = schoolDays * 86400;\n}\n\n//组件数据和会话\nconst persistConfig = {\n    key: 'root',\n    storage: new CookieStorage(Cookies, {expiration:\n        {default: expires}\n    })\n}\nconst persistedMethods = persistReducer(persistConfig, methods)\nlet store = createStore(persistedMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport let exposedMethods = persistStore(store)\nexport default store\n\n//地图存储\nconst mapsPersistConfig = {\n    key: 'maps',\n    storage: storage\n}\nconst mapsMethods = persistReducer(mapsPersistConfig, mapsUpdater)\nexport let mapsStore = createStore(mapsMethods, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport let mapsExposedMethods = persistStore(mapsStore)\n\nexport function searchObject(data, searchKey, value, requiredKey) {\n    let result\n    try {\n        data.forEach(function (theObject) {\n            if (theObject[searchKey] === value) {\n                result = theObject[requiredKey]\n            }\n        })\n    }\n    catch(error)\n    {\n        console.error(error)\n        return result\n    }\n\n    return result\n}\nexport function refreshDashboard(timeline) {\n    if (timeline === undefined) {\n        console.log('undefined date')\n        return\n    }\n    const date = new Date(timeline)\n    const data = {\n        year: date.getFullYear().toString(),\n        month: (date.getMonth() + 1).toString(),\n        day: date.getDate().toString(),\n        hour: date.getHours().toString(),\n        minute: date.getMinutes().toString()\n    }\n    console.log('Time update request fired')\n    axios.post('/api/time/json', data)\n        .then(response => {\n            console.log(response.data.result.msg)\n            mapsStore.dispatch({\n                type: 'loadDashboard',\n                data: response.data\n            })\n            store.dispatch({\n                type: 'noGo',\n                value: response.data.result.msg\n            })\n        })\n        .catch(error => {\n            console.error(error)\n        })\n}\nexport function moodyTimeDifference(givenTime) {\n    const moodyHour = givenTime.getHours() + (givenTime.getMinutes() > 30 ? 1 : 0)\n    const moodyMin = givenTime.getMinutes() > 15 && givenTime.getMinutes() <= 45 ? 30 : 0\n    return givenTime.getMonth()+1 + ':' + givenTime.getDate() + ':' + moodyHour + ':' + moodyMin\n}\nexport function clearStorage() {\n    mapsStore.dispatch({type: 'clear'})\n    store.dispatch({type: 'clear'})\n}","import React from \"react\";\nimport store from \"../Store\";\nimport \"./style.css\";\n\nclass MapSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"allOptions\": this.props.switchOptions,\n        }\n    }\n    componentDidMount() {\n        this.setState({\"activated\": this.state.allOptions[0]})\n    }\n    enumOptions(props, setState) {\n        let optionsController = []\n        let index = 0\n        this.state.allOptions.forEach(\n            function (perOption) {\n                let acClass = \"SwitchTick\"\n                if (props.activated === perOption) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => (\n                            setState({\"activated\": perOption})\n                        )}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n\n    render() {\n        return(\n            <div\n                className={\"SwitchBase\"}\n            >\n                {this.enumOptions(this.props.state, this.props.setState)}\n            </div>\n        )\n    }\n}\n\nexport class ThemeSwitch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState()\n        }\n    }\n    themeNames = ['深色', '浅色']\n    enumOptions() {\n        let optionsController = []\n        let index = 0\n        this.themeNames.forEach(\n            function (perOption) {\n                const {theme} = store.getState()\n                const themeOptions = ['dark', 'light']\n                let acClass = \"SwitchTick\"\n                if (theme === themeOptions[index]) {\n                    acClass += \" activated\"\n                }\n                optionsController.push(\n                    <button\n                        id={perOption}\n                        key={index}\n                        onClick={() => {\n                            store.dispatch({\n                                type: 'switchTheme'\n                            })\n                        }}\n                        className={acClass}\n                    >\n                        {perOption}\n                    </button>\n                )\n                index++;\n            }\n        )\n        return optionsController\n    }\n    dispatchTheme(value) {\n        store.dispatch({\n            type: 'switchTheme',\n            theme: value\n        })\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <div\n                    id={'controller-theme-switch'}\n                    className={\"SwitchBase\"}\n                    style={{position: 'absolute'}}\n                >\n                    {this.enumOptions()}\n                </div>\n                <div style={{height: 'calc(11pt + 30px)'}}/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default MapSwitch;","import React from \"react\";\nimport './style.css';\nimport {\n    PolarAngleAxis, XAxis, YAxis,\n    AreaChart, Area,\n    RadialBarChart, RadialBar,\n    LineChart, Line,\n    PieChart, Pie,\n    BarChart, Bar,\n    Legend, Tooltip,\n    Cell, CartesianGrid,\n    LabelList\n} from \"recharts\";\nimport '../Controllers/Switch';\n\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\nconst defaultRoundCorner = 20;\n\nfunction setTintArray(propTintArray) {\n    if (propTintArray !== undefined) {\n        return propTintArray\n    } else return [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"]\n}\nexport function makeAvailable(thing) {\n    if (thing !== undefined) {return thing}\n    return (<React.Fragment/>)\n}\nfunction fixDictionaryKeys(data, theKeys, zoom) {\n    let emptyData = [{}, {}, {}, {}]\n    const zoomSet = zoom === undefined ? 1 : zoom\n    const theKeysSet = theKeys === undefined ? ['name', 'value'] : theKeys\n    try {\n        data.map(function (value, index) {\n            emptyData[index] = {'name': value[theKeysSet[0]], 'value': value[theKeysSet[1]] * zoomSet}\n            return emptyData\n        }, emptyData, theKeysSet, zoomSet)\n    }\n    catch (e) {}\n    return emptyData\n}\nfunction makeDictionaryPairs(data, theKeys) {\n    let newDictionary = {}\n    try {\n        data.map(function (value) {\n            const key = value[theKeys[0]]\n            newDictionary[key] = value[theKeys[1]]\n            return true\n        }, theKeys)\n    }\n    catch (e) {}\n    return newDictionary\n}\nfunction linesConstructor(dataArray, tintArray, state, tooltip) {\n    const lines = dataArray.lines\n    const tooltipElement = tooltip ? [<Tooltip/>] : []\n    let converted = []\n    let drawn = []\n    lines.map(function (line, lineIndex) {\n        line.values.map(function (y, x) {\n            const partPoint = {}\n            partPoint[\"index\"] = x;\n            partPoint[line.name] = y;\n            converted[x] = Object.assign(partPoint, converted[x])\n            return partPoint\n        })\n        drawn.push(\n            <Line\n                type={\"monotone\"}\n                dot={{r: 3}}\n                id={lineIndex}\n                dataKey={line.name}\n                stroke={tintArray[lineIndex]}\n                strokeWidth={2}\n            />\n        )\n        return converted\n    })\n\n    return (\n        <LineChart\n            data={converted}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            <Legend/>\n            {tooltipElement}\n            {drawn}\n        </LineChart>\n    )\n}\nfunction barConstructor(dataArray, tintArray, state, label) {\n    let keys = []\n    dataArray.map(function (x) {\n        keys.push(Object.keys(x))\n        return x\n    })\n    keys = keys[0]\n    const barContent = keys.map(function (key, index) {\n        let labelSet = []\n        if (label === true) {\n            labelSet = [<LabelList dataKey={key} position=\"top\" style={{fill: 'var(--themeColor)'}}/>]\n\n        }\n        return (\n            <Bar\n                dataKey={key}\n                fill={tintArray[index]}\n                isAnimationActive={false}\n            >\n                {labelSet}\n            </Bar>\n        )\n    }, label)\n\n    return (\n        <BarChart\n            data={dataArray}\n            width={state.width}\n            height={state.height}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend/>\n        </BarChart>\n    )\n}\nfunction pieConstructor(dataArray, tintArray, state, label) {\n    const nameKey = Object.keys(dataArray[0])[0]\n    const dataKey = Object.keys(dataArray[0])[1]\n    console.log(dataKey + '/' +nameKey)\n    const barContent = dataArray.map(function (key, index) {\n        let labelSet = []\n        if (label === true) {\n            labelSet = <LabelList dataKey={key} position=\"top\" style={{fill: 'var(--themeColor)'}}/>\n        }\n        return (\n            <Pie\n                data={dataArray}\n                namekey={'key'}\n                dataKey={dataKey}\n                fill={tintArray[index]}\n            >\n                {labelSet}\n            </Pie>\n        )\n    }, label)\n\n    return (\n        <PieChart\n            width={state}\n            height={state}\n            style={transformToCentre}\n        >\n            {barContent}\n            <Legend/>\n        </PieChart>\n    )\n}\n\nexport class Dashboard extends React.Component {\n    render() {\n        const data = fixDictionaryKeys(this.props.data, this.props.keys, this.props.zoom)\n        const size = this.props.size * 1.25\n        const innerRadius = size / 3.75\n        const spacing = 0\n        const tint = this.props.tint === undefined ? [\"#137A7F\", \"#373B3E\", \"#E12885\", \"#66CCFF\"] : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner}\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(0, 1)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[0]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, top: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(1, 2)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[1]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', left: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(2, 3)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[2]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                <RadialBarChart\n                    style={{position: 'absolute', right: spacing, bottom: spacing}}\n                    width={size}\n                    height={size}\n                    data={data.slice(3, 4)}\n                    innerRadius={innerRadius}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        minAngle={0}\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint[3]}/>\n                    </RadialBar>\n                    <Legend verticalAlign={\"middle\"} align={\"center\"} iconSize={0}\n                            wrapperStyle={{transform: \"translateX(4px)\"}}/>\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class DashboardOne extends React.Component {\n    greatLegend(value) {\n        return (<span>{value}</span>)\n    }\n\n    render() {\n        const tint = this.props.tint === undefined ? \"#137A7F\" : this.props.tint\n        const frame = {height: \"100%\", width: \"100%\", borderRadius: defaultRoundCorner, align: \"center\"}\n        const size = this.props.size\n        let nameLabel;\n        if (this.props.children !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <RadialBarChart\n                    data={[this.props.data]}\n                    width={size}\n                    height={size}\n                    innerRadius={size / 2}\n                    style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\"\n                    }}\n                >\n                    <PolarAngleAxis\n                        type={\"number\"}\n                        domain={[0, 100]}\n                        angleAxisId={0}\n                        tick={false}\n                    />\n                    <RadialBar\n                        angleAxisId={0}\n                        dataKey={\"value\"}\n                        cornerRadius={\"100%\"}\n                        background={{fill: 'var(--themeControlBackground)'}}\n                    >\n                        <Cell fill={tint}/>\n                    </RadialBar>\n                    <Legend\n                        verticalAlign={\"middle\"}\n                        align={\"center\"}\n                        iconSize={0}\n                        wrapperStyle={{transform: \"translateX(4px)\"}}\n                        formatter={this.greatLegend}\n                    />\n                </RadialBarChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class Trends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n            },\n            {\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n            },\n            {\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n            },\n            {\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n            },\n            {\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n            },\n            {\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n            },\n            {\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n            },\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {borderRadius: defaultRoundCorner}\n        const tint = [\"#A00\", \"#00A\"]\n        let nameLabel;\n        if (this.state.name !== undefined) {\n            nameLabel = [\n                <label className={'widgetLabel'}>\n                    {this.props.children}\n                </label>\n            ]\n        }\n        else {\n            nameLabel = <React.Fragment/>\n        }\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <LineChart\n                    data={this.state.data}\n                    width={port.width}\n                    height={port.height}\n                    style={transformToCentre}\n                >\n                    <CartesianGrid/>\n                    <XAxis/>\n                    <YAxis/>\n                    <Legend/>\n                    <Line dataKey={\"uv\"} stroke={tint[0]} strokeWidth={2} dot={{r: 3}}/>\n                    <Line dataKey={\"pv\"} stroke={tint[1]} strokeWidth={2} dot={{r: 3}}/>\n                </LineChart>\n                {nameLabel}\n            </div>\n        )\n    }\n}\n\nexport class SimpleTrends extends React.Component {\n    render() {\n        const port = this.props.port\n        const frame = {\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: defaultRoundCorner\n        }\n        const tint = this.props.tint === undefined ? [\"#EA0\", \"#08A\"] : this.props.tint\n        const dataToConstruct = fixDictionaryKeys(this.props.data, this.props.keys)\n        let nameLabel = makeAvailable(this.props.children)\n\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {linesConstructor(dataToConstruct, tint, port, this.props.tooltip)}\n                <label className={'widgetLabel'}>\n                    {nameLabel}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class SimpleBars extends React.Component {\n    componentDidMount() {\n        this.render()\n    }\n\n    render() {\n        const dataToConstruct = this.props.keys === undefined ? this.props.data : makeDictionaryPairs(this.props.data, this.props.keys)\n        const tint = setTintArray(this.props.tint)\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"borderRadius\": defaultRoundCorner\n        }\n        return (\n            <div className={\"Layer\"} style={frame}>\n                {barConstructor([dataToConstruct], tint, this.props.port, this.props.label)}\n                {makeAvailable(this.props.children)}\n            </div>\n        )\n    }\n}\n\nexport class AreaChartTrends extends React.Component {\n    constructor(props) {\n        super(props);\n        const mockData = [\n            {\n                \"name\": \"Page A\",\n                \"uv\": 4000,\n                \"pv\": 2400,\n                \"amt\": 2400\n            },\n            {\n                \"name\": \"Page B\",\n                \"uv\": 3000,\n                \"pv\": 1398,\n                \"amt\": 2210\n            },\n            {\n                \"name\": \"Page C\",\n                \"uv\": 2000,\n                \"pv\": 9800,\n                \"amt\": 2290\n            },\n            {\n                \"name\": \"Page D\",\n                \"uv\": 2780,\n                \"pv\": 3908,\n                \"amt\": 2000\n            },\n            {\n                \"name\": \"Page E\",\n                \"uv\": 1890,\n                \"pv\": 4800,\n                \"amt\": 2181\n            },\n            {\n                \"name\": \"Page F\",\n                \"uv\": 2390,\n                \"pv\": 3800,\n                \"amt\": 2500\n            },\n            {\n                \"name\": \"Page G\",\n                \"uv\": 3490,\n                \"pv\": 4300,\n                \"amt\": 2100\n            }\n        ]\n        this.state = {\n            name: this.props.children,\n            data: this.props.data === undefined ? mockData : this.props.data\n        }\n    }\n\n\n    render() {\n        const port = this.props.port\n        const frame = {\n            borderRadius: defaultRoundCorner\n        }\n        return (\n            <div className={'Layer'} style={frame}>\n                <AreaChart\n                    width={port.width}\n                    height={port.height}\n                    data={this.state.data}\n                    style={transformToCentre}\n                >\n                    <defs>\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                            <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                    <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                </AreaChart>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n    }\n}\n\nexport class GreatLegends extends React.Component {\n    getFromData(data, index, key) {\n        try {return data[index][key]}\n        catch (error) {}\n        return undefined\n    }\n    makeEmpty(inside) {\n        return (inside === null || inside === undefined) ? '--' : inside\n    }\n    render() {\n        const frame = {\n            \"width\": \"100%\",\n            \"height\": \"100%\",\n            \"border-radius\": defaultRoundCorner\n        }\n        if (this.props.type === 'array')\n        return (\n            <div className={\"Layer\"} style={frame}>\n                <div className={'GLContainer'}>\n                    <div className={'GLName'}>\n                        {this.getFromData(this.props.data, this.props.index, this.props.keys[0])}\n                    </div>\n                    <div className={'GLValue'}>\n                        {this.makeEmpty(this.getFromData(this.props.data, this.props.index, this.props.keys[1]))}\n                    </div>\n                </div>\n                <label className={'widgetLabel'}>\n                    {makeAvailable(this.props.children)}\n                </label>\n            </div>\n        )\n        if (this.props.type === 'straight') {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div className={'GLContainer'}>\n                        <div className=\"GLName\">\n                            {this.props.name}\n                        </div>\n                        <div className=\"GLValue\">\n                            {this.makeEmpty(this.props.value)}\n                        </div>\n                    </div>\n                    <label className={'widgetLabel'}>\n                        {makeAvailable(this.props.children)}\n                    </label>\n                </div>\n            )\n        }\n        return (<React.Fragment/>)\n    }\n}\n\nexport class SimplePieCharts extends React.Component {\n    render() {\n        const frame = {\n            width: \"100%\",\n            height: \"100%\",\n            borderRadius: defaultRoundCorner,\n        }\n        const duetFrame = {\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            borderRadius: defaultRoundCorner,\n            display: 'flex',\n            flexDirection: 'row'\n        }\n        const RADIAN = Math.PI / 180;\n        const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\n            const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n            return (\n                <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n                    {`${(percent * 100).toFixed(0)}%`}\n                </text>\n            )\n        }\n        if (this.props.duet === true) {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <div style={duetFrame}>\n                        <PieChart\n                            width={this.props.size}\n                            height={this.props.size}\n                        >\n                            <Pie\n                                data={this.props.data}\n                                nameKey={'key'}\n                                dataKey={'value'}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                            >\n                                {this.props.data.map((entry, index) => <Cell fill={this.props.tint[0][index % this.props.tint[0].length]}/>)}\n                            </Pie>\n                                <Legend/>\n                        </PieChart>\n                        <PieChart\n                            width={this.props.size}\n                            height={this.props.size}\n                        >\n                            <Pie\n                                data={this.props.data}\n                                nameKey={'key'}\n                                dataKey={'value'}\n                                isAnimationActive={false}\n                                labelLine={false}\n                                label={renderCustomizedLabel}\n                            >\n                                {this.props.data.map((entry, index) => <Cell fill={this.props.tint[1][index % this.props.tint[1].length]}/>)}\n                            </Pie>\n                            <Legend/>\n                        </PieChart>\n                    </div>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className={'Layer'} style={frame}>\n                    <PieChart\n                        width={this.props.size}\n                        height={this.props.size}\n                        style={transformToCentre}\n                    >\n                        <Pie\n                            data={this.props.data}\n                            nameKey={'key'}\n                            dataKey={'value'}\n                            labelLine={false}\n                            label={renderCustomizedLabel}\n                            isAnimationActive={false}\n                        >\n                            {this.props.data.map((entry, index) => <Cell fill={this.props.tint[index % this.props.tint.length]}/>)}\n                        </Pie>\n                        <Legend/>\n                    </PieChart>\n                    <label className={'widgetLabel'}>{makeAvailable(this.props.children)}</label>\n                </div>\n            )\n        }\n    }\n}","import React from \"react\";\nimport {Button as MNButton} from '@material-ui/core';\n\nconst MNButtonStyle = {\n    borderRadius: '999px',\n    backgroundColor: 'var(--themeButtonBackground)',\n    color: 'var(--themeColor)',\n}\n\nexport class Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n            type: (this.props.type !== undefined) ? this.props.type : \"\",\n            disabled: (this.props.disabled === true),\n        }\n    }\n\n    render() {\n        return(\n            <MNButton variant={\"contained\"} style={MNButtonStyle} onClick={this.state.onClick} type={this.state.type} disabled={this.state.disabled}>\n                {this.props.children}\n            </MNButton>\n        )\n    }\n}\n\nexport class ButtonDone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onClick: this.props.onClick,\n        }\n    }\n    render() {\n        return(\n            <button className={\"button Done\"} onClick={this.state.onClick}>\n                好\n            </button>\n        )\n    }\n}\n\nexport default Button","import React, { Suspense } from \"react\";\nimport store, { mapsStore } from \"../Store\";\nimport {\n    Button as MaterialButton,\n    Card, CardActions, CardContent, Typography,\n    FormControl, FormControlLabel, FormGroup, FormLabel,\n    Fade, Modal,\n    Checkbox, Slider, Select, MenuItem, TextField, InputLabel,\n} from \"@material-ui/core\";\nimport MapSwitch from \"../Controllers/Switch\";\nimport { Button } from \"../Controllers/Button\";\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst MapFuture = React.lazy(() => import('./Map'));\nconst PassengerMaps = React.lazy(() => import('./PassengerMaps'))\nconst defaultRoundCorner = 20;\nconst transformToCentre = {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n}\n\nfunction predictionRequest(userArguments) {\n    try {\n        axios.post('/python/predict', {\n            station: userArguments.boom.station,\n            flow: userArguments.boom.flow,\n            dayprop: userArguments.holiday,\n            weather: userArguments.weather.condition,\n            temperatures: [userArguments.weather.temperature.low, userArguments.weather.temperature.high],\n        })\n            .then(response => {console.log(response)})\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\n\nexport class MapsBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            datePicker: false,\n            argumentPicker: false,\n            activated: \"无\",\n            selectedTime: new Date(store.getState().timeline),\n            flowStats: true,\n            storeState: store.getState(),\n            mapsState: mapsStore.getState(),\n            userArguments: {\n                holiday: undefined,\n                weather: {\n                    enabled: false,\n                    condition: '阴',\n                    temperature: {\n                        low: undefined,\n                        high: undefined\n                    }\n                },\n                boom: {\n                    enabled: false,\n                    station: undefined,\n                    flow: undefined,\n                    type: 0,\n                    failure: false,\n                }\n            }\n        }\n        store.subscribe(() => this.setState({storeState: store.getState()}))\n        mapsStore.subscribe(() => this.setState({mapsState: mapsStore.getState()}))\n    }\n\n    handleOpen(modal) {\n        if (modal === 'datePicker') {this.setState({datePicker: !this.state.datePicker})}\n        if (modal === 'argumentPicker') {this.setState({argumentPicker: !this.state.argumentPicker})}\n    }\n    handleTime(e) {\n        this.setState({selectedTime: e})\n    }\n    handleChange(e, argument) {\n        let newArguments = this.state.userArguments\n        if (argument === 'holiday') {\n            newArguments.holiday = e.target.checked\n        }\n        if (argument === 'boomTick') {\n            newArguments.boom.enabled = e.target.checked\n        }\n        if (argument === 'boomType') {\n            newArguments.boom.type = e.target.value\n        }\n        if (argument === 'boom') {\n            newArguments.boom.station = this.state.stationSpectating\n            newArguments.boom.flow = e\n        }\n        if (argument === 'weatherTick') {\n            newArguments.weather.enabled = e.target.checked\n        }\n        if (argument === 'weatherTemperatureLow') {\n            newArguments.weather.temperature.low = e.target.value\n        }\n        if (argument === 'weatherTemperatureHigh') {\n            newArguments.weather.temperature.high = e.target.value\n        }\n        if (argument === 'weather') {\n            newArguments.weather.condition = e.target.value\n        }\n        if (argument === 'failure') {\n            newArguments.boom.failure = e.target.checked\n        }\n        this.setState({userArguments: newArguments})\n    }\n    handlePredictionUpdate(type) {\n        predictionRequest(this.state.userArguments, type)\n        alert('预测请求已经提交'+this.state.userArguments.boom.flow)\n        this.handleOpen('argumentPicker')\n    }\n    handleTimeUpdate() {\n        store.dispatch({\n            type: 'timeUpdate',\n            time: this.state.selectedTime\n        })\n        mapsStore.dispatch({\n            type: 'refresh'\n        })\n        this.handleOpen('datePicker')\n    }\n    triggerStats() {\n        this.setState({flowStats: !this.state.flowStats})\n    }\n    getStats() {\n        return(\n            <table className={'MapTable'}>\n                <tr>\n                    <td>线路</td>\n                    <td>{this.state.mapsState.lineSpectating}</td>\n                </tr>\n                <tr>\n                    <td>断面客流</td>\n                    <td>{this.state.mapsState.stationSpectating.flow}</td>\n                </tr>\n                <tr>\n                    <td>高峰时段</td>\n                    <td>9:00</td>\n                </tr>\n            </table>\n        )\n    }\n    stationArguments() {\n        if (this.state.stationSpectating === 'No') {\n            return (\n                <FormLabel component={'legend'}>没有选择站点</FormLabel>\n            )\n        }\n        else {\n            return (\n                <React.Fragment>\n                    <FormLabel component={'legend'}>{this.state.mapsState.stationSpectating.station}</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.userArguments.holiday}\n                                    onChange={(event) => this.handleChange(event, 'failure')}\n                                />\n                            }\n                            label={'故障'}\n                        />\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.userArguments.boom.enabled}\n                                        onChange={(event) => this.handleChange(event, 'boomTick')}\n                                    />\n                                }\n                                label={'突发客流'}\n                            />\n                            <FormGroup row>\n                                <Select\n                                    labelId={'客流类型'}\n                                    id={'客流类型'}\n                                    value={this.state.userArguments.boom.type}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(event) => this.handleChange(event, 'boomType')}\n                                    style={{width: '100%'}}\n                                >\n                                    <MenuItem value={0}>进站</MenuItem>\n                                    <MenuItem value={1}>出站</MenuItem>\n                                    <MenuItem value={2}>进站加</MenuItem>\n                                    <MenuItem value={3}>出站加</MenuItem>\n                                </Select>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Slider\n                                    defaultValue={3000}\n                                    valueLabelDisplay=\"auto\"\n                                    step={10}\n                                    marks\n                                    min={10}\n                                    max={110}\n                                    disabled={!this.state.userArguments.boom.enabled}\n                                    onChange={(foo, event) => this.handleChange(event, 'boom')}\n                                />\n                            </FormGroup>\n                        </FormGroup>\n\n                    </FormGroup>\n                </React.Fragment>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"Layer\"} style={{borderRadius: defaultRoundCorner}}>\n                <div\n                    className={\"MapStats\"}\n                    style={{\n                        opacity: (this.state.flowStats) ? 1 : 0,\n                        userSelect: (this.state.flowStats) ? \"text\" : \"none\",\n                        cursor: (this.state.flowStats) ? \"text\" : \"default\"\n                    }}\n                >\n                    {this.getStats()}\n                </div>\n                <div className={'MapTimestamp'}>\n                    <span>预览时间线</span>\n                    <span className={this.state.storeState.timeNoGo === true ? '' : 'noGo'}>{this.state.storeState.timeNoGo === true ? '数据可用' : '该时间无数据'}</span>\n                    <br />\n                    <span className={'TimestampDate'}>\n                        {moment(this.state.storeState.timeline).format('MM-DD-YYYY HH:MM')}\n                    </span>\n                </div>\n                <div className={\"MapControllers\"}>\n                    <MapSwitch\n                        switchOptions={[\"无\", \"热力图\"]}\n                        setState={(e) => (this.setState(e))}\n                        state={this.state}\n                    />\n                    <div style={{display: \"flex\", flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <Button onClick={() => this.handleOpen('datePicker')}>\n                            日期\n                        </Button>\n                        <div style={{width: '.5em'}}/>\n                        <Button onClick={() => store.dispatch({type: 'timeUpdate', live: true})}>\n                            实时\n                        </Button>\n                    </div>\n\n                    <Button onClick={() => this.triggerStats()}>\n                        {(this.state.flowStats) ? '隐藏' : '显示'}数据\n                    </Button>\n                    {this.state.flowStats ? <Button onClick={() => this.handleOpen('argumentPicker')}>模拟数据变更</Button> : ''}\n                    <Modal open={this.state.datePicker}>\n                        <Fade in={this.state.datePicker}>\n                            <Card className={\"Panel\"} style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        选择日期\n                                    </Typography>\n                                </CardContent>\n                                <div style={{margin: \"0 20px\"}}>\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                                        <KeyboardDateTimePicker\n                                            value={this.state.selectedTime}\n                                            onChange={(e) => this.handleTime(e)}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </div>\n                                <CardActions>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"primary\"}\n                                        onClick={() => this.handleTimeUpdate(this.state.storeState.time)}\n                                    >\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton\n                                        size={\"small\"}\n                                        color={\"default\"}\n                                        onClick={() => this.handleOpen('datePicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.argumentPicker}>\n                        <Fade in={this.state.argumentPicker}>\n                            <Card style={transformToCentre}>\n                                <CardContent>\n                                    <Typography gutterBottom variant={\"h5\"} component={\"h2\"}>\n                                        输入参数\n                                    </Typography>\n                                    <div className={'DualPanel'}>\n                                        <FormControl component={'fieldset'}>\n                                            <FormLabel component={'legend'}>该时间操作</FormLabel>\n                                            <FormGroup row>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.holiday}\n                                                            onChange={this.state}\n                                                        />\n                                                    }\n                                                    label={'放假'}\n                                                />\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <FormControlLabel\n                                                    control={\n                                                        <Checkbox\n                                                            checked={this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weatherTick')}\n                                                        />\n                                                    }\n                                                    label={'变更天气'}\n                                                />\n                                                <FormGroup>\n                                                    <FormControl>\n                                                        <InputLabel id={'天气选择标签'}>\n                                                            天气类型\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"天气选择\"\n                                                            id=\"天气选择\"\n                                                            value={this.state.userArguments.weather.condition}\n                                                            disabled={!this.state.userArguments.weather.enabled}\n                                                            onChange={(event) => this.handleChange(event, 'weather')}\n                                                        >\n                                                            <MenuItem value={'阴'}>阴</MenuItem>\n                                                            <MenuItem value={'晴'}>晴</MenuItem>\n                                                            <MenuItem value={'多云'}>多云</MenuItem>\n                                                            <MenuItem value={'小雨'}>小雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>中雨</MenuItem>\n                                                            <MenuItem value={'大雨'}>大雨</MenuItem>\n                                                            <MenuItem value={'中雨'}>暴雨</MenuItem>\n                                                            <MenuItem value={'雷阵雨'}>雷阵雨</MenuItem>\n                                                        </Select>\n                                                    </FormControl>\n\n                                                    <TextField\n                                                        id={'最低温度输入'}\n                                                        label={'输入最低摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureLow')}\n                                                    />\n                                                    <TextField\n                                                        id={'最高温度输入'}\n                                                        label={'输入最高摄氏温度'}\n                                                        type={'number'}\n                                                        style={{marginTop: 15}}\n                                                        InputLabelProps={{shrink: true,}}\n                                                        disabled={!this.state.userArguments.weather.enabled}\n                                                        onChange={(event) => this.handleChange(event, 'weatherTemperatureHigh')}\n                                                    />\n                                                </FormGroup>\n                                            </FormGroup>\n                                        </FormControl>\n                                        <br />\n                                        <FormControl component={'fieldset'}>\n                                            {this.stationArguments()}\n                                        </FormControl>\n                                    </div>\n                                </CardContent>\n                                <CardActions>\n                                    <MaterialButton size={\"small\"} color={\"primary\"} onClick={() => this.handlePredictionUpdate('meow')}>\n                                        完成\n                                    </MaterialButton>\n                                    <MaterialButton size={\"small\"} color={\"default\"} onClick={() => this.handleOpen('argumentPicker')}>\n                                        取消\n                                    </MaterialButton>\n                                </CardActions>\n                            </Card>\n                        </Fade>\n                    </Modal>\n                </div>\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={\"MLPlaceholder\"}>地图正在加载……</div>}>\n                        <MapFuture\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                            mode={this.state.activated}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class PassengerMapsBlock extends React.Component {\n    render() {\n        return (\n            <div className={'Layer'} style={{borderRadius: defaultRoundCorner}}>\n                <div className={'Huge'} style={transformToCentre}>\n                    <Suspense fallback={<div className={'MLPlaceholder'}>乘客画像地图正在加载……</div>}>\n                        <PassengerMaps\n                            height={this.props.port.height}\n                            width={this.props.port.width}\n                        />\n                    </Suspense>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport { MapsBlock } from '../Widgets/MapsBlock';\nimport { mapsStore } from \"../Store\";\n\nconst body = document.body\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8),\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 8)\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size, mapsState} = this.state\n        return (\n            <div className={\"OverviewGrid\"} key={'pages-index'}>\n                <div className={\"div1\"}>\n                    <Widgets.DashboardOne size={size} data={mapsState.highestFlow}>\n                        客流最高站点\n                    </Widgets.DashboardOne>\n                </div>\n                <div className={\"div2\"}>\n                    <Widgets.GreatLegends type={'straight'} name={'全网客流量指数'} value={mapsState.overallFlow}>\n                        重点客流量\n                    </Widgets.GreatLegends>\n                </div>\n                <div className={\"div3\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.highestDist4}\n                        zoom={0.1}\n                        tint={['#6099DB', '#DC73BC', '#7BDB6B', '#DBD455']}\n                    >\n                        客流高峰区域\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div4\"}>\n                    <Widgets.Dashboard\n                        size={size}\n                        data={mapsState.lineFlow}\n                        keys={['linename', 'flow']}\n                        tint={['#6BDB9C', '#DBC760', '#5685DB', '#D9734C']}\n                    >\n                        客流高峰线路\n                    </Widgets.Dashboard>\n                </div>\n                <div className={\"div5\"}>\n                    <MapsBlock\n                        port={{\"height\": size * 5, \"width\": size * 4}}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Index","import React from \"react\";\nimport './style.css';\nimport * as Widgets from \"../Widgets/widgets\";\nimport {mapsStore} from \"../Store\";\n\nconst body = document.body\n\nexport class LineHeat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n        }\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    calculateSize = () => {\n        this.setState({\n            width: body.scrollWidth / 2,\n            height: body.scrollHeight / 10,\n        })\n    }\n    componentDidMount() {\n        window.addEventListener('resize', this.calculateSize)\n        this.calculateSize()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {height, width, mapsState} = this.state\n        return(\n            <div className={\"LHGrid\"} key={'pages-line-heat'}>\n                <div className=\"div1\">\n                    <React.Suspense fallback={<div className={'Panel'}/>}>\n                        <Widgets.SimpleBars\n                            port={{height: height, width: width * 2}}\n                            data={mapsState.lineFlow}\n                            keys={['linename', 'flow']}\n                            tint={['#09B8A3', '#23EB62', '#F0438F', '#EBBF23', '#A1C0F5', '#0977B8', '#B98AF5', '#F7DF34', '#F75A43', '#65A1C2']}\n                            label={true}\n                        />\n                    </React.Suspense>\n                </div>\n                <div className=\"div2\"></div>\n                <div className=\"div3\"></div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n                <div className=\"div7\"></div>\n                <div className=\"div8\"></div>\n                <div className=\"div9\"></div>\n                <div className=\"div10\"></div>\n                <div className=\"div11\"></div>\n                <div className=\"div12\"></div>\n                <div className=\"div13\"></div>\n                <div className=\"div14\"></div>\n                <div className=\"div15\"></div>\n                <div className=\"div16\"></div>\n                <div className=\"div17\"></div>\n                <div className=\"div18\"></div>\n                <div className=\"div19\"></div>\n                <div className=\"div20\"></div>\n            </div>\n        )\n    }\n}\n\nexport class HeatTimeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    calculateSize = () => {\n        this.setState({\n            size: body.scrollHeight / 5\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    render() {\n        const {size} = this.state\n        return(\n            <div className={\"THGrid\"} key={'pages-timeline-heat'}>\n                <div className=\"div1\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div2\">\n                    <Widgets.Trends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div3\">\n                    <Widgets.AreaChartTrends\n                        port={{'height': size * 1, 'width': body.scrollWidth - 60}}\n                    />\n                </div>\n                <div className=\"div4\"></div>\n                <div className=\"div5\"></div>\n                <div className=\"div6\"></div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './style.css';\nimport * as Widgets from '../Widgets/widgets';\nimport {PassengerMapsBlock} from \"../Widgets/MapsBlock\";\nimport {mapsStore} from \"../Store\";\n\nconst body = document.body\n\nclass PassengerAnalytics extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsState: mapsStore.getState().dashboardData,\n        }\n    }\n\n    calculateSize = () => {\n        this.setState({\n            height: body.scrollHeight / 6,\n            width: body.scrollWidth / 6,\n            size: Math.min(body.scrollHeight / 6, body.scrollWidth / 10)\n        })\n        mapsStore.subscribe(() => {\n            this.setState({mapsState: mapsStore.getState().dashboardData})\n        })\n    }\n    componentDidMount() {\n        this.calculateSize()\n        window.addEventListener('resize', this.calculateSize)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.calculateSize)\n    }\n\n    ArrayCoherence(keys, values) {\n        let newArray = []\n        values.map(function (value, index) {\n            let newDictionary = {\n                key: keys[index],\n                value: value\n            }\n            newArray.push(newDictionary)\n            return true\n        })\n        return newArray\n    }\n\n    render() {\n        const {height, width, size} = this.state\n        return(\n            <React.Fragment>\n                <div className={\"PAGrid\"}>\n                    <div className=\"div1\">\n                        <PassengerMapsBlock\n                            port={{height: height * 4, width: width * 2}}\n                        />\n                        {/*<Widgets.SimpleBars*/}\n                        {/*    port={{\"height\": size, \"width\": size * 2}}*/}\n                        {/*    tint={[\"#2196f3\", \"#8bc34a\"]}*/}\n                        {/*    data={{u:90, p:5}}*/}\n                        {/*>*/}\n                        {/*    Simple Bars*/}\n                        {/*</Widgets.SimpleBars>*/}\n                    </div>\n                    <div className=\"div2\">\n                        <Widgets.SimplePieCharts\n                            size={size * 2}\n                            duet\n                            tint={[['#09B8A3', '#23EB62'], ['#F0438F', '#EBBF23']]}\n                            data={this.ArrayCoherence(['u', 'v'], [88, 99])}\n                            data0={this.ArrayCoherence(['u', 'v'], [88, 99])}\n                        >\n                            当前站点乘客结构\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div3\">\n                        <Widgets.SimplePieCharts\n                            size={size * 2}\n                            data={this.ArrayCoherence(['u', 'v'], [88, 99])}\n                            tint={['#A1C0F5', '#0977B8']}\n                        >\n                            线网乘客结构\n                        </Widgets.SimplePieCharts>\n                    </div>\n                    <div className=\"div4\"></div>\n                    <div className=\"div5\"></div>\n                    <div className=\"div6\"></div>\n                    <div className=\"div7\"></div>\n                    <div className=\"div8\"></div>\n                    <div className=\"div9\"></div>\n                    <div className=\"div10\"></div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PassengerAnalytics","import React from \"react\";\nimport \"./style.css\"\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (this.props.type !== undefined) ? this.props.type : \"text\"\n        }\n    }\n\n    render() {\n        return(\n            <div className={'InputFunction'}>\n                <label>\n                    {this.props.children}\n                </label>\n                <input className={'coilsInput'} type={this.state.type} onChange={(event => this.props.handler(event))}/>\n            </div>\n        )\n    }\n}\n\nexport default Input","import React from \"react\";\nimport { Input, Button } from '../Controllers';\nimport { FormGroup, FormLabel, Slider, Button as MaterialButton } from '@material-ui/core'\nimport axios from \"axios\";\nimport './style.css';\nimport store, { setExpiration, clearStorage } from \"../Store\";\nimport { ThemeSwitch } from \"../Controllers/Switch\";\n\nfunction loginRequest(username, password) {\n    try {\n        axios.post('/api/log', {\n            'username': username,\n            'password': password\n        }).then(function (response) {\n            console.log(response.data)\n            alert(response.data.msg)\n            if (response.data.code === 200) {\n                store.dispatch({\n                    type: 'login',\n                    loginState: true,\n                    session: response.data\n                })\n            }\n        })\n    }\n    catch (error) {\n        alert('网络连接出现了一些问题')\n        console.error(error);\n    }\n}\n\nclass CertForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: 1,\n        }\n    }\n    CertChange(type) {\n        let feedbackInfo\n        if (type === 'logout') {\n            feedbackInfo = '注销凭据完成'\n            const action = {\n                type: 'certMan',\n                logout: true\n            }\n            store.dispatch(action)\n        }\n        if (type === 'cache') {\n            feedbackInfo = '保存凭据' + this.state.duration +'天'\n            setExpiration(this.state.duration)\n        }\n        alert(feedbackInfo)\n    }\n    handleSlider = (event, newValue) => {\n        this.setState({duration: newValue})\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <ThemeSwitch/>\n                <div className={'Description'}>\n                    可以按 [K] 快速切换主题\n                </div>\n                <form\n                    style={{marginTop: '2em'}}\n                    onSubmit={() => this.CertChange('cache', this.state.duration)}\n                >\n                    <FormGroup>\n                        <FormLabel style={{color: 'var(--ThemeColor)'}} component={'legend'}>保存凭据时长（天）</FormLabel>\n                        <div style={{margin: '0 auto', width: 'calc(100% - 20px)'}}>\n                            <Slider\n                                defaultValue={1}\n                                valueLabelDisplay=\"auto\"\n                                step={5}\n                                marks\n                                min={1}\n                                max={31}\n                                onChange={this.handleSlider}\n                            />\n                        </div>\n                    </FormGroup>\n                    <div style={{display: \"flex\", flexDirection: 'row'}}>\n                        <Button type={'submit'}>\n                            保存凭据\n                        </Button>\n                        <div style={{width: '.5em'}}/>\n                        <Button onClick={() => this.CertChange('logout')}>\n                            注销\n                        </Button>\n                    </div>\n                    <br />\n                    <MaterialButton\n                        size={'small'}\n                        style={{color: '#F66'}}\n                        onClick={() => clearStorage()}\n                    >\n                        清除本地数据并注销\n                    </MaterialButton>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store: store.getState(),\n            username: '',\n            password: ''\n        }\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){\n        this.setState(store.getState())\n    }\n    handleLogin(event) {\n        event.preventDefault()\n        loginRequest(this.state.username, this.state.password)\n    }\n    handleForm(event, type) {\n        if (type === 'username') {\n            this.setState({username: event.target.value})\n        }\n        if (type === 'password') {\n            this.setState({password: event.target.value})\n        }\n    }\n\n    render() {\n        let FormSheet, hello\n        const LoginForm = [\n            <form onSubmit={(e) => this.handleLogin(e)}>\n                <div className={\"AuthForm\"}>\n                    <div>\n                        <Input handler={(e) => {this.handleForm(e, 'username')}}>\n                            用户名称\n                        </Input>\n                        <Input type={\"password\"} handler={(e) => {this.handleForm(e, 'password')}}>\n                            密码\n                        </Input>\n                    </div>\n                    <div className={\"Button\"}>\n                        <Button type={\"submit\"}>\n                            好\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        ]\n\n        if (this.state.store.loginState) {\n            FormSheet = [<CertForm/>]\n            hello = \"认证管理\"\n        }\n        else {\n            FormSheet = LoginForm\n            hello = \"认证\"\n        }\n\n        return (\n            <React.Fragment>\n                <div id={'Amaze'}/>\n                <div id={'ActualCard'}>\n                    <h1>\n                        {hello}\n                    </h1>\n                </div>\n                <div id={'Maze'}/>\n                    <section className={\"AuthCard\"}>\n                        {FormSheet}\n                    </section>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    NavLink,\n} from \"react-router-dom\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport Overview from \"./Overview\";\nimport { LineHeat, HeatTimeline } from \"./LineHeat\";\nimport PassengerAnalytics from \"./PassengerAnalytics\";\nimport Login from \"./Authenticate\";\nimport './index.css';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store, {exposedMethods, mapsStore} from \"./Store\";\n\nconst root = document.documentElement\n\nfunction setTheme() {\n    if (store.getState().theme === 'light') {\n        root.style.setProperty('--themeTable', '#E3E3E3')\n        root.style.setProperty('--themeBorder', 'none')\n        root.style.setProperty('--themeColor', '#443')\n        root.style.setProperty('--themeHover', '#220')\n        root.style.setProperty('--themeActive', '#220')\n        root.style.setProperty('--themeLayer', 'rgba(250, 250, 250, 0.8)')\n        root.style.setProperty('--themeFilter', 'screen')\n        root.style.setProperty('--themeDarkFilter', 'brightness(1.17)')\n        root.style.setProperty('--themePure0', 'rgba(255, 255, 255, 1)')\n        root.style.setProperty('--themePure1', 'rgba(255, 255, 255, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(80, 80, 80, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#FFF')\n        root.style.setProperty('--controlBlur', '#553')\n        root.style.setProperty('--dockBorderSize', '1px')\n        root.style.setProperty('--actualFilter', 'rgba(255, 255, 255, .8)')\n    }\n    if (store.getState().theme === 'dark') {\n        root.style.setProperty('--themeTable', '#171717')\n        root.style.setProperty('--themeBorder', '0 0 1.5px #EEE')\n        root.style.setProperty('--themeColor', '#EEE')\n        root.style.setProperty('--themeHover', '#AAB')\n        root.style.setProperty('--themeActive', '#FFF')\n        root.style.setProperty('--themeLayer', 'rgba(53, 53, 53, 0.8)')\n        root.style.setProperty('--themeFilter', 'multiply')\n        root.style.setProperty('--themeDarkFilter', 'brightness(.25)')\n        root.style.setProperty('--themePure0', 'rgba(64, 64, 64, 1)')\n        root.style.setProperty('--themePure1', 'rgba(0, 0, 0, 0)')\n        root.style.setProperty('--themeControlBackground', 'rgba(255, 255, 255, 0.1)')\n        root.style.setProperty('--themeButtonBackground', '#535353')\n        root.style.setProperty('--controlBlur', '#BBC')\n        root.style.setProperty('--dockBorderSize', '2px')\n        root.style.setProperty('--actualFilter', 'rgba(0, 0, 25, .15)')\n\n    }\n}\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {storeState: store.getState()}\n        this.storeChange = this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n\n    storeChange(){this.setState({storeState: store.getState()})}\n    componentDidMount() {\n        mapsStore.dispatch({type: 'refresh'})\n    }\n\n    render() {\n        setTheme()\n        let pagesList = []\n        if (this.state.storeState.loginState === true) {\n            pagesList.push(\n                <Switch>\n                    <Route exact path={\"./\"}>\n                        <Redirect to={\"Overview\"}/>\n                    </Route>\n                    <Route path={\"*\"} component={AnimationApp}/>\n                </Switch>\n            )\n        }\n        else {\n            pagesList.push(\n                <Switch>\n                    <Route path={\"*\"}>\n                        <Login />\n                    </Route>\n                </Switch>\n            )\n        }\n        return (\n            <PersistGate store={store} persistor={exposedMethods}>\n                <Router>\n                    {pagesList}\n                </Router>\n            </PersistGate>\n        )\n    }\n}\n\nclass AnimationApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            handling: 0,\n            redirect: undefined\n        }\n    }\n    wary(e) {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        this.setState({redirect: e})\n        this.setState({redirect: undefined})\n    }\n    themeSwitcherWary() {\n        if (this.state.handling === 1) {\n            return\n        }\n        this.setState({handling: 1})\n        store.dispatch({type: 'switchTheme'})\n    }\n\n    componentDidMount() {\n        let done = () => {\n            this.setState({handling: 0})\n        }\n        store.subscribe(() => {\n            setTimeout(done, 500, done)\n        })\n        this.props.history.listen(location => {\n            mapsStore.dispatch({type: 'refresh'})\n            if (this.props.location.pathname !== location.pathname) {\n                setTimeout(done, 500, done)\n            }\n        })\n    }\n    render() {\n        const redirect = {\n            state: this.state.redirect,\n            handling: this.state.handling,\n            set: (e) => this.wary(e),\n            done: () => this.done()\n        }\n        const themeSwitchKey = () => this.themeSwitcherWary()\n\n        function handleShortcutKey(key) {\n            const destination = ['Overview', 'LineHeat', 'HeatTimeline', 'PassengerAnalytics', 'Authenticate']\n            redirect.set(<Redirect to={destination[key - 1]}/>)\n        }\n        // keyboard shortcuts\n        window.addEventListener(\"keyup\", function (e) {\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (e.key !== undefined) {\n                if (e.key === '1') {handleShortcutKey(1)}\n                if (e.key === '2') {handleShortcutKey(2)}\n                if (e.key === '3') {handleShortcutKey(3)}\n                if (e.key === '4') {handleShortcutKey(4)}\n                if (e.key === 'L' || e.key === 'l') {handleShortcutKey(5)}\n                if (e.key === 'K' || e.key === 'k') {themeSwitchKey()}\n                return;\n            }\n            else if (e.code !== undefined) {\n                if (e.code === 'Digit1') {handleShortcutKey(1)}\n                if (e.code === 'Digit2') {handleShortcutKey(2)}\n                if (e.code === 'Digit3') {handleShortcutKey(3)}\n                if (e.code === 'Digit4') {handleShortcutKey(4)}\n                if (e.code === 'KeyL') {handleShortcutKey(5)}\n                if (e.code === 'KeyK') {themeSwitchKey()}\n                return;\n            }\n        })\n\n        return (\n            <React.Fragment>\n                {this.state.redirect}\n                <div className=\"Dock\">\n                    <NavLink key={\"Overview\"} to={\"Overview\"} activeClassName={\"active\"} exact>\n                        <button className={\"DockNavigation\"}>概览<span>1</span></button>\n                    </NavLink>\n                    <NavLink key={\"LineHeat\"} to={\"LineHeat\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>线路分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"HeatTimeline\"} to={\"HeatTimeline\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>时段分析<span>2</span></button>\n                    </NavLink>\n                    <NavLink key={\"PassengerAnalytics\"} to={\"PassengerAnalytics\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>用户画像<span>3</span></button>\n                    </NavLink>\n                    <NavLink key={\"Authenticate\"} to={\"Authenticate\"} activeClassName={\"active\"}>\n                        <button className={\"DockNavigation\"}>认证与设置<span>L</span></button>\n                    </NavLink>\n                </div>\n                <TransitionGroup>\n                    <CSSTransition\n                        key={this.props.location}\n                        classNames={\"fade\"}\n                        timeout={250}\n                    >\n                        <Switch>\n                            <Route path={`*/Overview`} component={Overview}/>\n                            <Route path={`*/LineHeat`} component={LineHeat}/>\n                            <Route path={`*/HeatTimeline`} component={HeatTimeline}/>\n                            <Route path={`*/PassengerAnalytics`} component={PassengerAnalytics}/>\n                            <Route path={`*/Authenticate`} component={Login}/>\n                            <Route path={`*`}>\n                                <Redirect to={\"Overview\"}/>\n                            </Route>\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}